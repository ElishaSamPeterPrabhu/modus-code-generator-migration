{
  "component_name": "modus-slider",
  "version": "v1",
  "props": [
    {
      "name": "ariaLabel",
      "description": "/** (optional) The slider's aria-label. */",
      "type": "string | null"
    },
    {
      "name": "disabled",
      "description": "/** (optional) The slider's aria-label. */",
      "type": "'disabled' : ''}`"
    },
    {
      "name": "label",
      "description": "/** (optional) The slider's aria-label. */",
      "type": "string"
    },
    {
      "name": "maxValue",
      "description": "/** (optional) The slider's aria-label. */",
      "type": ""
    },
    {
      "name": "minValue",
      "description": "/** (optional) The slider's aria-label. */",
      "type": ""
    },
    {
      "name": "value",
      "description": "/** (optional) The slider's aria-label. */",
      "type": ""
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "disabled": "false",
    "label": "{this.ariaLabel || undefined}\n        class={className}\n        style={{ '--value-percent': `${this.valuePercent}%`, marginBottom: '50px', marginTop: '50px' }}>\n        {this.label && <label htmlFor={this.sliderId}>{this.label}</label>}\n        <input\n          class=\"slider\"\n          disabled={this.disabled}\n          id={this.sliderId}\n          max={this.maxValue}\n          min={this.minValue}\n          onChange={(event) => this.handleOnChange(event)}\n          onInput={(event) => this.handleOnInput(event)}\n          type=\"range\"\n          value={this.value}\n        />\n      </div>\n    )",
    "maxValue": "100",
    "minValue": "0",
    "value": "'50'"
  },
  "documentation": "\n\n--- modus-slider-storybook-docs.mdx ---\n\n# Slider\n\n---\n\n[Modus Slider](https://modus.trimble.com/components/sliders/) web components are referenced using the `<modus-slider>` custom HTML element.\n\n### Default\n\n<modus-slider label=\"Slider\"></modus-slider>\n\n<br />\n\n<modus-slider disabled label=\"Disabled slider\"></modus-slider>\n\n```html\n<modus-slider label=\"Slider\"></modus-slider> <modus-slider disabled label=\"Disabled slider\"></modus-slider>\n```\n\n### Properties\n\n| Name         | Description                    | Type      | Options | Default Value | Required |\n| ------------ | ------------------------------ | --------- | ------- | ------------- | -------- |\n| `aria-label` | The slider's aria-label        | `string`  |         |               |          |\n| `disabled`   | Whether the slider is disabled | `boolean` |         | false         |          |\n| `label`      | The slider's label             | `string`  |         |               |          |\n| `max-value`  | The slider's maximum value     | `number`  |         |               |          |\n| `min-value`  | The slider's minimum value     | `number`  |         |               |          |\n| `value`      | The slider's value             | `number`  |         |               |          |\n\n### DOM Events\n\n| Name          | Description           | Emits              |\n| ------------- | --------------------- | ------------------ |\n| `valueChange` | Fires on value change | The slider's value |\n| `valueInput`  | Fires on value input  | The input value    |\n\n### Accessibility\n\n- Slider must be provided with either a `label` or an `aria-label` - but not both.\n",
  "storybook_content": "\n\n--- modus-slider.stories.tsx ---\n\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-slider-storybook-docs.mdx';\nimport { html } from 'lit-html';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\nexport default {\n  title: 'Components/Slider',\n  argTypes: {\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The slider's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    disabled: {\n      description: 'Whether the slider is disabled',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    label: {\n      description: \"The slider's label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    maxValue: {\n      name: 'max-value',\n      description: \"The slider's maximum value\",\n      table: {\n        defaultValue: { summary: 100 },\n        type: { summary: 'number' },\n      },\n    },\n    minValue: {\n      name: 'min-value',\n      description: \"The slider's minimum value\",\n      table: {\n        defaultValue: { summary: 0 },\n        type: { summary: 'number' },\n      },\n    },\n    value: {\n      description: \"The slider's value\",\n      table: {\n        defaultValue: { summary: 0 },\n        type: { summary: 'number' },\n      },\n    },\n  },\n  parameters: {\n    actions: {\n      handles: ['valueChange', 'valueInput'],\n    },\n    controls: { expanded: true, sort: 'requiredFirst' },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=1856-12373&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\n\nconst Template = ({ ariaLabel, disabled, label, maxValue, minValue, value }) => html`\n  <modus-slider\n    aria-label=${ariaLabel}\n    ?disabled=${disabled}\n    label=${label}\n    max-value=${maxValue}\n    min-value=${minValue}\n    value=${value}>\n  </modus-slider>\n`;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  ariaLabel: '',\n  disabled: false,\n  label: 'Label',\n  maxValue: 100,\n  minValue: 0,\n  value: 50,\n};\n",
  "storybook": {
    "examples": [
      "<modus-slider\n    aria-label=${ariaLabel}\n    ?disabled=${disabled}\n    label=${label}\n    max-value=${maxValue}\n    min-value=${minValue}\n    value=${value}>\n  </modus-slider>",
      "\n  <modus-slider\n    aria-label=${ariaLabel}\n    ?disabled=${disabled}\n    label=${label}\n    max-value=${maxValue}\n    min-value=${minValue}\n    value=${value}>\n  </modus-slider>\n"
    ],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-slider"
}