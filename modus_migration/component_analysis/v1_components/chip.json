{
  "component_name": "modus-chip",
  "version": "v1",
  "props": [
    {
      "name": "ariaLabel",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "string | null"
    },
    {
      "name": "chipStyle",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "'outline' | 'solid'"
    },
    {
      "name": "disabled",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "'disabled' : ''}\n      ${this.hasError ? 'has-error' : ''}\n      ${this.classByChipStyle.get(this.chipStyle)}\n      ${this.classBySize.get(this.size)}\n      ${!this.showCheckmark && !this.imageUrl ? 'no-left-icon' : null}\n      ${!this.showClose ? 'no-right-icon' : null}\n      ${this.active ? 'active' : ''}\n    `"
    },
    {
      "name": "hasError",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "'has-error' : ''}\n      ${this.classByChipStyle.get(this.chipStyle)}\n      ${this.classBySize.get(this.size)}\n      ${!this.showCheckmark && !this.imageUrl ? 'no-left-icon' : null}\n      ${!this.showClose ? 'no-right-icon' : null}\n      ${this.active ? 'active' : ''}\n    `"
    },
    {
      "name": "imageUrl",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "string"
    },
    {
      "name": "advancedChip",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "boolean"
    },
    {
      "name": "showCheckmark",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "(\n          <IconCheck size"
    },
    {
      "name": "showClose",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "'no-right-icon' : null}\n      ${this.active ? 'active' : ''}\n    `"
    },
    {
      "name": "size",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "'medium' | 'small'"
    },
    {
      "name": "value",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "string"
    },
    {
      "name": "chipId",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "string"
    },
    {
      "name": "maxWidth",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "string"
    },
    {
      "name": "active",
      "description": "/** (optional) The chip's aria-label. */",
      "type": "'active' : ''}\n    `"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "chipStyle": "'solid'",
    "disabled": "false",
    "hasError": "false",
    "imageUrl": "{this.imageUrl} alt=\"\" />\n        ) : this.showCheckmark ? (\n          <IconCheck size={'16'}></IconCheck>\n        ) : null}\n        <span {...style}>{this.value}</span>\n        {this.advancedChip && <ModusIconMap icon=\"caret_down\" size={'16'}></ModusIconMap>}\n        {this.showClose ? (\n          this.advancedChip ? (\n            <IconClose onClick={this.disabled ? null : (event) => this.onCloseClick(event)} size={'16'}></IconClose>\n          ) : (\n            <IconRemove onClick={this.disabled ? null : (event) => this.onCloseClick(event)} size={'16'}></IconRemove>\n          )\n        ) : null}\n      </button>\n    )",
    "advancedChip": "\"button\">\n        {this.imageUrl ? (\n          <img src={this.imageUrl} alt=\"\" />\n        ) : this.showCheckmark ? (\n          <IconCheck size={'16'}></IconCheck>\n        ) : null}\n        <span {...style}>{this.value}</span>\n        {this.advancedChip && <ModusIconMap icon=\"caret_down\" size={'16'}></ModusIconMap>}\n        {this.showClose ? (\n          this.advancedChip ? (\n            <IconClose onClick={this.disabled ? null : (event) => this.onCloseClick(event)} size={'16'}></IconClose>\n          ) : (\n            <IconRemove onClick={this.disabled ? null : (event) => this.onCloseClick(event)} size={'16'}></IconRemove>\n          )\n        ) : null}\n      </button>\n    )",
    "showCheckmark": "false",
    "showClose": "false",
    "size": "'medium'",
    "active": "false"
  },
  "documentation": "\n\n--- modus-chip-storybook-docs.mdx ---\n\nimport { Anchor } from '@storybook/addon-docs';\nimport { Meta, Story } from '@storybook/blocks';\nimport * as Chip from './modus-chip.stories.tsx';\n\n# Chip\n\n---\n\n[Modus Chip](https://modus.trimble.com/components/web/chips/) web components are referenced using the `<modus-chip>` custom HTML element.\n\n<Anchor storyId=\"components-chip--default\" />\n\n### Default\n\n<modus-chip image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close value=\"Bryan\"></modus-chip>\n<modus-chip active image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close value=\"Bryan\"></modus-chip>\n<modus-chip has-error image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close value=\"Bryan\"></modus-chip>\n<modus-chip disabled image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close value=\"Bryan\"></modus-chip>\n\n<Anchor storyId=\"components-chip--outline\" />\n\n### Outline\n\n<modus-chip image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n<modus-chip active image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n<modus-chip has-error image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n<modus-chip disabled image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n\n### Checkmark, Small\n\n<modus-chip show-checkmark size=\"small\" value=\"Pets OK\"></modus-chip>\n\n### Chips with chip-id\n\n<modus-chip image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close chip-id=\"chip-id-1\" size=\"small\" value=\"Pet 1\"></modus-chip>\n<modus-chip image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\" show-close chip-id=\"chip-id-2\" size=\"small\" value=\"Pet 2\"></modus-chip>\n\n### Advanced Chip\n\n<Story of={Chip.AdvancedChip} />\n\n```html\n<modus-chip image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></modus-chip>\n<modus-chip active image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></modus-chip>\n<modus-chip has-error image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></modus-chip>\n<modus-chip disabled image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></modus-chip>\n\n<modus-chip image-url=\"https://example.com/image.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n<modus-chip active image-url=\"https://example.com/image.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n<modus-chip has-error image-url=\"https://example.com/image.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n<modus-chip disabled image-url=\"https://example.com/image.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n\n<modus-chip\n  image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\"\n  show-close\n  chipId=\"chip-1\"\n  size=\"small\"\n  value=\"Pet 1\"></modus-chip>\n<modus-chip\n  image-url=\"https://randomuser.me/api/portraits/lego/1.jpg\"\n  show-close\n  chipId=\"chip-2\"\n  size=\"small\"\n  value=\"Pet 2\"></modus-chip>\n<modus-dropdown label=\"Dropdown\" ?disabled=\"${disabled}\" id=\"dropdown\" toggle-element-id=\"toggleElement\" animate-list>\n  <modus-chip id=\"toggleElement\" slot=\"dropdownToggle\" advanced-chip value=\"Processes Type\"> </modus-chip>\n  <modus-list slot=\"dropdownList\">\n    <modus-list-item value=\"1\" disabled borderless>Select Process</modus-list-item>\n    <modus-list-item value=\"2\" borderless>First Option (FO)</modus-list-item>\n    <modus-list-item value=\"3\" borderless>Second Option (SO)</modus-list-item>\n    <modus-list-item value=\"4\" borderless>Next Option (NO)</modus-list-item>\n    <modus-list-item value=\"4\" borderless>Another Option (AO)</modus-list-item>\n  </modus-list>\n</modus-dropdown>\n\n<script>\n  const chip = document.querySelector('modus-chip');\n  const dropdown = document.querySelector('modus-dropdown');\n  const list = document.querySelector('modus-list');\n  let itemSelected = false;\n  dropdown.addEventListener('dropdownClose', (e) => {\n    console.log('dropdownClose');\n    if (!itemSelected) {\n      chip.active = false;\n    }\n  });\n  chip.addEventListener('chipClick', (e) => {\n    console.log('chipClick');\n    chip.active = true;\n    dropdown.toggleDropdown = true;\n  });\n  chip.addEventListener('closeClick', (e) => {\n    console.log('chipClose');\n    chip.value = 'Processes Type';\n    chip.active = false;\n    chip.showClose = false;\n    dropdown.toggleDropdown = false;\n  });\n  list.addEventListener('itemClick', (e) => {\n    console.log('listItem', e.srcElement.innerText);\n    chip.value = 'Processes Type: ' + e.srcElement.innerText;\n    chip.showClose = true;\n    chip.active = true;\n    itemSelected = true;\n  });\n</script>\n```\n\n### Properties\n\n| Name           | Description                                                         | Type    | Options            | Default Value | Required |\n| -------------- | ------------------------------------------------------------------- | ------- | ------------------ | ------------- | -------- |\n| active         | Whether the chip is active                                          | boolean |                    | false         |          |\n| aria-label     | The chip's aria-label                                               | string  |                    |               |          |\n| chip-style     | The chip's style                                                    | string  | 'outline', 'solid' | 'solid'       |          |\n| disabled       | Whether the chip is disabled                                        | boolean |                    | false         |          |\n| has-error      | Whether the chip has an error                                       | boolean |                    | false         |          |\n| image-url      | The chip's image url                                                | string  |                    |               |          |\n| show-checkmark | Whether to show the checkmark                                       | boolean |                    | false         |          |\n| show-close     | Whether to show the close icon                                      | boolean |                    | false         |          |\n| size           | The chip's size                                                     | string  | 'medium', 'small'  | 'medium'      |          |\n| advanced-chip  | Whether the chip is in advanced state                               | boolean |                    | false         |          |\n| value          | The chip's value                                                    | string  |                    |               |          |\n| maxWidth       | Maximum width for the Chip's text and shows ellipsis when truncated | string  |                    |               |          |\n| chipId         | This chip's id will create much more visibility for testing         | string  |                    |               |          |\n\n### DOM Events\n\n| Name       | Description               | Emits                     |\n| ---------- | ------------------------- | ------------------------- |\n| chipClick  | Fires on chip click       | KeyboardEvent, MouseEvent |\n| closeClick | Fires on close icon click | KeyboardEvent, MouseEvent |\n\n### Accessibility\n\n- Chip gets an `aria-label` provided by the `aria-label` property input.\n- Chip gets an `aria-disabled` set to whether Chip is disabled.\n- When Chip has focus, <kbd>Enter</kbd> emits the `chipClick` event.\n- When Chip has focus, <kbd>Escape</kbd> emits the `closeClick` event.\n",
  "storybook_content": "\n\n--- modus-chip.stories.tsx ---\n\nimport { html } from 'lit-html';\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-chip-storybook-docs.mdx';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\nexport default {\n  title: 'Components/Chip',\n  argTypes: {\n    active: {\n      name: 'active',\n      description: 'Whether the chip is active',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The chip's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    advancedChip: {\n      name: 'advanced-chip',\n      description: 'Whether the chip is advanced',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    chipStyle: {\n      name: 'chip-style',\n      options: ['solid', 'outline'],\n      type: 'select',\n      description: 'The style of the chip',\n      table: {\n        defaultValue: { summary: `'solid'` },\n        type: { summary: `'solid' | 'outline'` },\n      },\n    },\n    disabled: {\n      description: 'Whether the chip is disabled',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    hasError: {\n      name: 'has-error',\n      description: 'Whether the chip has an error',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    imageUrl: {\n      name: 'image-url',\n      description: \"The chip's image URL\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    showCheckmark: {\n      name: 'show-checkmark',\n      description: 'Whether to show the checkmark',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    showClose: {\n      name: 'show-close',\n      description: 'Whether to show the close icon',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    size: {\n      options: ['medium', 'small'],\n      type: 'select',\n      description: 'The size of the chip',\n      table: {\n        defaultValue: { summary: `'medium'` },\n        type: { summary: `medium' | 'small'` },\n      },\n    },\n    value: {\n      description: \"The chip's value\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    maxWidth: {\n      description: \"Chip text's maximum width\",\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '100px' },\n      },\n    },\n    chipId: {\n      description: \"This chip's id will create much more visibility for testing\",\n      table: {\n        type: { summary: `string` },\n      },\n    },\n  },\n  parameters: {\n    controls: { expanded: true },\n    actions: {\n      handles: ['chipClick', 'closeClick'],\n    },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=1346-13&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\n\nexport const Default = ({\n  active,\n  ariaLabel,\n  advancedChip,\n  chipStyle,\n  disabled,\n  hasError,\n  imageUrl,\n  maxWidth,\n  showCheckmark,\n  showClose,\n  size,\n  value,\n  chipId,\n}) => html`\n  <modus-chip\n    active=${active}\n    aria-label=${ariaLabel}\n    ?advanced-chip=${advancedChip}\n    chip-style=${chipStyle}\n    ?disabled=${disabled}\n    has-error=${hasError}\n    image-url=${imageUrl}\n    max-width=${maxWidth}\n    show-checkmark=${showCheckmark}\n    show-close=${showClose}\n    size=${size}\n    value=${value}\n    chip-id=${chipId}>\n  </modus-chip>\n`;\nDefault.args = {\n  active: false,\n  ariaLabel: '',\n  advancedChip: false,\n  chipStyle: 'solid',\n  disabled: false,\n  hasError: false,\n  imageUrl: 'https://randomuser.me/api/portraits/lego/1.jpg',\n  maxWidth: '100px',\n  showCheckmark: false,\n  showClose: false,\n  size: 'medium',\n  value: 'Bryan',\n  chipId: '',\n};\n\nexport const Outline = ({\n  active,\n  ariaLabel,\n  advancedChip,\n  chipStyle,\n  disabled,\n  hasError,\n  imageUrl,\n  maxWidth,\n  showCheckmark,\n  showClose,\n  size,\n  value,\n}) => html`\n  <modus-chip\n    active=${active}\n    aria-label=${ariaLabel}\n    ?advanced-chip=${advancedChip}\n    chip-style=${chipStyle}\n    ?disabled=${disabled}\n    has-error=${hasError}\n    image-url=${imageUrl}\n    max-width=${maxWidth}\n    show-checkmark=${showCheckmark}\n    show-close=${showClose}\n    size=${size}\n    value=${value}>\n  </modus-chip>\n`;\nOutline.args = {\n  active: false,\n  ariaLabel: '',\n  advancedChip: false,\n  chipStyle: 'outline',\n  disabled: false,\n  hasError: false,\n  imageUrl: 'https://randomuser.me/api/portraits/lego/1.jpg',\n  maxWidth: '100px',\n  showCheckmark: false,\n  showClose: false,\n  size: 'medium',\n  value: 'Bryan',\n};\n\nexport const AdvancedChip = ({\n  active,\n  ariaLabel,\n  advancedChip,\n  chipStyle,\n  disabled,\n  hasError,\n  imageUrl,\n  maxWidth,\n  showCheckmark,\n  showClose,\n  size,\n  value,\n}) => html`\n  <modus-dropdown label=\"Dropdown\" ?disabled=${disabled} id=\"dropdown\" toggle-element-id=\"toggleElement\" animate-list>\n    <modus-chip\n      id=\"toggleElement\"\n      slot=\"dropdownToggle\"\n      active=${active}\n      aria-label=${ariaLabel}\n      ?advanced-chip=${advancedChip}\n      chip-style=${chipStyle}\n      ?disabled=${disabled}\n      has-error=${hasError}\n      image-url=${imageUrl}\n      max-width=${maxWidth}\n      show-checkmark=${showCheckmark}\n      show-close=${showClose}\n      size=${size}\n      value=${value}>\n    </modus-chip>\n    <modus-list slot=\"dropdownList\">\n      <modus-list-item value=\"1\" disabled borderless>Select Process</modus-list-item>\n      <modus-list-item value=\"2\" borderless>First Option (FO)</modus-list-item>\n      <modus-list-item value=\"3\" borderless>Second Option (SO)</modus-list-item>\n      <modus-list-item value=\"4\" borderless>Next Option (NO)</modus-list-item>\n      <modus-list-item value=\"4\" borderless>Another Option (AO)</modus-list-item>\n    </modus-list>\n  </modus-dropdown>\n\n  ${setAdvancedChip()}\n`;\nAdvancedChip.args = {\n  active: false,\n  ariaLabel: '',\n  advancedChip: true,\n  chipStyle: 'outline',\n  disabled: false,\n  hasError: false,\n  imageUrl: '',\n  maxWidth: '',\n  showCheckmark: false,\n  showClose: false,\n  size: 'medium',\n  value: 'Processes Type',\n};\n\nconst setAdvancedChip = () => {\n  const tag = document.createElement('script');\n  tag.innerHTML = `\n      const chip = document.querySelector('#toggleElement');\n      const dropdown = document.querySelector('modus-dropdown');\n      const list = document.querySelector('modus-list');\n      let itemSelected = false;\n      dropdown.addEventListener('dropdownClose', (e) => {\n        console.log('dropdownClose');\n        if(!itemSelected) {\n          chip.active = false;\n        }\n      });\n      chip.addEventListener('chipClick', (e) => {\n        console.log('chipClick');\n        chip.active = true;\n        dropdown.toggleDropdown = true;\n      });\n      chip.addEventListener('closeClick', (e) => {\n        console.log('chipClose');\n        chip.value = 'Processes Type';\n        chip.active = false;\n        chip.showClose = false;\n        dropdown.toggleDropdown = false;\n\n      });\n      list.addEventListener('itemClick', (e) => {\n        console.log('listItem', e.srcElement.innerText);\n        chip.value = 'Processes Type: ' + e.srcElement.innerText;\n        chip.showClose = true;\n        chip.active = true;\n        itemSelected = true;\n      });\n  `;\n  return tag;\n};\n",
  "storybook": {
    "examples": [
      "<modus-chip\n    active=${active}\n    aria-label=${ariaLabel}\n    ?advanced-chip=${advancedChip}\n    chip-style=${chipStyle}\n    ?disabled=${disabled}\n    has-error=${hasError}\n    image-url=${imageUrl}\n    max-width=${maxWidth}\n    show-checkmark=${showCheckmark}\n    show-close=${showClose}\n    size=${size}\n    value=${value}\n    chip-id=${chipId}>\n  </modus-chip>",
      "<modus-chip\n    active=${active}\n    aria-label=${ariaLabel}\n    ?advanced-chip=${advancedChip}\n    chip-style=${chipStyle}\n    ?disabled=${disabled}\n    has-error=${hasError}\n    image-url=${imageUrl}\n    max-width=${maxWidth}\n    show-checkmark=${showCheckmark}\n    show-close=${showClose}\n    size=${size}\n    value=${value}>\n  </modus-chip>",
      "<modus-chip\n      id=\"toggleElement\"\n      slot=\"dropdownToggle\"\n      active=${active}\n      aria-label=${ariaLabel}\n      ?advanced-chip=${advancedChip}\n      chip-style=${chipStyle}\n      ?disabled=${disabled}\n      has-error=${hasError}\n      image-url=${imageUrl}\n      max-width=${maxWidth}\n      show-checkmark=${showCheckmark}\n      show-close=${showClose}\n      size=${size}\n      value=${value}>\n    </modus-chip>",
      "<modus-list-item value=\"1\" disabled borderless>Select Process</modus-list-item>",
      "<modus-list-item value=\"2\" borderless>First Option (FO)</modus-list-item>"
    ],
    "variants": [],
    "prop_usage": {
      "label": [
        "Dropdown"
      ],
      "id": [
        "dropdown",
        "toggleElement"
      ],
      "slot": [
        "dropdownToggle",
        "dropdownList"
      ],
      "value": [
        "1",
        "2",
        "3",
        "4"
      ]
    }
  },
  "tag_name": "modus-chip"
}