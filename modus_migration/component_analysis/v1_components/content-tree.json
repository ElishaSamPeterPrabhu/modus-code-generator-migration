{
  "component_name": "modus-content-tree",
  "version": "v1",
  "props": [],
  "events": [],
  "slots": [],
  "default_values": {},
  "documentation": "\n\n--- modus-content-tree-storybook-docs.mdx ---\n\nimport { Meta, Story } from '@storybook/blocks';\nimport * as ContentTree from './modus-content-tree.stories';\n\n# Content Tree\n\n---\n\n[Modus Content Tree](https://modus.trimble.com/components/content-tree/) provides users with a way to navigate nested hierarchical information using a parent-child relationship model.\nIt is located on the left side of the screen and cannot be combined with Side Navigation or Toolbar.\n\n#### Implementation Details\n\n- Content tree can be created using the components `modus-tree-view` in the root and `modus-tree-view-item` for nodes.\n- The `modus-tree-view-item` takes `nodeId` which should be a unique id and the `label` prop to display the node text.\n- Clicking on collapse/expand button expands or collapse a tree view item and clicking on the node selects it.\n- By default multiple items selection is disabled. The prop `multi-selection` lets multiple items to be selected using `Shift + Up/Down arrow` and `Ctrl + click`.\n- Checkbox selection can be enabled using the prop `checkbox-selection` and to let multiple checkbox selection use the prop `multi-checkbox-selection`.\n- This component utilizes the slot element, allowing you to render custom expand icon, collapse icon, drag icon, item icon and the slot names are `expandIcon`, `collapseIcon`, `dragIcon`, `itemIcon`.\n- By default `label` prop is used for displaying the node text. Custom label element can be added through the slot `label`.\n\n### Default\n\n<Story id=\"components-content-tree--default\" />\n\n```html\n<modus-tree-view\n  style=\"width:400px;\"\n  checkbox-selection=\"false\"\n  checked-items=\"false\"\n  expanded-items=\"false\"\n  multi-checkbox-selection=\"false\"\n  multi-selection=\"false\"\n  selected-items=\"false\"\n  size=\"\"\n  class=\"hydrated\">\n  <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"2\" label=\"Personal\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"3\" label=\"Work\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"4\" label=\"Social\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"5\" label=\"More ...\" class=\"hydrated\"></modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"6\" label=\"Archived\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"7\" label=\"Folder1\" class=\"hydrated\">\n      <modus-tree-view-item node-id=\"8\" label=\"File1\" class=\"hydrated\"></modus-tree-view-item>\n      <modus-tree-view-item node-id=\"9\" label=\"Folder2\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"10\" label=\"File2\" class=\"hydrated\"></modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"11\" label=\"File3\" class=\"hydrated\"></modus-tree-view-item>\n    </modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"12\" label=\"Spam\" class=\"hydrated\"></modus-tree-view-item>\n</modus-tree-view>\n```\n\n### With Icon\n\n<Story of={ContentTree.WithIcon} />\n\n```html\n<modus-tree-view style=\"width:400px;\" class=\"hydrated\">\n  <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\">\n    <svg slot=\"itemIcon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"16\" width=\"16\" viewBox=\"0 0 32 32\">\n      <path\n        d=\"M28.79 12.39A1 1 0 0 0 28 12h-2V9c0-.55-.45-1-1-1h-9.59l-1.7-1.71C13.52 6.11 13.27 6 13 6H4c-.55 0-1 .45-1 1v17c0 .04.02.07.02.11.01.05.02.11.04.16.02.09.06.17.1.25.02.03.02.06.05.09.01.01.03.02.04.03.07.08.15.14.23.19.04.03.06.05.1.07.13.06.27.1.42.1h21c.13 0 .25-.03.36-.07.04-.02.07-.04.1-.06.07-.04.14-.08.2-.13.03-.03.06-.06.09-.1.05-.05.09-.11.12-.18a.31.31 0 0 0 .06-.13c.01-.02.03-.04.03-.07l3-11c.09-.3.02-.62-.17-.87zM5 8h7.59l1.7 1.71c.19.18.44.29.71.29h9v2H7c-.45 0-.85.3-.96.74L5 16.53V8z\"></path>\n    </svg>\n    <modus-tree-view-item node-id=\"2\" label=\"Personal\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"3\" label=\"Work\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"4\" label=\"Social\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"5\" label=\"More ...\" is-last-child=\"true\" class=\"hydrated\"></modus-tree-view-item>\n  </modus-tree-view-item>\n</modus-tree-view>\n```\n\n### Condensed\n\n<Story of={ContentTree.Condensed} />\n\n```html\n<modus-tree-view\n  style=\"width:400px;\"\n  checkbox-selection=\"true\"\n  checked-items=\"false\"\n  expanded-items=\"false\"\n  multi-checkbox-selection=\"false\"\n  multi-selection=\"false\"\n  selected-items=\"false\"\n  size=\"condensed\"\n  class=\"hydrated\">\n  <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"2\" label=\"Personal\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"3\" label=\"Work\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"4\" label=\"Social\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"5\" label=\"More ...\" class=\"hydrated\"></modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"6\" label=\"Archived\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"7\" label=\"Folder1\" class=\"hydrated\">\n      <modus-tree-view-item node-id=\"8\" label=\"File1\" class=\"hydrated\"></modus-tree-view-item>\n      <modus-tree-view-item node-id=\"9\" label=\"Folder2\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"10\" label=\"File2\" class=\"hydrated\"></modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"11\" label=\"File3\" class=\"hydrated\"></modus-tree-view-item>\n    </modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"12\" label=\"Spam\" class=\"hydrated\"></modus-tree-view-item>\n</modus-tree-view>\n```\n\n### Borderless\n\n<Story of={ContentTree.Borderless} />\n\n```html\n<modus-tree-view\n  borderless=\"true\"\n  style=\"width:400px;\"\n  checkbox-selection=\"true\"\n  checked-items=\"false\"\n  expanded-items=\"false\"\n  multi-checkbox-selection=\"false\"\n  multi-selection=\"false\"\n  selected-items=\"false\"\n  size=\"condensed\">\n  <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"2\" label=\"Personal\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"3\" label=\"Work\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"4\" label=\"Social\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"5\" label=\"More ...\" class=\"hydrated\"></modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"6\" label=\"Archived\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"7\" label=\"Folder1\" class=\"hydrated\">\n      <modus-tree-view-item node-id=\"8\" label=\"File1\" class=\"hydrated\"></modus-tree-view-item>\n      <modus-tree-view-item node-id=\"9\" label=\"Folder2\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"10\" label=\"File2\" class=\"hydrated\"></modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"11\" label=\"File3\" class=\"hydrated\"></modus-tree-view-item>\n    </modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"12\" label=\"Spam\" class=\"hydrated\"></modus-tree-view-item>\n</modus-tree-view>\n```\n\n### Multi Selection\n\n<Story of={ContentTree.MultiSelection} />\n\n```html\n<modus-tree-view\n  style=\"width:400px;\"\n  checkbox-selection=\"true\"\n  checked-items=\"false\"\n  expanded-items=\"false\"\n  multi-checkbox-selection=\"true\"\n  multi-selection=\"true\"\n  selected-items=\"false\"\n  size=\"\"\n  class=\"hydrated\">\n  <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"2\" label=\"Personal\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"3\" label=\"Work\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"4\" label=\"Social\" class=\"hydrated\"></modus-tree-view-item>\n    <modus-tree-view-item node-id=\"5\" label=\"More ...\" class=\"hydrated\"></modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"6\" label=\"Archived\" class=\"hydrated\">\n    <modus-tree-view-item node-id=\"7\" label=\"Folder1\" class=\"hydrated\">\n      <modus-tree-view-item node-id=\"8\" label=\"File1\" class=\"hydrated\"></modus-tree-view-item>\n      <modus-tree-view-item node-id=\"9\" label=\"Folder2\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"10\" label=\"File2\" class=\"hydrated\"></modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"11\" label=\"File3\" class=\"hydrated\"></modus-tree-view-item>\n    </modus-tree-view-item>\n  </modus-tree-view-item>\n  <modus-tree-view-item node-id=\"12\" label=\"Spam\" class=\"hydrated\"></modus-tree-view-item>\n</modus-tree-view>\n```\n\n### Custom Action Bar\n\n<Story of={ContentTree.CustomActionBar} />\n\n```html\n<div\n  id=\"tree-with-action-bar\"\n  style=\"display: flex; flex-direction: column; width: 400px;\">\n  <div\n    style=\"display: flex; justify-content: end; flex-wrap: wrap; margin-top: 1rem;\">\n    <modus-button\n      button-style=\"borderless\"\n      aria-label=\"Add\"\n      title=\"Add\"\n      size=\"small\"\n      color=\"primary\"\n      disabled\n      id=\"add\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n        <path d=\"M19,13H13v6H11V13H5V11h6V5h2v6h6Z\" fill=\"#252a2e\" />\n      </svg>\n    </modus-button>\n    <modus-button\n      button-style=\"borderless\"\n      aria-label=\"Remove\"\n      title=\"Remove\"\n      size=\"small\"\n      color=\"primary\"\n      disabled\n      id=\"remove\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n        <path\n          d=\"M6,19a2.006,2.006,0,0,0,2,2h8a2.006,2.006,0,0,0,2-2V7H6ZM19,4H15.5l-1-1h-5l-1,1H5V6H19Z\"\n          fill=\"#252a2e\" />\n      </svg>\n    </modus-button>\n    <modus-button\n      button-style=\"borderless\"\n      size=\"small\"\n      aria-label=\"Edit\"\n      title=\"Edit\"\n      color=\"primary\"\n      disabled\n      id=\"edit\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n        <path\n          d=\"M3,17.25V21H6.75L17.81,9.94,14.06,6.19ZM20.71,7.04a1,1,0,0,0,0-1.41L18.37,3.29a1,1,0,0,0-1.41,0L15.13,5.12l3.75,3.75,1.83-1.83Z\"\n          fill=\"#252a2e\" />\n      </svg>\n    </modus-button>\n    <modus-button\n      button-style=\"borderless\"\n      size=\"small\"\n      aria-label=\"Copy\"\n      title=\"Copy\"\n      color=\"primary\"\n      disabled\n      id=\"copy\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n        <path\n          d=\"M16,1H4A2.006,2.006,0,0,0,2,3V17H4V3H16Zm3,4H8A2.006,2.006,0,0,0,6,7V21a2.006,2.006,0,0,0,2,2H19a2.006,2.006,0,0,0,2-2V7A2.006,2.006,0,0,0,19,5Zm0,16H8V7H19Z\"\n          fill=\"#252a2e\" />\n      </svg>\n    </modus-button>\n    <modus-button\n      button-style=\"borderless\"\n      size=\"small\"\n      aria-label=\"Drag\"\n      title=\"Drag\"\n      color=\"primary\"\n      disabled\n      id=\"drag\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path\n          d=\"M11,18a2,2,0,1,1-2-2A2.006,2.006,0,0,1,11,18ZM9,10a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,10ZM9,4a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,4Zm6,4a2,2,0,1,0-2-2A2.006,2.006,0,0,0,15,8Zm0,2a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,10Zm0,6a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,16Z\"\n          fill=\"#252a2e\" />\n      </svg>\n    </modus-button>\n    <modus-button\n      button-style=\"borderless\"\n      size=\"small\"\n      aria-label=\"Expand\"\n      title=\"Expand\"\n      color=\"primary\"\n      disabled\n      id=\"expand\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path d=\"M0,0H24V24H0Z\" fill=\"rgba(0,0,0,0)\" />\n        <path\n          d=\"M12,5.83,15.17,9l1.41-1.41L12,3,7.41,7.59,8.83,9Zm0,12.34L8.83,15,7.42,16.41,12,21l4.59-4.59L15.17,15Z\"\n          fill=\"#252a2e\" /></svg\n    ></modus-button>\n    <modus-button\n      button-style=\"borderless\"\n      size=\"small\"\n      aria-label=\"Collapse\"\n      title=\"Collapse\"\n      color=\"primary\"\n      disabled\n      style=\"display: none\"\n      id=\"collapse\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n        <path\n          d=\"M7.41,18.59,8.83,20,12,16.83,15.17,20l1.41-1.41L12,14ZM16.59,5.41,15.17,4,12,7.17,8.83,4,7.41,5.41,12,10Z\"\n          fill=\"#252a2e\" />\n      </svg>\n    </modus-button>\n  </div>\n  <modus-tree-view>\n    <modus-tree-view-item node-Id=\"1\" label=\"Inbox\">\n      <modus-tree-view-item node-Id=\"2\" label=\"Personal\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"3\" label=\"Work\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"4\" label=\"Social\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"5\" label=\"More ...\"></modus-tree-view-item>\n    </modus-tree-view-item>\n    <modus-tree-view-item node-Id=\"6\" label=\"Archived\">\n      <modus-tree-view-item node-Id=\"7 is-last-child=\"true\" label=\"Folder1\">\n        <modus-tree-view-item node-Id=\"8\" label=\"File1\"></modus-tree-view-item>\n        <modus-tree-view-item node-Id=\"9\" is-last-child=\"true\" label=\"File3\"></modus-tree-view-item>\n      </modus-tree-view-item>\n    </modus-tree-view-item>\n  </modus-tree-view>\n</div>\n<script>\n  function actionBarScript() {\n    const container = document.querySelector(\"div[id='tree-with-action-bar']\");\n    const root = container.querySelector('modus-tree-view');\n    const addButton = container.querySelector(\"modus-button[id='add']\");\n    const removeButton = container.querySelector(\"modus-button[id='remove']\");\n    const editButton = container.querySelector(\"modus-button[id='edit']\");\n    const copyButton = container.querySelector(\"modus-button[id='copy']\");\n    const expandAllButton = container.querySelector(\n      \"modus-button[id='expand']\"\n    );\n    const collapseAllButton = container.querySelector(\n      \"modus-button[id='collapse']\"\n    );\n    const dragButton = container.querySelector(\"modus-button[id='drag']\");\n\n    const disableButtons = (disable) => {\n      removeButton.disabled = disable;\n      copyButton.disabled = disable;\n      editButton.disabled = disable;\n    };\n    const getChildren = (element) => {\n      const children = element.querySelectorAll('modus-tree-view-item');\n      if (!children) return [];\n      return Array.from(children).reduce((r, c) => {\n        r.push(c, ...getChildren(c));\n        return r;\n      }, []);\n    };\n    const getItems = () =>\n      new Map(\n        Array.from(root.querySelectorAll('modus-tree-view-item')).map((i) => [\n          i.nodeId,\n          i.label,\n        ])\n      );\n    const querySelect = (itemId) =>\n      container.querySelector(\"modus-tree-view-item[node-id='\" + itemId + \"']\");\n\n    addButton.disabled = false;\n    expandAllButton.disabled = false;\n    collapseAllButton.disabled = false;\n\n    container.addEventListener('itemClick', () => {\n      if (root.selectedItems.length > 0) {\n        disableButtons(false);\n      } else {\n        disableButtons(true);\n      }\n    });\n\n    addButton.addEventListener('buttonClick', () => {\n      const nodeId =\n        container.querySelectorAll('modus-tree-view-item').length + 1;\n      const selectedItems = root.selectedItems;\n      if (nodeId) {\n        const selectedItemId =\n          selectedItems && selectedItems.length > 0 ? selectedItems[0] : null;\n        const selectedItemElement = querySelect(selectedItemId);\n        const selectedItemParent = selectedItemElement?.parentElement;\n        const newNode = document.createElement('modus-tree-view-item');\n        newNode.nodeId = nodeId;\n        newNode.editable = true;\n        const insertParent = selectedItemParent || root;\n        const insertBeforeElement =\n          selectedItemElement || root.firstElementChild;\n        insertParent.insertBefore(newNode, insertBeforeElement);\n      }\n    });\n\n    removeButton.addEventListener('buttonClick', () => {\n      const selectedItems = root.selectedItems;\n      selectedItems?.forEach((i) => {\n        const selectedItemElement = querySelect(i);\n        const selectedItemParent = selectedItemElement?.parentElement;\n        if (selectedItemElement) {\n          selectedItemParent.removeChild(selectedItemElement);\n        }\n      });\n\n      if (!Array.from(getItems()).length) {\n        container\n          .querySelectorAll('modus-button')\n          .forEach((b) => (b.disabled = true));\n      } else disableButtons(true);\n    });\n\n    editButton.addEventListener('buttonClick', () => {\n      const selectedItems = root.selectedItems;\n      const selectedItemId =\n        selectedItems && selectedItems.length > 0 ? selectedItems[0] : null;\n      const selectedItemElement = querySelect(selectedItemId);\n      selectedItemElement.editable = true;\n    });\n\n    copyButton.addEventListener('buttonClick', () => {\n      const nodeId =\n        container.querySelectorAll('modus-tree-view-item').length + 1;\n      const selectedItems = root.selectedItems;\n      const selectedItemId =\n        selectedItems && selectedItems.length > 0 ? selectedItems[0] : null;\n      const selectedItemElement = querySelect(selectedItemId);\n      if (selectedItemElement) {\n        const newNode = selectedItemElement.cloneNode(true);\n        newNode.nodeId = nodeId;\n        newNode.editable = true;\n        newNode.label = 'Copy of ' + selectedItemElement.label;\n\n        let count = nodeId + 1;\n        getChildren(newNode).forEach((c) => {\n          c.nodeId = count;\n          count++;\n        });\n\n        (selectedItemElement.parentElement || root).insertBefore(\n          newNode,\n          selectedItemElement\n        );\n      }\n    });\n\n    expandAllButton.addEventListener('buttonClick', () => {\n      root.expandedItems = Array.from(getItems().keys());\n      expandAllButton.style.display = 'none';\n      collapseAllButton.style.display = 'inline-block';\n    });\n\n    collapseAllButton.addEventListener('buttonClick', () => {\n      root.expandedItems = [];\n      collapseAllButton.style.display = 'none';\n      expandAllButton.style.display = 'inline-block';\n    });\n\n    dragButton.addEventListener('buttonClick', () => {\n      root.enableReordering = !root.enableReordering;\n    });\n  }\n  actionBarScript();\n</script>\n```\n\n### Custom Filter\n\n<Story of={ContentTree.CustomFilter} />\n\n```html\n<div id=\"tree-with-filter\" style=\"display: flex; flex-direction: column; width: 400px;\">\n  <modus-text-input id=\"filter\" size=\"large\" placeholder=\"Search\" disabled=\"true\" include-search-icon></modus-text-input>\n  <modus-tree-view>\n    <modus-tree-view-item node-Id=\"1\">\n      <div slot=\"label\">Inbox</div>\n      <modus-tree-view-item node-Id=\"2\">\n        <div slot=\"label\">Personal</div>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"5\">\n        <div slot=\"label\">More ...</div>\n      </modus-tree-view-item>\n    </modus-tree-view-item>\n    <modus-tree-view-item node-Id=\"6\">\n      <div slot=\"label\">Archived</div>\n      <modus-tree-view-item is-last-child=\"true\" node-Id=\"7\">\n        <div slot=\"label\">Folder1</div>\n        <modus-tree-view-item node-Id=\"8\">\n          <div slot=\"label\">File1</div>\n        </modus-tree-view-item>\n        <modus-tree-view-item is-last-child=\"true\" node-Id=\"11\">\n          <div slot=\"label\">File2</div>\n        </modus-tree-view-item>\n      </modus-tree-view-item>\n    </modus-tree-view-item>\n  </modus-tree-view>\n</div>\n<script>\n  function filterScript() {\n    const container = document.querySelector(\"div[id='tree-with-filter']\");\n    const root = container.querySelector('modus-tree-view');\n\n    let items = new Map();\n    container.querySelectorAll('modus-tree-view-item').forEach((element) => {\n      items.set(element.nodeId, element.querySelector(\"div[slot='label']\").innerHTML);\n    });\n    root.expandedItems = Array.from(items.keys());\n\n    const filter = container.querySelector(\"modus-text-input[id='filter']\");\n    filter.disabled = false;\n\n    filter.addEventListener('valueChange', (e) => {\n      const searchText = e.detail;\n      if (searchText) {\n        const searchResult = [...items]\n          .filter(([key, value]) => {\n            return value.toLowerCase().indexOf(searchText) > -1;\n          })\n          .map(([key, value]) => key);\n        const getParents = (e) => {\n          if (e.parentNode && e.parentNode.nodeId) return [e.parentNode, ...getParents(e.parentNode)];\n          return [];\n        };\n        items.forEach((value, key) => {\n          const element = container.querySelector(\"modus-tree-view-item[node-id='\" + key + \"']\");\n          element.expanded = true;\n          if (searchResult.includes(key)) {\n            element.querySelector(\"div[slot='label']\").style.color = '#0063a3';\n            element.style.display = 'block';\n            getParents(element).forEach((e) => {\n              e.style.display = 'block';\n            });\n          } else {\n            element.querySelector(\"div[slot='label']\").style.color = undefined;\n            element.style.display = 'none';\n          }\n        });\n      } else {\n        items.forEach((value, key) => {\n          const element = container.querySelector(\"modus-tree-view-item[node-id='\" + key + \"']\");\n          element.querySelector(\"div[slot='label']\").style.color = '';\n          element.style.display = 'block';\n          element.expanded = false;\n        });\n      }\n    });\n  }\n\n  filterScript();\n</script>\n```\n\n### With Item Action Bar\n\n<Story of={ContentTree.WithActionBar} />\n\n```html\n<div>\n  <modus-tree-view\n    style=\"width:400px;\"\n    checkbox-selection=\"false\"\n    checked-items=\"false\"\n    expanded-items=\"false\"\n    multi-checkbox-selection=\"false\"\n    multi-selection=\"false\"\n    selected-items=\"false\"\n    size=\"\"\n    class=\"hydrated\">\n    <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\"></modus-tree-view-item>\n  </modus-tree-view>\n</div>\n<script>\n  function loadActions() {\n    document.querySelector('[node-id=\"1\"]').actions = [\n      { id: 'export', icon: 'export', label: 'Export' },\n      { id: 'history', icon: 'history', label: 'History' },\n      { id: 'edit', icon: 'pencil', label: 'Edit' },\n    ];\n  }\n  loadActions();\n</script>\n```\n\n### Accessibility\n\nEvery item and the elements such as drag icon, expand & collapse icon and the checkbox are accessible through keyboard. <kbd>Tab</kbd> key moves focus to the next focusable element and <kbd>Shift</kbd> + <kbd>Tab</kbd> moves focus to the previous focusable element. If `disableTabbing` is set `true`, tabbing inside the tree isn't allowed. Please refer to the next section for more details on keyboard interaction.\n\n### Keyboard Navigation\n\n| Key                   | Description                                                                                                                                                                                                                           |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Arrow Left            | Collapses the item                                                                                                                                                                                                                    |\n| Arrow Right           | Expands the item                                                                                                                                                                                                                      |\n| Arrow Up              | Moves to the previous focusable item and focus moves to a child if the current or previous parent item is expanded                                                                                                                    |\n| Arrow Down            | Moves to the next focusable item and focus moves to a child if the current or next parent item is expanded                                                                                                                            |\n| Ctrl + click          | If `multi-selection` is true, it performs multiple selection on the clicked items                                                                                                                                                     |\n| Enter                 | Using <kbd>Tab</kbd> key if the focus is set on an item, pressing `Enter` key will select it and if the focus is on an element like checkbox, collapse/expand icon, pressing `Enter` key will perform operations only on that element |\n| Shift + Arrow Up/Down | If `multi-selection` is true, it performs multiple selection starting from the item that is already selected                                                                                                                          |\n| Shift + Arrow Right   | Can be used to focus the checkbox inside a tree item if `disableTabbing` is true                                                                                                                                                      |\n| Space                 | Expands/Collapses the item when it is in focus                                                                                                                                                                                        |\n\n### Properties\n\n##### Modus Tree View\n\n| Property                 | Attribute                  | Description                                                                                                                                                                                            | Type                                   | Default      |\n| ------------------------ | -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------------------------------- | ------------ |\n| `borderless`             | `borderless`               | (optional) Whether the content tree and items have a border or not                                                                                                                                     | `boolean`                              | `undefined`  |\n| `enableReordering`       | `enable-reordering`        | (optional) Sets draggable state to be true to all the children                                                                                                                                         | `boolean`                              | `undefined`  |\n| `checkboxSelection`      | `checkbox-selection`       | (optional) Enables checkbox selection on each tree item                                                                                                                                                | `boolean`                              | `undefined`  |\n| `checkedItems`           | --                         | (optional) Set checked tree items                                                                                                                                                                      | `string[]`                             | `[]`         |\n| `disableTabbing`         | `disable-tabbing`          | (optional) Disable usage of <kbd>Tab</kbd> key to focus elements inside a tree view. Use `Arrow Up/Down` for focussing a tree item and `Shift + Arrow Right` for focussing a checkbox inside the item. | `boolean`                              | `undefined`  |\n| `expandedItems`          | --                         | (optional) Set expanded tree items                                                                                                                                                                     | `string[]`                             | `[]`         |\n| `multiCheckboxSelection` | `multi-checkbox-selection` | (optional) Enables multiple checkbox selection                                                                                                                                                         | `boolean`                              | `undefined`  |\n| `multiSelection`         | `multi-selection`          | (optional) Enables multiple tree items selection                                                                                                                                                       | `boolean`                              | `undefined`  |\n| `selectedItems`          | --                         | (optional) Set selected tree items                                                                                                                                                                     | `string[]`                             | `[]`         |\n| `size`                   | `size`                     | (optional) The default size of all tree items                                                                                                                                                          | `\"condensed\" \\| \"large\" \\| \"standard\"` | `'standard'` |\n\n##### Modus Tree View Item\n\n| Property              | Attribute         | Description                                                                                                                          | Type                    | Default     |\n| --------------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------ | ----------------------- | ----------- |\n| `actions`             | `actions`         | (optional) Actions that can be performed on each item. A maximum of 3 icons will be shown, including overflow menu and expand icons. | `ModusActionBarOptions` | `undefined` |\n| `disabled`            | `disabled`        | (optional) Disables the tree item                                                                                                    | `boolean`               | `undefined` |\n| `draggableItem`       | `draggable-item`  | (optional) Allows the item to be dragged across the tree                                                                             | `boolean`               | `undefined` |\n| `droppableItem`       | `droppable-item`  | (optional) Allows the item to be a drop zone so other tree items can be dropped above it                                             | `boolean`               | `undefined` |\n| `editable`            | `editable`        | (optional) Changes the label field into a text box                                                                                   | `boolean`               | `undefined` |\n| `label` _(required)_  | `label`           | (required) Label for the tree item                                                                                                   | `string`                | `undefined` |\n| `nodeId` _(required)_ | `node-id`         | (required) Unique tree item identifier                                                                                               | `string`                | `undefined` |\n| `tabIndexValue`       | `tab-index-value` | (optional) Tab Index for the tree item                                                                                               | `number \\| string`      | `0`         |\n| `isLastChild          | `is-last-child`   | To be set true when the tree item is an expandable last child                                                                        | `boolean`               | false       |\n\n### DOM Events\n\n#### Modus Tree View\n\n| Name                | Description                                                                                                                           | Emits                                                |\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------- |\n| itemActionClick     | Fired when an action is clicked within any tree item. Includes both the `actionId` and `nodeId` of the action and item, respectively. | `{ actionId: string, nodeId: string }`               |\n| itemDrop            | Fired when an item is dropped in a different position. Includes the updated item's map.                                               | `{ [key: string]: TreeViewItemInfo }`                |\n| itemSelectionChange | Fired when the item's selection state changes by any means, such as mouse or keyboard interactions                                    | `CustomEvent<{isSelected: boolean, nodeId: number}>` |\n\n##### Modus Tree View Item\n\n| Name             | Description                                                                           | Emits                  |\n| ---------------- | ------------------------------------------------------------------------------------- | ---------------------- |\n| actionClick      | Fired when an action button within the tree item is clicked. Includes the `actionId`. | `{ actionId: string }` |\n| checkboxClick    | An event that fires on tree item checkbox click                                       | boolean                |\n| itemClick        | An event that fires on tree item click                                                | boolean                |\n| itemExpandToggle | An event that fires on tree item expand/collapse                                      | boolean                |\n| itemLabelChange  | An event that fires on tree item label change                                         | `CustomEvent<string>`  |\n\n### Methods\n\n##### Modus Tree View Item\n\n| Method name     | Description                           | Parameter | Return          |\n| --------------- | ------------------------------------- | --------- | --------------- |\n| `focusCheckbox` | Focus the checkbox inside a tree item |           | `Promise<void>` |\n| `focusItem`     | Focus the tree item                   |           | `Promise<void>` |\n\n### Types\n\n```ts\ntype ModusActionBarOptions = {\n  id: string;\n  icon: string;\n  label: string;\n};\n```\n",
  "storybook_content": "\n\n--- modus-content-tree.stories.tsx ---\n\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-content-tree-storybook-docs.mdx';\nimport { html } from 'lit-html';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\nexport default {\n  title: 'Components/Content Tree',\n  argTypes: {\n    checkboxSelection: {\n      name: 'checkbox-selection',\n      description: 'Enables checkbox selection on each tree item.',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    disableTabbing: {\n      name: 'disable-tabbing',\n      description:\n        'Disables tabbing inside a tree view. Use `Arrow Up/Down` for focusing a tree item and `Shift + Arrow Right` for focusing a checkbox inside the item.',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    multiCheckboxSelection: {\n      name: 'multi-checkbox-selection',\n      description: 'Enables multiple checkbox selection.',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    multiSelection: {\n      name: 'multi-selection',\n      description: 'Enables multiple tree items selection.',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    size: {\n      options: ['condensed', 'standard', 'large'],\n      type: 'select',\n      name: 'size',\n      description: 'The default size of all tree items.',\n      table: {\n        defaultValue: { summary: `'standard'` },\n        type: { summary: `'condensed' | 'standard' | 'large' ` },\n      },\n    },\n    borderless: {\n      description: 'Whether the content tree and items have a border or not. Default is `false`.',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    enableReordering: {\n      description: 'Sets draggable state to be true to all the children',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    isLastChild: {\n      description: 'To be set true when the tree item is an expandable last child',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      page: docs,\n    },\n    actions: {\n      handles: [\n        'itemActionClick modus-tree-view',\n        'actionClick modus-tree-view-item',\n        'itemClick modus-tree-view-item',\n        'itemLabelChange modus-tree-view-item',\n        'itemDrop modus-tree-view',\n        'itemSelectionChange modus-tree-view',\n        'checkboxClick modus-tree-view-item',\n      ],\n    },\n    controls: { expanded: true, sort: 'requiredFirst' },\n    options: {\n      isToolshown: true,\n      enableShortcuts: false,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=5350-22364&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\n\nconst Template = ({\n  borderless,\n  enableReordering,\n  checkboxSelection,\n  multiCheckboxSelection,\n  multiSelection,\n  disableTabbing,\n  size,\n}) => html`\n  <modus-tree-view\n    style=\"width:400px;\"\n    enable-reordering=${enableReordering ? 'true' : 'false'}\n    borderless=${borderless ? 'true' : 'false'}\n    checkbox-selection=${checkboxSelection ? 'true' : 'false'}\n    disable-tabbing=${disableTabbing ? 'true' : 'false'}\n    multi-checkbox-selection=${multiCheckboxSelection ? 'true' : 'false'}\n    multi-selection=${multiSelection ? 'true' : 'false'}\n    size=${size}>\n    <modus-tree-view-item node-Id=\"1\" label=\"Inbox\">\n      <modus-tree-view-item node-Id=\"2\" label=\"Personal\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"3\" label=\"Work\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"4\" label=\"Social\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"5\" label=\"More ...\"></modus-tree-view-item>\n    </modus-tree-view-item>\n    <modus-tree-view-item node-Id=\"6\" label=\"Archived\">\n      <modus-tree-view-item node-Id=\"7\" label=\"Folder1\">\n        <modus-tree-view-item node-Id=\"8\" label=\"File1\"></modus-tree-view-item>\n        <modus-tree-view-item node-Id=\"9\" label=\"Folder2\">\n          <modus-tree-view-item node-Id=\"10\" label=\"File2\"></modus-tree-view-item>\n        </modus-tree-view-item>\n        <modus-tree-view-item node-Id=\"11\" label=\"File3\"></modus-tree-view-item>\n      </modus-tree-view-item>\n    </modus-tree-view-item>\n    <modus-tree-view-item node-Id=\"12\" label=\"Spam\"></modus-tree-view-item>\n  </modus-tree-view>\n`;\n\nconst SlotIconTemplate = ({\n  borderless,\n  enableReordering,\n  checkboxSelection,\n  multiCheckboxSelection,\n  multiSelection,\n  disableTabbing,\n  size,\n  isLastChild,\n}) => html`\n  <modus-tree-view\n    style=\"width:400px;\"\n    enable-reordering=${enableReordering}\n    borderless=${borderless ? 'true' : 'false'}\n    checkbox-selection=${checkboxSelection ? 'true' : 'false'}\n    disable-tabbing=${disableTabbing ? 'true' : 'false'}\n    multi-checkbox-selection=${multiCheckboxSelection ? 'true' : 'false'}\n    multi-selection=${multiSelection ? 'true' : 'false'}\n    size=${size}>\n    <modus-tree-view-item node-Id=\"1\" label=\"Inbox\">\n      <svg slot=\"itemIcon\" fill=\"currentColor\" height=\"16\" width=\"16\" viewBox=\"0 0 32 32\">\n        <path\n          d=\"M28.79 12.39A1 1 0 0 0 28 12h-2V9c0-.55-.45-1-1-1h-9.59l-1.7-1.71C13.52 6.11 13.27 6 13 6H4c-.55 0-1 .45-1 1v17c0 .04.02.07.02.11.01.05.02.11.04.16.02.09.06.17.1.25.02.03.02.06.05.09.01.01.03.02.04.03.07.08.15.14.23.19.04.03.06.05.1.07.13.06.27.1.42.1h21c.13 0 .25-.03.36-.07.04-.02.07-.04.1-.06.07-.04.14-.08.2-.13.03-.03.06-.06.09-.1.05-.05.09-.11.12-.18a.31.31 0 0 0 .06-.13c.01-.02.03-.04.03-.07l3-11c.09-.3.02-.62-.17-.87zM5 8h7.59l1.7 1.71c.19.18.44.29.71.29h9v2H7c-.45 0-.85.3-.96.74L5 16.53V8z\" />\n      </svg>\n      <modus-tree-view-item node-Id=\"2\" label=\"Personal\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"3\" label=\"Work\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"4\" label=\"Social\"></modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"5\" is-last-child=${isLastChild} label=\"More ...\"></modus-tree-view-item>\n    </modus-tree-view-item>\n  </modus-tree-view>\n`;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  borderless: false,\n  enableReordering: false,\n  checkboxSelection: false,\n  disableTabbing: false,\n  multiCheckboxSelection: false,\n  multiSelection: false,\n  size: 'standard',\n};\n\nexport const WithIcon = SlotIconTemplate.bind({});\nWithIcon.args = { ...Default.args };\n\n// export const Borderless = Template.bind({});\n\nexport const Condensed = Template.bind({});\nCondensed.args = { ...Default.args, checkboxSelection: true, size: 'condensed' };\n\nexport const Borderless = Template.bind({});\nBorderless.args = { ...Default.args, borderless: true };\n\nexport const MultiSelection = Template.bind({});\nMultiSelection.args = { ...Default.args, multiSelection: true, checkboxSelection: true, multiCheckboxSelection: true };\n\nconst ActionBarTemplate = ({\n  borderless,\n  enableReordering,\n  checkboxSelection,\n  multiCheckboxSelection,\n  multiSelection,\n  disableTabbing,\n  size,\n  isLastChild,\n}) => html`\n  <style>\n    .toolbar {\n      gap: 4px;\n      display: flex;\n      justify-content: end;\n      flex-wrap: wrap;\n      margin-top: 1rem;\n    }\n\n    modus-button {\n      width: 24px;\n      height: 28px;\n      padding: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    modus-button svg {\n      width: 20px;\n      height: 20px;\n      padding-top: 3px;\n    }\n  </style>\n  <div id=\"tree-with-action-bar\" style=\"display: flex; flex-direction: column; width: 400px;\">\n    <div class=\"toolbar\">\n      <modus-button button-style=\"borderless\" aria-label=\"Add\" title=\"Add\" size=\"small\" color=\"primary\" disabled id=\"add\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n          <path d=\"M19,13H13v6H11V13H5V11h6V5h2v6h6Z\" fill=\"var(--icon-fill)\" />\n        </svg>\n      </modus-button>\n      <modus-button\n        button-style=\"borderless\"\n        aria-label=\"Remove\"\n        title=\"Remove\"\n        size=\"small\"\n        color=\"primary\"\n        disabled\n        id=\"remove\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n          <path\n            d=\"M6,19a2.006,2.006,0,0,0,2,2h8a2.006,2.006,0,0,0,2-2V7H6ZM19,4H15.5l-1-1h-5l-1,1H5V6H19Z\"\n            fill=\"var(--icon-fill)\" />\n        </svg>\n      </modus-button>\n      <modus-button button-style=\"borderless\" size=\"small\" aria-label=\"Edit\" title=\"Edit\" color=\"primary\" disabled id=\"edit\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n          <path\n            d=\"M3,17.25V21H6.75L17.81,9.94,14.06,6.19ZM20.71,7.04a1,1,0,0,0,0-1.41L18.37,3.29a1,1,0,0,0-1.41,0L15.13,5.12l3.75,3.75,1.83-1.83Z\"\n            fill=\"var(--icon-fill)\" />\n        </svg>\n      </modus-button>\n      <modus-button button-style=\"borderless\" size=\"small\" aria-label=\"Copy\" title=\"Copy\" color=\"primary\" disabled id=\"copy\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n          <path\n            d=\"M16,1H4A2.006,2.006,0,0,0,2,3V17H4V3H16Zm3,4H8A2.006,2.006,0,0,0,6,7V21a2.006,2.006,0,0,0,2,2H19a2.006,2.006,0,0,0,2-2V7A2.006,2.006,0,0,0,19,5Zm0,16H8V7H19Z\"\n            fill=\"var(--icon-fill)\" />\n        </svg>\n      </modus-button>\n      <modus-button button-style=\"borderless\" size=\"small\" aria-label=\"Drag\" title=\"Drag\" color=\"primary\" disabled id=\"drag\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M11,18a2,2,0,1,1-2-2A2.006,2.006,0,0,1,11,18ZM9,10a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,10ZM9,4a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,4Zm6,4a2,2,0,1,0-2-2A2.006,2.006,0,0,0,15,8Zm0,2a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,10Zm0,6a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,16Z\"\n            fill=\"var(--icon-fill)\" />\n        </svg>\n      </modus-button>\n      <modus-button\n        button-style=\"borderless\"\n        size=\"small\"\n        aria-label=\"Expand\"\n        title=\"Expand\"\n        color=\"primary\"\n        disabled\n        id=\"expand\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M0,0H24V24H0Z\" fill=\"rgba(0,0,0,0)\" />\n          <path\n            d=\"M12,5.83,15.17,9l1.41-1.41L12,3,7.41,7.59,8.83,9Zm0,12.34L8.83,15,7.42,16.41,12,21l4.59-4.59L15.17,15Z\"\n            fill=\"var(--icon-fill)\" /></svg\n      ></modus-button>\n      <modus-button\n        button-style=\"borderless\"\n        size=\"small\"\n        aria-label=\"Collapse\"\n        title=\"Collapse\"\n        color=\"primary\"\n        disabled\n        style=\"display: none\"\n        id=\"collapse\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n          <path\n            d=\"M7.41,18.59,8.83,20,12,16.83,15.17,20l1.41-1.41L12,14ZM16.59,5.41,15.17,4,12,7.17,8.83,4,7.41,5.41,12,10Z\"\n            fill=\"var(--icon-fill)\" />\n        </svg>\n      </modus-button>\n    </div>\n    <modus-tree-view\n      enable-reordering=${enableReordering}\n      borderless=${borderless ? 'true' : 'false'}\n      checkbox-selection=${checkboxSelection ? 'true' : 'false'}\n      disable-tabbing=${disableTabbing ? 'true' : 'false'}\n      multi-checkbox-selection=${multiCheckboxSelection ? 'true' : 'false'}\n      multi-selection=${multiSelection ? 'true' : 'false'}\n      size=${size}>\n      <modus-tree-view-item node-Id=\"1\" label=\"Inbox\">\n        <modus-tree-view-item node-Id=\"2\" label=\"Personal\"></modus-tree-view-item>\n        <modus-tree-view-item node-Id=\"3\" label=\"Work\"></modus-tree-view-item>\n        <modus-tree-view-item node-Id=\"4\" label=\"Social\"></modus-tree-view-item>\n        <modus-tree-view-item node-Id=\"5\" label=\"More ...\"></modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"6\" label=\"Archived\">\n        <modus-tree-view-item node-Id=\"7\" is-last-child=${isLastChild} label=\"Folder1\">\n          <modus-tree-view-item node-Id=\"8\" label=\"File1\"></modus-tree-view-item>\n          <modus-tree-view-item node-Id=\"9\" is-last-child=${isLastChild} label=\"File3\"></modus-tree-view-item>\n        </modus-tree-view-item>\n      </modus-tree-view-item>\n    </modus-tree-view>\n  </div>\n  ${ActionBarScript()}\n`;\nconst ActionBarScript = () => {\n  const tag = document.createElement('script');\n  tag.innerHTML = `\n  function actionBarScript() {\n    const container = document.querySelector(\"div[id='tree-with-action-bar']\");\n\n    // Workaround for storybook running script twice\n    if(container.getAttribute(\"data-script\")) return;\n    else container.setAttribute(\"data-script\", true);\n\n    const root =  container.querySelector(\"modus-tree-view\");\n    const addButton =  container.querySelector(\"modus-button[id='add']\");\n    const removeButton =  container.querySelector(\"modus-button[id='remove']\");\n    const editButton =  container.querySelector(\"modus-button[id='edit']\");\n    const copyButton =  container.querySelector(\"modus-button[id='copy']\");\n    const expandAllButton =  container.querySelector(\"modus-button[id='expand']\");\n    const collapseAllButton =  container.querySelector(\"modus-button[id='collapse']\");\n    const dragButton =  container.querySelector(\"modus-button[id='drag']\");\n\n    const disableButtons = (disable) =>\n    {\n      removeButton.disabled = disable;\n      copyButton.disabled = disable;\n      editButton.disabled = disable;\n    }\n    const getChildren = (element) => {\n      const children = element.querySelectorAll('modus-tree-view-item');\n      if (!children) return [];\n      return Array.from(children)\n        .reduce((r, c) => {\n          r.push(\n            c,\n            ...getChildren(c)\n          );\n          return r;\n        }, []);\n    }\n    const getItems = () => new Map( Array.from(root.querySelectorAll('modus-tree-view-item')).map(i => [i.nodeId, i.label]));\n    const querySelect = (itemId) => container.querySelector(\"modus-tree-view-item[node-id='\"+ itemId + \"']\");\n\n    addButton.disabled = false;\n    dragButton.disabled = false;\n    expandAllButton.disabled = false;\n    collapseAllButton.disabled = false;\n\n    container.addEventListener(\"itemClick\", () => {\n      if(root.selectedItems.length > 0){\n        disableButtons(false);\n      }\n      else\n      {\n        disableButtons(true);\n      }\n    });\n\n    addButton.addEventListener(\"buttonClick\", () => {\n      const nodeId =  container.querySelectorAll('modus-tree-view-item').length + 1;\n      const selectedItems = root.selectedItems;\n      if (nodeId) {\n        const selectedItemId = selectedItems && selectedItems.length > 0 ? selectedItems[0] : null;\n        const selectedItemElement = querySelect(selectedItemId);\n        const selectedItemParent = selectedItemElement?.parentElement;\n        const newNode = document.createElement('modus-tree-view-item');\n        newNode.nodeId = nodeId;\n        newNode.editable = true;\n        const insertParent = selectedItemParent || root;\n        const insertBeforeElement = selectedItemElement || root.firstElementChild;\n        (insertParent).insertBefore(newNode, insertBeforeElement);\n      }\n    });\n\n    removeButton.addEventListener(\"buttonClick\", () => {\n      const selectedItems = root.selectedItems;\n      selectedItems?.forEach((i) => {\n        const selectedItemElement = querySelect(i);\n        const selectedItemParent = selectedItemElement?.parentElement;\n        if(selectedItemElement){\n          selectedItemParent.removeChild(selectedItemElement);\n        }\n      });\n\n      if(!Array.from(getItems()).length){\n        container.querySelectorAll(\"modus-button\").forEach(b => b.disabled = true);\n      }\n      else disableButtons(true);\n    });\n\n    editButton.addEventListener(\"buttonClick\", () => {\n      const selectedItems = root.selectedItems;\n        const selectedItemId = selectedItems && selectedItems.length > 0 ? selectedItems[0] : null;\n        const selectedItemElement = querySelect(selectedItemId);\n        selectedItemElement.editable = true;\n    });\n\n    copyButton.addEventListener(\"buttonClick\", () => {\n      const nodeId = container.querySelectorAll('modus-tree-view-item').length + 1;\n      const selectedItems = root.selectedItems;\n        const selectedItemId = selectedItems && selectedItems.length > 0 ? selectedItems[0] : null;\n        const selectedItemElement =  querySelect(selectedItemId);\n        if(selectedItemElement){\n          const newNode = selectedItemElement.cloneNode(true);\n          newNode.nodeId = nodeId;\n          newNode.editable = true;\n          newNode.label = \"Copy of \" + selectedItemElement.label;\n\n          let count = nodeId + 1;\n          getChildren(newNode).forEach(c => {\n            c.nodeId = count;\n            count ++;\n          });\n\n          (selectedItemElement.parentElement || root).insertBefore(newNode, selectedItemElement);\n        }\n\n    });\n\n    expandAllButton.addEventListener(\"buttonClick\", () => {\n      root.expandedItems= Array.from(getItems().keys());\n      expandAllButton.style.display=\"none\";\n      collapseAllButton.style.display= \"inline-block\";\n    });\n\n    collapseAllButton.addEventListener(\"buttonClick\", () => {\n      root.expandedItems= [];\n      collapseAllButton.style.display=\"none\";\n      expandAllButton.style.display= \"inline-block\";\n    });\n\n    dragButton.addEventListener(\"buttonClick\", () => {\n      root.enableReordering = !root.enableReordering;\n    });\n  }\n    actionBarScript();\n  `;\n\n  return tag;\n};\n\nexport const CustomActionBar = ActionBarTemplate.bind({});\nCustomActionBar.args = { ...Default.args };\n\nconst FilterTemplate = ({\n  borderless,\n  enableReordering,\n  checkboxSelection,\n  multiCheckboxSelection,\n  multiSelection,\n  disableTabbing,\n  size,\n  isLastChild,\n}) => html`\n  <div id=\"tree-with-filter\" style=\"display: flex; flex-direction: column; width: 400px;\">\n    <modus-text-input\n      id=\"filter\"\n      size=\"large\"\n      placeholder=\"Search\"\n      type=\"search\"\n      disabled=\"true\"\n      include-search-icon></modus-text-input>\n    <modus-tree-view\n      enable-reordering=${enableReordering}\n      borderless=${borderless ? 'true' : 'false'}\n      checkbox-selection=${checkboxSelection ? 'true' : 'false'}\n      disable-tabbing=${disableTabbing ? 'true' : 'false'}\n      multi-checkbox-selection=${multiCheckboxSelection ? 'true' : 'false'}\n      multi-selection=${multiSelection ? 'true' : 'false'}\n      size=${size}>\n      <modus-tree-view-item node-Id=\"1\">\n        <div slot=\"label\">Inbox</div>\n        <modus-tree-view-item node-Id=\"2\">\n          <div slot=\"label\">Personal</div>\n        </modus-tree-view-item>\n        <modus-tree-view-item node-Id=\"5\">\n          <div slot=\"label\">More ...</div>\n        </modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-Id=\"6\">\n        <div slot=\"label\">Archived</div>\n        <modus-tree-view-item is-last-child=${isLastChild} node-Id=\"7\">\n          <div slot=\"label\">Folder1</div>\n          <modus-tree-view-item node-Id=\"8\">\n            <div slot=\"label\">File1</div>\n          </modus-tree-view-item>\n          <modus-tree-view-item is-last-child=${isLastChild} node-Id=\"11\">\n            <div slot=\"label\">File2</div>\n          </modus-tree-view-item>\n        </modus-tree-view-item>\n      </modus-tree-view-item>\n    </modus-tree-view>\n  </div>\n  ${FilterScript()}\n`;\n\nconst FilterScript = () => {\n  const tag = document.createElement('script');\n  tag.innerHTML = `\n    function filterScript() {\n      const container = document.querySelector(\"div[id='tree-with-filter']\");\n\n      // Workaround for storybook running script twice\n      if(container.getAttribute(\"data-script\")) return;\n      else container.setAttribute(\"data-script\", true);\n\n      const root =  container.querySelector('modus-tree-view');\n      let items = new Map();\n      container.querySelectorAll('modus-tree-view-item').forEach(element => {\n        items.set(element.nodeId, element.querySelector(\"div[slot='label']\").innerHTML);\n      });\n      root.expandedItems = Array.from(items.keys());\n\n\n      const filter =  container.querySelector(\"modus-text-input[id='filter']\");\n      filter.disabled = false;\n      filter.addEventListener(\"valueChange\", (e) => {\n        const searchText  = e.detail;\n\n        if(searchText){\n          const searchResult = [...items]\n            .filter(([key, value]) => {\n              return value.toLowerCase().indexOf(searchText) > -1\n            })\n            .map(([key, value]) => key);\n\n          const getParents = (e) => {\n            if(e.parentNode && e.parentNode.nodeId) return [e.parentNode, ...getParents(e.parentNode)];\n            return [];\n          }\n\n\n          items.forEach((value, key) => {\n            const element = container.querySelector(\"modus-tree-view-item[node-id='\" + key+\"']\")\n            element.expanded = true;\n\n            if(searchResult.includes(key)){\n              element.querySelector(\"div[slot='label']\").style.color=\"#0063a3\";\n              element.style.display=\"block\";\n\n              getParents(element).forEach(e => {\n                e.style.display=\"block\";\n              });\n            }\n            else{\n              element.querySelector(\"div[slot='label']\").style.color = undefined;\n              element.style.display= \"none\";\n            }\n          });\n        }\n        else{\n          items.forEach((value, key) => {\n            const element = container.querySelector(\"modus-tree-view-item[node-id='\" + key+\"']\")\n              element.querySelector(\"div[slot='label']\").style.color = \"\";\n              element.style.display=\"block\";\n              element.expanded = false;\n          });\n        }\n      });\n    }\n    filterScript();\n  `;\n\n  return tag;\n};\n\nexport const CustomFilter = FilterTemplate.bind({});\nCustomFilter.args = { ...Default.args };\n\nconst WithItemActionBarTemplate = ({\n  borderless,\n  enableReordering,\n  checkboxSelection,\n  multiCheckboxSelection,\n  multiSelection,\n  size,\n  rowActions,\n}) => html`\n  <div style=\"display: flex; flex-direction: column; width: 400px;\">\n    <modus-tree-view\n      style=\"width:400px;\"\n      enable-reordering=${enableReordering}\n      borderless=${borderless}\n      checkbox-selection=${checkboxSelection}\n      checked-items=\"false\"\n      expanded-items=\"false\"\n      multi-checkbox-selection=${multiCheckboxSelection}\n      multi-selection=${multiSelection}\n      selected-items=\"false\"\n      size=${size}>\n      <modus-tree-view-item node-id=\"1\" label=\"Inbox\" .actions=${rowActions}></modus-tree-view-item>\n    </modus-tree-view>\n  </div>\n`;\n\nexport const WithActionBar = WithItemActionBarTemplate.bind({});\nWithActionBar.args = {\n  ...Default.args,\n  rowActions: [\n    { id: 'export', icon: 'export', label: 'Export' },\n    { id: 'history', icon: 'history', label: 'History' },\n    { id: 'edit', icon: 'pencil', label: 'Edit' },\n    { id: 'delete', icon: 'delete', label: 'Delete' },\n  ],\n};\n",
  "storybook": {
    "examples": [
      "<modus-tree-view-item node-Id=\"2\" label=\"Personal\"></modus-tree-view-item>",
      "<modus-tree-view-item node-Id=\"3\" label=\"Work\"></modus-tree-view-item>",
      "<modus-tree-view-item node-Id=\"4\" label=\"Social\"></modus-tree-view-item>",
      "<modus-tree-view-item node-Id=\"5\" label=\"More ...\"></modus-tree-view-item>",
      "<modus-tree-view-item node-Id=\"8\" label=\"File1\"></modus-tree-view-item>"
    ],
    "variants": [],
    "prop_usage": {
      "style": [
        "width:400px;",
        "display: flex; flex-direction: column; width: 400px;",
        "borderless",
        "display: none"
      ],
      "Id": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12"
      ],
      "label": [
        "Inbox",
        "Personal",
        "Work",
        "Social",
        "More ...",
        "Archived",
        "Folder1",
        "File1",
        "Folder2",
        "File2",
        "File3",
        "Spam",
        "Add",
        "Remove",
        "Edit",
        "Copy",
        "Drag",
        "Expand",
        "Collapse"
      ],
      "slot": [
        "itemIcon",
        "label"
      ],
      "fill": [
        "currentColor",
        "none",
        "var(--icon-fill)",
        "rgba(0,0,0,0)"
      ],
      "height": [
        "16",
        "24"
      ],
      "width": [
        "16",
        "24"
      ],
      "viewBox": [
        "0 0 32 32",
        "0 0 24 24"
      ],
      "d": [
        "M28.79 12.39A1 1 0 0 0 28 12h-2V9c0-.55-.45-1-1-1h-9.59l-1.7-1.71C13.52 6.11 13.27 6 13 6H4c-.55 0-1 .45-1 1v17c0 .04.02.07.02.11.01.05.02.11.04.16.02.09.06.17.1.25.02.03.02.06.05.09.01.01.03.02.04.03.07.08.15.14.23.19.04.03.06.05.1.07.13.06.27.1.42.1h21c.13 0 .25-.03.36-.07.04-.02.07-.04.1-.06.07-.04.14-.08.2-.13.03-.03.06-.06.09-.1.05-.05.09-.11.12-.18a.31.31 0 0 0 .06-.13c.01-.02.03-.04.03-.07l3-11c.09-.3.02-.62-.17-.87zM5 8h7.59l1.7 1.71c.19.18.44.29.71.29h9v2H7c-.45 0-.85.3-.96.74L5 16.53V8z",
        "M0,0H24V24H0Z",
        "M19,13H13v6H11V13H5V11h6V5h2v6h6Z",
        "M6,19a2.006,2.006,0,0,0,2,2h8a2.006,2.006,0,0,0,2-2V7H6ZM19,4H15.5l-1-1h-5l-1,1H5V6H19Z",
        "M3,17.25V21H6.75L17.81,9.94,14.06,6.19ZM20.71,7.04a1,1,0,0,0,0-1.41L18.37,3.29a1,1,0,0,0-1.41,0L15.13,5.12l3.75,3.75,1.83-1.83Z",
        "M16,1H4A2.006,2.006,0,0,0,2,3V17H4V3H16Zm3,4H8A2.006,2.006,0,0,0,6,7V21a2.006,2.006,0,0,0,2,2H19a2.006,2.006,0,0,0,2-2V7A2.006,2.006,0,0,0,19,5Zm0,16H8V7H19Z",
        "M11,18a2,2,0,1,1-2-2A2.006,2.006,0,0,1,11,18ZM9,10a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,10ZM9,4a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,4Zm6,4a2,2,0,1,0-2-2A2.006,2.006,0,0,0,15,8Zm0,2a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,10Zm0,6a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,16Z",
        "M12,5.83,15.17,9l1.41-1.41L12,3,7.41,7.59,8.83,9Zm0,12.34L8.83,15,7.42,16.41,12,21l4.59-4.59L15.17,15Z",
        "M7.41,18.59,8.83,20,12,16.83,15.17,20l1.41-1.41L12,14ZM16.59,5.41,15.17,4,12,7.17,8.83,4,7.41,5.41,12,10Z"
      ],
      "id": [
        "tree-with-action-bar",
        "add",
        "remove",
        "edit",
        "copy",
        "drag",
        "expand",
        "collapse",
        "tree-with-filter",
        "filter",
        "1"
      ],
      "class": [
        "toolbar"
      ],
      "title": [
        "Add",
        "Remove",
        "Edit",
        "Copy",
        "Drag",
        "Expand",
        "Collapse"
      ],
      "size": [
        "small",
        "large"
      ],
      "color": [
        "primary",
        "#0063a3"
      ],
      "display": [
        "none",
        "block"
      ],
      "placeholder": [
        "Search"
      ],
      "type": [
        "search"
      ],
      "disabled": [
        "true"
      ],
      "items": [
        "false"
      ]
    }
  },
  "tag_name": "modus-content-tree"
}