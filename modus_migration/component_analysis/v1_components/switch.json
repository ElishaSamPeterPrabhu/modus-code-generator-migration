{
  "component_name": "modus-switch",
  "version": "v1",
  "props": [
    {
      "name": "ariaLabel",
      "description": "/** (optional) The switch's aria-label. */",
      "type": "string | null"
    },
    {
      "name": "checked",
      "description": "/** (optional) The switch's aria-label. */",
      "type": "'checked' : ''}`"
    },
    {
      "name": "disabled",
      "description": "/** (optional) The switch's aria-label. */",
      "type": "boolean"
    },
    {
      "name": "label",
      "description": "/** (optional) The switch's aria-label. */",
      "type": "string"
    },
    {
      "name": "size",
      "description": "/** (optional) The switch's aria-label. */",
      "type": ": 'small' | 'medium'"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "checked": "false",
    "disabled": "{switchClassName}>\n          <span class={`slider`}></span>\n        </div>\n        <input\n          aria-checked={String(this.checked)}\n          aria-disabled={this.disabled ? 'true' : undefined}\n          aria-label={this.ariaLabel || undefined}\n          checked={this.checked}\n          disabled={this.disabled}\n          ref={(el) => (this.checkboxInput = el as HTMLInputElement)}\n          role=\"switch\"\n          type=\"checkbox\"></input>\n        {this.label ? <label>{this.label}</label> : null}\n      </div>\n    )",
    "label": "{this.ariaLabel || undefined}\n          checked={this.checked}\n          disabled={this.disabled}\n          ref={(el) => (this.checkboxInput = el as HTMLInputElement)}\n          role=\"switch\"\n          type=\"checkbox\"></input>\n        {this.label ? <label>{this.label}</label> : null}\n      </div>\n    )",
    "size": "'medium'"
  },
  "documentation": "\n\n--- modus-switch-storybook-docs.mdx ---\n\nimport { Anchor } from '@storybook/addon-docs';\n\n# Switch\n\n---\n\n[Modus Switch](https://modus.trimble.com/components/web/switches/) web components are referenced using the `<modus-switch>` custom HTML element.\n\n<Anchor storyId=\"components-switch--medium\" />\n\n### Medium\n\n<modus-switch label=\"Medium\"></modus-switch>\n\n<Anchor storyId=\"components-switch--checked\" />\n\n### Small\n\n<modus-switch label=\"Small\" size=\"small\"></modus-switch>\n\n<Anchor storyId=\"components-switch--small\" />\n\n### Checked\n\n<modus-switch checked label=\"Checked\"></modus-switch>\n\n<Anchor storyId=\"components-switch--disabled\" />\n\n### Disabled\n\n<modus-switch disabled label=\"Disabled\"></modus-switch>\n\n```html\n<modus-switch label=\"medium\"></modus-switch>\n<modus-switch label=\"small\" size=\"small\"></modus-switch>\n<modus-switch checked label=\"Checked\"></modus-switch>\n<modus-switch disabled label=\"Disabled\"></modus-switch>\n```\n\n### Properties\n\n## Properties\n\n| Property    | Attribute    | Description                                | Type                 | Default     |\n| ----------- | ------------ | ------------------------------------------ | -------------------- | ----------- |\n| `ariaLabel` | `aria-label` | (optional) The switch's aria-label.        | `string`             | `undefined` |\n| `checked`   | `checked`    | (optional) Whether the switch is checked.  | `boolean`            | `undefined` |\n| `disabled`  | `disabled`   | (optional) Whether the switch is disabled. | `boolean`            | `undefined` |\n| `label`     | `label`      | (optional) The switch label.               | `string`             | `undefined` |\n| `size`      | `size`       | (optional) The size of the radiobutton.    | `\"medium\" , \"small\"` | `'medium'`  |\n\n### DOM Events\n\n<section>\n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Emits</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>switchClick</td>\n        <td>Fires on switch click</td>\n        <td>boolean</td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n\n### Accessibility\n\n- Switch has `role` of `switch`.\n- Switch gets an `aria-checked` set to whether Switch is checked.\n- Switch gets an `aria-label` provided by the `aria-label` property input.\n- Switch gets an `aria-disabled` set to whether Switch is disabled.\n- When Switch has focus, <kbd>Space</kbd> or <kbd>Enter</kbd> toggle it, and emits the `switchClick` event.\n",
  "storybook_content": "\n\n--- modus-switch.stories.tsx ---\n\nimport { html } from 'lit-html';\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-switch-storybook-docs.mdx';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\nexport default {\n  title: 'User Inputs/Switch',\n  argTypes: {\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The switch's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    checked: {\n      description: 'Whether the switch is checked',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    disabled: {\n      description: 'Whether the switch is disabled',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    label: {\n      description: \"The switch's label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    size: {\n      options: ['small', 'medium'],\n      type: 'select',\n      description: 'The size of the button',\n      table: {\n        defaultValue: { summary: `'medium'` },\n        type: { summary: `'small' | 'medium'` },\n      },\n    },\n  },\n  parameters: {\n    actions: {\n      handles: ['switchClick'],\n    },\n    controls: { expanded: true },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=1346-9&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\n\nexport const Medium = ({ ariaLabel, checked, disabled, label, size }) => html`\n  <modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>\n`;\nMedium.args = {\n  ariaLabel: '',\n  checked: false,\n  disabled: false,\n  label: 'Medium',\n  size: 'medium',\n};\n\nexport const Checked = ({ ariaLabel, checked, disabled, label, size }) => html`\n  <modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>\n`;\nChecked.args = {\n  ariaLabel: '',\n  checked: true,\n  disabled: false,\n  label: 'Checked',\n  size: 'medium',\n};\n\nexport const Disabled = ({ ariaLabel, checked, disabled, label, size }) => html`\n  <modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>\n`;\nDisabled.args = {\n  ariaLabel: '',\n  checked: false,\n  disabled: true,\n  label: 'Disabled',\n  size: 'medium',\n};\n",
  "storybook": {
    "examples": [
      "<modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>",
      "<modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>",
      "<modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>",
      "\n  <modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>\n",
      "\n  <modus-switch aria-label=${ariaLabel} checked=${checked} ?disabled=${disabled} label=${label} size=${size}> </modus-switch>\n"
    ],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-switch"
}