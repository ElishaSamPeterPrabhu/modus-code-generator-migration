{
  "component_name": "modus-time-picker",
  "version": "v1",
  "props": [],
  "events": [],
  "slots": [],
  "default_values": {},
  "documentation": "\n\n--- modus-time-picker-storybook-docs.mdx ---\n\nimport { Story } from '@storybook/blocks';\nimport * as TimePicker from './modus-time-picker.stories.tsx';\n\n# Time Picker\n\n---\n\n[Modus Time Picker](https://modus.trimble.com/components/web/date-time-picker/styles/#time-picker) web component is a wrapper around native `<input type=\"text\">` element used to input the time. It is referenced using the `<modus-time-picker>` custom HTML element.\n\n#### Implementation details\n\n- Modus Time Picker accepts input in 12 or 24-hour format depending on the value provided for prop `ampm`.\n- To use it along with a time zone, slot option is provided and referenced by `slot='timeZone'`.\n- The `value` which is a string representation of the time input is always in 24-hour format that includes leading zeros: `hh:mm`, regardless of the input format which is displayed.\n- The input string can be auto formatted while typing by enabling `autoFormat`.\n\n#### Validation\n\n- Modus Time Picker by default validates for an invalid time input based on the 12/24 hour format, and other validations based on the value provided for `required`, `min`, `max` fields. Validations are triggered on a blur event.\n- Modus Time picker by default allows only the characters in the format provided and it can be controlled by `allowedCharsRegex`.\n- If the default validation is disabled, using props `errorText`, `invalid` the error state can also be set manually.\n\n### Default\n\n<Story of={TimePicker.Default} />\n\n```html\n<modus-time-picker label=\"Time\" placeholder=\"23:39\" helper-text=\"hh:mm\"></modus-time-picker>\n```\n\n#### 12 Hour Format\n\n<Story of={TimePicker.TimeFormat} />\n\n```html\n<modus-time-picker\n  label=\"Time\"\n  ampm=\"true\"\n  value=\"23:39\"\n  placeholder=\"12:00 AM\"\n  helper-text=\"hh:mm AM/PM\"></modus-time-picker>\n```\n\n### Auto Format\n\n<Story of={TimePicker.AutoFormat} />\n\n```html\n<modus-time-picker\n  ampm=\"true\"\n  auto-format=\"true\"\n  helper-text=\"hh:mm AM/PM\"\n  label=\"Time\"\n  max-length=\"10\"\n  placeholder=\"12:00 AM\"></modus-time-picker>\n```\n\n### Time Picker with Time Zone\n\n<Story of={TimePicker.WithTimeZone} />\n\n```html\n<modus-time-picker helper-text=\"hh:mm\" label=\"Time\" max-length=\"10\" auto-format=\"true\" value=\"23:39\">\n  <div style=\"width: 300px;padding-left: 0.5rem;\" slot=\"timeZone\">\n    <modus-select id=\"timezone\" label=\"Time Zone\" aria-label=\"Time Zone\" options-display-prop=\"display\"></modus-select>\n  </div>\n</modus-time-picker>\n<script>\n  const modusSelect = document.querySelector('#select-demo-1');\n  modusSelect.options = [\n    { display: 'Alpha Time Zone' },\n    { display: 'Australian Central Daylight Time' },\n    { display: 'Atlantic Daylight Time' },\n  ];\n</script>\n```\n\n### Properties\n\n| Property            | Attribute             | Description                                                                                                                                       | Type                  | Default     |\n| ------------------- | --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------- | ----------- |\n| `allowedCharsRegex` | `allowed-chars-regex` | (optional) Regular expression to allow characters while typing the input. Default is `/[\\d:apm\\s]/gi` or `/[\\d:]/gi` based on the display format. | `RegExp \\| string`    | `undefined` |\n| `ampm`              | `ampm`                | (optional) Sets 12/24 hour format for the input string.                                                                                           | `boolean`             | `undefined` |\n| `ariaLabel`         | `aria-label`          | (optional) The input's aria-label.                                                                                                                | `string`              | `undefined` |\n| `autoFocusInput`    | `auto-focus-input`    | (optional) Sets autofocus on the input.                                                                                                           | `boolean`             | `undefined` |\n| `autoFormat`        | `auto-format`         | (optional) Formats the text while typing in the input field.                                                                                      | `boolean`             | `undefined` |\n| `disableValidation` | `disable-validation`  | (optional) Disables default validation for the time input.                                                                                        | `boolean`             | `undefined` |\n| `disabled`          | `disabled`            | (optional) Whether the input is disabled.                                                                                                         | `boolean`             | `undefined` |\n| `errorText`         | `error-text`          | (optional) Custom error text displayed for the input.                                                                                             | `string`              | `undefined` |\n| `helperText`        | `helper-text`         | (optional) Custom helper text displayed below the input.                                                                                          | `string`              | `undefined` |\n| `label`             | `label`               | (optional) The input's label.                                                                                                                     | `string`              | `undefined` |\n| `max`               | `max`                 | (optional) Maximum time (in 24 hour format).                                                                                                      | `string`              | `undefined` |\n| `min`               | `min`                 | (optional) Minimum time (in 24 hour format).                                                                                                      | `string`              | `undefined` |\n| `placeholder`       | `placeholder`         | (optional) The input's placeholder text.                                                                                                          | `string`              | `undefined` |\n| `readOnly`          | `read-only`           | (optional) Whether the input's content is read-only                                                                                               | `boolean`             | `undefined` |\n| `required`          | `required`            | (optional) Whether the input is required.                                                                                                         | `boolean`             | `undefined` |\n| `size`              | `size`                | (optional) The input's size.                                                                                                                      | `\"large\" \\| \"medium\"` | `'medium'`  |\n| `validText`         | `valid-text`          | (optional) The input's valid state text.                                                                                                          | `string`              | `undefined` |\n| `value`             | `value`               | (optional) Value of the time entered into the input.                                                                                              | `string`              | `undefined` |\n\n### DOM Events\n\n| Event           | Description                                      | Type                                       |\n| --------------- | ------------------------------------------------ | ------------------------------------------ |\n| `timeInputBlur` | An event that fires on input value out of focus. | `CustomEvent<ModusTimePickerEventDetails>` |\n| `valueChange`   | An event that fires on input value change.       | `CustomEvent<ModusTimePickerEventDetails>` |\n\n### Methods\n\n| Method name  | Description     | Parameter | Return          |\n| ------------ | --------------- | --------- | --------------- |\n| `focusInput` | Focus the input |           | `Promise<void>` |\n\n### Accessibility\n\n- Time Input gets an `aria-label` provided by the `aria-label` property input.\n- It is recommended to pass `aria-label` when there is no label used so the input is accessible to screen readers.\n- Time Input gets an `aria-disabled` provided by the `disabled` property input.\n- Time Input gets an `aria-placeholder` provided by the `placeholder` property input.\n- Time Input gets an `aria-invalid` from `invalid` property input.\n- Time Input gets an `aria-readonly` from `readonly` property input.\n- Time Input gets an `aria-required` from `required` property input.\n",
  "storybook_content": "\n\n--- modus-time-picker.stories.tsx ---\n\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-time-picker-storybook-docs.mdx';\nimport { html } from 'lit-html';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\nexport default {\n  title: 'User Inputs/Time Picker',\n  argTypes: {\n    ampm: {\n      name: 'ampm',\n      description: 'Sets 12/24 hour format for the input string.',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The input's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    autoFocusInput: {\n      name: 'auto-focus-input',\n      description: 'Sets autofocus for the input',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    autoFormat: {\n      name: 'auto-format',\n      description: 'Formats the text while typing in the input field',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    disabled: {\n      description: 'Whether the text input is disabled',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    disableValidation: {\n      name: 'disable-validation',\n      description: 'Disables default validation for the time input',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    errorText: {\n      name: 'error-text',\n      description: \"The input's error text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    helperText: {\n      name: 'helper-text',\n      description: \"The input's helper text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    label: {\n      description: \"The input's label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    min: {\n      name: 'min',\n      description: 'Minimum time (in 24 hour format)',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    max: {\n      name: 'max',\n      description: 'Maximum time (in 24 hour format)',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    placeholder: {\n      description: \"The input's placeholder text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    readOnly: {\n      name: 'read-only',\n      description: 'Whether the input is read-only',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    required: {\n      description: 'Whether the input is required',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    size: {\n      options: ['medium', 'large'],\n      type: 'select',\n      description: 'The size of the input',\n      table: {\n        defaultValue: { summary: \"'medium'\" },\n        type: { summary: \"'medium' | 'large'\" },\n      },\n    },\n    validText: {\n      name: 'valid-text',\n      description: \"The input's valid text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    value: {\n      description: \"The input's value\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n  },\n  parameters: {\n    actions: {\n      handles: ['valueChange', 'timeInputBlur'],\n    },\n    controls: { expanded: true, sort: 'requiredFirst' },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n      enableShortcuts: false,\n    },\n  },\n  decorators: [withActions],\n};\n\nconst Template = ({\n  ampm,\n  autoFormat,\n  ariaLabel,\n  autoFocusInput,\n  disabled,\n  disableValidation,\n  errorText,\n  helperText,\n  label,\n  min,\n  max,\n  placeholder,\n  readOnly,\n  required,\n  size,\n  validText,\n  value,\n}) => html`\n  <modus-time-picker\n    ampm=${ampm}\n    auto-format=${autoFormat}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    valid-text=${validText}\n    value=${value}></modus-time-picker>\n`;\n\nconst defaultArgs = {\n  ampm: false,\n  autoFormat: false,\n  ariaLabel: 'Time Input',\n  autoFocusInput: true,\n  disableValidation: false,\n  disabled: false,\n  errorText: '',\n  helperText: 'hh:mm',\n  label: 'Time',\n  min: null,\n  max: null,\n  placeholder: '',\n  readOnly: false,\n  required: false,\n  size: 'medium',\n  validText: '',\n  value: '23:39',\n};\n\nexport const Default = Template.bind({});\nDefault.args = defaultArgs;\n\nexport const TimeFormat = Template.bind({});\nTimeFormat.args = {\n  ...defaultArgs,\n  ...{ ampm: 'true', helperText: 'hh:mm AM/PM', placeholder: '12:00 AM' },\n};\n\nexport const AutoFormat = Template.bind({});\nAutoFormat.args = {\n  ...defaultArgs,\n  ...{\n    ampm: true,\n    value: '',\n    helperText: 'hh:mm AM/PM',\n    autoFormat: true,\n    placeholder: '12:00 AM',\n  },\n};\n\nexport const MinAndMax = Template.bind({});\nMinAndMax.args = {\n  ...defaultArgs,\n  ...{\n    min: '14:00',\n    max: '20:00',\n    helperText: 'hh:mm (min=14:00 to max=20:00)',\n    value: '14:00',\n    placeholder: '14:00',\n    autoFormat: true,\n  },\n};\n\nconst WithTimeZoneTemplate = ({\n  ampm,\n  autoFormat,\n  ariaLabel,\n  autoFocusInput,\n  disabled,\n  disableValidation,\n  errorText,\n  helperText,\n  label,\n  min,\n  max,\n  placeholder,\n  readOnly,\n  required,\n  size,\n  validText,\n  value,\n}) => html`\n  <modus-time-picker\n    ampm=${ampm}\n    auto-format=${autoFormat}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    valid-text=${validText}\n    value=${value}>\n    <div style=\"width: 300px;padding-left: 0.5rem;\" slot=\"timeZone\">\n      <modus-select id=\"timezone\" label=\"Time Zone\" aria-label=\"Time Zone\" options-display-prop=\"display\"></modus-select>\n    </div>\n  </modus-time-picker>\n  ${setSelects()}\n`;\n\nconst setSelects = () => {\n  const tag = document.createElement('script');\n  tag.innerHTML = `\n  const modusSelect = document.querySelector('#timezone');\n  modusSelect.options = [\n    { display: 'Alpha Time Zone' },\n    { display: 'Australian Central Daylight Time' },\n    { display: 'Atlantic Daylight Time' },\n  ];\n  `;\n\n  return tag;\n};\nexport const WithTimeZone = WithTimeZoneTemplate.bind({});\nWithTimeZone.args = { ...defaultArgs, autoFormat: true };\n",
  "storybook": {
    "examples": [
      "<modus-time-picker\n    ampm=${ampm}\n    auto-format=${autoFormat}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    valid-text=${validText}\n    value=${value}></modus-time-picker>",
      "<modus-select id=\"timezone\" label=\"Time Zone\" aria-label=\"Time Zone\" options-display-prop=\"display\"></modus-select>",
      "\n  <modus-time-picker\n    ampm=${ampm}\n    auto-format=${autoFormat}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    valid-text=${validText}\n    value=${value}></modus-time-picker>\n",
      "\n  <modus-time-picker\n    ampm=${ampm}\n    auto-format=${autoFormat}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    valid-text=${validText}\n    value=${value}>\n    <div style=\"width: 300px;padding-left: 0.5rem;\" slot=\"timeZone\">\n      <modus-select id=\"timezone\" label=\"Time Zone\" aria-label=\"Time Zone\" options-display-prop=\"display\"></modus-select>\n    </div>\n  </modus-time-picker>\n  ${setSelects()}\n"
    ],
    "variants": [],
    "prop_usage": {
      "style": [
        "width: 300px;padding-left: 0.5rem;"
      ],
      "slot": [
        "timeZone"
      ],
      "id": [
        "timezone"
      ],
      "label": [
        "Time Zone"
      ],
      "prop": [
        "display"
      ]
    }
  },
  "tag_name": "modus-time-picker"
}