{
  "component_name": "modus-wc-input-feedback",
  "version": "v2",
  "props": [
    {
      "name": "customClass",
      "description": "/**\n * A customizable feedback component used to provide additional context related to form input interactions.\n *\n * <b>To use a custom icon, this component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-input-feedback',\n  styleUrl: 'modus-wc-input-feedback.scss',\n  shadow: false,\n})\nexport class ModusWcInputFeedback {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the outer div element. */",
      "type": ": string"
    },
    {
      "name": "icon",
      "description": "/**\n * A customizable feedback component used to provide additional context related to form input interactions.\n *\n * <b>To use a custom icon, this component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-input-feedback',\n  styleUrl: 'modus-wc-input-feedback.scss',\n  shadow: false,\n})\nexport class ModusWcInputFeedback {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the outer div element. */",
      "type": ": string"
    },
    {
      "name": "level",
      "description": "/**\n * A customizable feedback component used to provide additional context related to form input interactions.\n *\n * <b>To use a custom icon, this component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-input-feedback',\n  styleUrl: 'modus-wc-input-feedback.scss',\n  shadow: false,\n})\nexport class ModusWcInputFeedback {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the outer div element. */",
      "type": ": IInputFeedbackLevel"
    },
    {
      "name": "message",
      "description": "/**\n * A customizable feedback component used to provide additional context related to form input interactions.\n *\n * <b>To use a custom icon, this component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-input-feedback',\n  styleUrl: 'modus-wc-input-feedback.scss',\n  shadow: false,\n})\nexport class ModusWcInputFeedback {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the outer div element. */",
      "type": ": string"
    },
    {
      "name": "size",
      "description": "/**\n * A customizable feedback component used to provide additional context related to form input interactions.\n *\n * <b>To use a custom icon, this component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-input-feedback',\n  styleUrl: 'modus-wc-input-feedback.scss',\n  shadow: false,\n})\nexport class ModusWcInputFeedback {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the outer div element. */",
      "type": ": ModusSize"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "customClass": "''",
    "icon": "''",
    "message": "''",
    "size": "'md'"
  },
  "documentation": "\n\n--- modus-wc-input-feedback.stories.ts ---\n\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { IInputFeedbackLevel } from './modus-wc-input-feedback';\nimport { ModusSize } from '../types';\n\ninterface InputFeedbackArgs {\n  'custom-class'?: string;\n  icon?: string;\n  level: IInputFeedbackLevel;\n  message?: string;\n  size?: ModusSize;\n}\n\nconst meta: Meta<InputFeedbackArgs> = {\n  title: 'Components/Forms/Input Feedback',\n  component: 'modus-wc-input-feedback',\n  args: {\n    level: 'error',\n    message: 'Uh oh. You done messed up.',\n    size: 'md',\n  },\n  argTypes: {\n    level: {\n      control: { type: 'select' },\n      options: ['error', 'info', 'success', 'warning'],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<InputFeedbackArgs>;\n\nconst Template: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-input-feedback\n  custom-class=${ifDefined(args['custom-class'])}\n  icon=${ifDefined(args.icon)}\n  level=${args.level}\n  message=${ifDefined(args.message)}\n  size=${ifDefined(args.size)}\n>\n</modus-wc-input-feedback>\n    `;\n  },\n};\n\nexport const Default: Story = { ...Template };\n\nexport const WithCustomModusIcon: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-input-feedback\n  custom-class=${ifDefined(args['custom-class'])}\n  icon='calendar_check'\n  level='success'\n  message='Event added to calendar!'\n  size=${ifDefined(args.size)}\n>\n</modus-wc-input-feedback>\n    `;\n  },\n};\n",
  "storybook": {
    "examples": [
      "<modus-wc-input-feedback\n  custom-class=${ifDefined(args['custom-class'])}\n  icon=${ifDefined(args.icon)}\n  level=${args.level}\n  message=${ifDefined(args.message)}\n  size=${ifDefined(args.size)}\n>\n</modus-wc-input-feedback>",
      "<modus-wc-input-feedback\n  custom-class=${ifDefined(args['custom-class'])}\n  icon='calendar_check'\n  level='success'\n  message='Event added to calendar!'\n  size=${ifDefined(args.size)}\n>\n</modus-wc-input-feedback>",
      "\n<modus-wc-input-feedback\n  custom-class=${ifDefined(args['custom-class'])}\n  icon=${ifDefined(args.icon)}\n  level=${args.level}\n  message=${ifDefined(args.message)}\n  size=${ifDefined(args.size)}\n>\n</modus-wc-input-feedback>\n    ",
      "\n<modus-wc-input-feedback\n  custom-class=${ifDefined(args['custom-class'])}\n  icon='calendar_check'\n  level='success'\n  message='Event added to calendar!'\n  size=${ifDefined(args.size)}\n>\n</modus-wc-input-feedback>\n    "
    ],
    "variants": [],
    "prop_usage": {
      "icon": [
        "calendar_check"
      ],
      "level": [
        "success"
      ],
      "message": [
        "Event added to calendar!"
      ]
    }
  },
  "tag_name": "modus-wc-input-feedback"
}