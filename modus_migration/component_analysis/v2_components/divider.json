{
  "component_name": "modus-wc-divider",
  "version": "v2",
  "props": [
    {
      "name": "color",
      "description": "/**\n * A customizable divider component used to separate content horizontally or vertically\n */\n@Component({\n  tag: 'modus-wc-divider',\n  styleUrl: 'modus-wc-divider.scss',\n  shadow: false,\n})\nexport class ModusWcDivider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The color of the divider line. */",
      "type": ":\n    | 'primary'\n    | 'secondary'\n    | 'tertiary'\n    | 'high-contrast'\n    | 'success'\n    | 'warning'\n    | 'danger'"
    },
    {
      "name": "content",
      "description": "/**\n * A customizable divider component used to separate content horizontally or vertically\n */\n@Component({\n  tag: 'modus-wc-divider',\n  styleUrl: 'modus-wc-divider.scss',\n  shadow: false,\n})\nexport class ModusWcDivider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The color of the divider line. */",
      "type": ": string"
    },
    {
      "name": "customClass",
      "description": "/**\n * A customizable divider component used to separate content horizontally or vertically\n */\n@Component({\n  tag: 'modus-wc-divider',\n  styleUrl: 'modus-wc-divider.scss',\n  shadow: false,\n})\nexport class ModusWcDivider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The color of the divider line. */",
      "type": ": string"
    },
    {
      "name": "orientation",
      "description": "/**\n * A customizable divider component used to separate content horizontally or vertically\n */\n@Component({\n  tag: 'modus-wc-divider',\n  styleUrl: 'modus-wc-divider.scss',\n  shadow: false,\n})\nexport class ModusWcDivider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The color of the divider line. */",
      "type": ": Orientation"
    },
    {
      "name": "position",
      "description": "/**\n * A customizable divider component used to separate content horizontally or vertically\n */\n@Component({\n  tag: 'modus-wc-divider',\n  styleUrl: 'modus-wc-divider.scss',\n  shadow: false,\n})\nexport class ModusWcDivider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The color of the divider line. */",
      "type": ": 'center' | 'end' | 'start'"
    },
    {
      "name": "responsive",
      "description": "/**\n * A customizable divider component used to separate content horizontally or vertically\n */\n@Component({\n  tag: 'modus-wc-divider',\n  styleUrl: 'modus-wc-divider.scss',\n  shadow: false,\n})\nexport class ModusWcDivider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The color of the divider line. */",
      "type": ": boolean"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "color": "'tertiary'",
    "content": "''",
    "customClass": "''",
    "orientation": "'vertical'",
    "position": "'center'",
    "responsive": "true"
  },
  "documentation": "\n\n--- modus-wc-divider.stories.ts ---\n\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { Orientation } from '../types';\n\ninterface DividerArgs {\n  color:\n    | 'primary'\n    | 'secondary'\n    | 'tertiary'\n    | 'high-contrast'\n    | 'success'\n    | 'warning'\n    | 'danger';\n  content: string;\n  'custom-class'?: string;\n  orientation: Orientation;\n  position: 'center' | 'end' | 'start';\n  responsive: boolean;\n}\n\nconst meta: Meta<DividerArgs> = {\n  title: 'Components/Divider',\n  component: 'modus-wc-divider',\n  args: {\n    color: 'tertiary',\n    content: '',\n    'custom-class': '',\n    orientation: 'vertical',\n    position: 'center',\n    responsive: true,\n  },\n  argTypes: {\n    color: {\n      control: { type: 'select' },\n      options: [\n        'primary',\n        'secondary',\n        'tertiary',\n        'high-contrast',\n        'success',\n        'warning',\n        'danger',\n      ],\n    },\n    content: {\n      control: 'text',\n    },\n    'custom-class': {\n      control: 'text',\n    },\n    orientation: {\n      control: { type: 'select' },\n      options: ['horizontal', 'vertical'],\n    },\n    position: {\n      control: { type: 'select' },\n      options: ['start', 'center', 'end'],\n    },\n    responsive: {\n      control: { type: 'boolean' },\n    },\n  },\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<DividerArgs>;\n\nconst Template: Story = {\n  render: (args) => html`\n    <modus-wc-divider\n      color=\"${args.color}\"\n      content=\"${args.content}\"\n      custom-class=\"${ifDefined(args['custom-class'])}\"\n      orientation=\"${args.orientation}\"\n      position=\"${args.position}\"\n      responsive=\"${args.responsive}\"\n      style=\"${args.orientation === 'horizontal'\n        ? 'display: flex; height: 100px'\n        : ''}\"\n    ></modus-wc-divider>\n  `,\n};\n\nexport const Default: Story = { ...Template };\n",
  "storybook": {
    "examples": [
      "<modus-wc-divider\n      color=\"${args.color}\"\n      content=\"${args.content}\"\n      custom-class=\"${ifDefined(args['custom-class'])}\"\n      orientation=\"${args.orientation}\"\n      position=\"${args.position}\"\n      responsive=\"${args.responsive}\"\n      style=\"${args.orientation === 'horizontal'\n        ? 'display: flex; height: 100px'\n        : ''}\"\n    ></modus-wc-divider>",
      "\n    <modus-wc-divider\n      color=\"${args.color}\"\n      content=\"${args.content}\"\n      custom-class=\"${ifDefined(args['custom-class'])}\"\n      orientation=\"${args.orientation}\"\n      position=\"${args.position}\"\n      responsive=\"${args.responsive}\"\n      style=\"${args.orientation === 'horizontal'\n        ? 'display: flex; height: 100px'\n        : ''}\"\n    ></modus-wc-divider>\n  "
    ],
    "variants": [],
    "prop_usage": {
      "color": [
        "${args.color}"
      ],
      "content": [
        "${args.content}"
      ],
      "class": [
        "${ifDefined(args["
      ],
      "orientation": [
        "${args.orientation}"
      ],
      "position": [
        "${args.position}"
      ],
      "responsive": [
        "${args.responsive}"
      ],
      "style": [
        "${args.orientation === "
      ]
    }
  },
  "tag_name": "modus-wc-divider"
}