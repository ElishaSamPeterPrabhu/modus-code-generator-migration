{
  "component_name": "modus-wc-avatar",
  "version": "v2",
  "props": [
    {
      "name": "alt",
      "description": "/**\n * A customizable avatar component used to create avatars with different images or user initials.\n * When no image is provided, the component can display initials (up to 3 characters) from the initials prop.\n * The component will extract the first letter of each word in the initials string.\n */\n@Component({\n  tag: 'modus-wc-avatar',\n  styleUrl: 'modus-wc-avatar.scss',\n  shadow: false,\n})\nexport class ModusWcAvatar {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The image alt attribute for accessibility. */",
      "type": ": string"
    },
    {
      "name": "customClass",
      "description": "/**\n * A customizable avatar component used to create avatars with different images or user initials.\n * When no image is provided, the component can display initials (up to 3 characters) from the initials prop.\n * The component will extract the first letter of each word in the initials string.\n */\n@Component({\n  tag: 'modus-wc-avatar',\n  styleUrl: 'modus-wc-avatar.scss',\n  shadow: false,\n})\nexport class ModusWcAvatar {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The image alt attribute for accessibility. */",
      "type": ": string"
    },
    {
      "name": "imgSrc",
      "description": "/**\n * A customizable avatar component used to create avatars with different images or user initials.\n * When no image is provided, the component can display initials (up to 3 characters) from the initials prop.\n * The component will extract the first letter of each word in the initials string.\n */\n@Component({\n  tag: 'modus-wc-avatar',\n  styleUrl: 'modus-wc-avatar.scss',\n  shadow: false,\n})\nexport class ModusWcAvatar {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The image alt attribute for accessibility. */",
      "type": "string"
    },
    {
      "name": "initials",
      "description": "/**\n * A customizable avatar component used to create avatars with different images or user initials.\n * When no image is provided, the component can display initials (up to 3 characters) from the initials prop.\n * The component will extract the first letter of each word in the initials string.\n */\n@Component({\n  tag: 'modus-wc-avatar',\n  styleUrl: 'modus-wc-avatar.scss',\n  shadow: false,\n})\nexport class ModusWcAvatar {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The image alt attribute for accessibility. */",
      "type": ": string"
    },
    {
      "name": "shape",
      "description": "/**\n * A customizable avatar component used to create avatars with different images or user initials.\n * When no image is provided, the component can display initials (up to 3 characters) from the initials prop.\n * The component will extract the first letter of each word in the initials string.\n */\n@Component({\n  tag: 'modus-wc-avatar',\n  styleUrl: 'modus-wc-avatar.scss',\n  shadow: false,\n})\nexport class ModusWcAvatar {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The image alt attribute for accessibility. */",
      "type": ": 'circle' | 'square'"
    },
    {
      "name": "size",
      "description": "/**\n * A customizable avatar component used to create avatars with different images or user initials.\n * When no image is provided, the component can display initials (up to 3 characters) from the initials prop.\n * The component will extract the first letter of each word in the initials string.\n */\n@Component({\n  tag: 'modus-wc-avatar',\n  styleUrl: 'modus-wc-avatar.scss',\n  shadow: false,\n})\nexport class ModusWcAvatar {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The image alt attribute for accessibility. */",
      "type": ": DaisySize"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "alt": "{altText} />\n            ) : this.initials ? (\n              <span class=\"initials\" aria-label={this.alt || this.initials}>\n                {this.getUserInitials()}\n              </span>\n            ) : (\n              <modus-wc-icon\n                aria-label={altText}\n                name=\"person\"\n                size={this.size}\n                variant=\"solid\"\n              ></modus-wc-icon>\n            )}\n          </div>\n        </div>\n      </Host>\n    )",
    "customClass": "''",
    "imgSrc": "''",
    "initials": "''",
    "shape": "'circle'",
    "size": "'md'"
  },
  "documentation": "\n\n--- modus-wc-avatar.stories.ts ---\n\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { DaisySize } from '../types';\n\ninterface AvatarArgs {\n  alt: string;\n  'custom-class'?: string;\n  'img-src': string;\n  initials: string;\n  shape: string;\n  size: DaisySize;\n}\n\nconst meta: Meta<AvatarArgs> = {\n  title: 'Components/Avatar',\n  component: 'modus-wc-avatar',\n  args: {\n    alt: 'Example avatar',\n    'img-src':\n      'https://i.pinimg.com/474x/73/54/79/7354794bf3873c3ef2666f778da4bcac.jpg',\n    shape: 'circle',\n    initials: '',\n    size: 'md',\n  },\n  argTypes: {\n    shape: {\n      control: { type: 'select' },\n      options: ['circle', 'square'],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['xs', 'sm', 'md', 'lg'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<AvatarArgs>;\n\nconst Template: Story = {\n  render: (args) => {\n    return html`\n      <modus-wc-avatar\n        alt=\"${args.alt}\"\n        custom-class=\"${ifDefined(args['custom-class'])}\"\n        img-src=\"${args['img-src']}\"\n        initials=\"${args.initials}\"\n        shape=\"${args.shape}\"\n        size=\"${args.size}\"\n      ></modus-wc-avatar>\n    `;\n  },\n};\n\nexport const Default: Story = { ...Template };\n",
  "storybook": {
    "examples": [
      "<modus-wc-avatar\n        alt=\"${args.alt}\"\n        custom-class=\"${ifDefined(args['custom-class'])}\"\n        img-src=\"${args['img-src']}\"\n        initials=\"${args.initials}\"\n        shape=\"${args.shape}\"\n        size=\"${args.size}\"\n      ></modus-wc-avatar>",
      "\n      <modus-wc-avatar\n        alt=\"${args.alt}\"\n        custom-class=\"${ifDefined(args['custom-class'])}\"\n        img-src=\"${args['img-src']}\"\n        initials=\"${args.initials}\"\n        shape=\"${args.shape}\"\n        size=\"${args.size}\"\n      ></modus-wc-avatar>\n    "
    ],
    "variants": [],
    "prop_usage": {
      "alt": [
        "${args.alt}"
      ],
      "class": [
        "${ifDefined(args["
      ],
      "src": [
        "${args["
      ],
      "initials": [
        "${args.initials}"
      ],
      "shape": [
        "${args.shape}"
      ],
      "size": [
        "${args.size}"
      ]
    }
  },
  "tag_name": "modus-wc-avatar"
}