{
  "component_name": "modus-wc-icon",
  "version": "v2",
  "props": [
    {
      "name": "customClass",
      "description": "/**\n * A customizable icon component used to render Modus icons.\n *\n * <b>This component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-icon',\n  styleUrl: 'modus-wc-icon.scss',\n  shadow: false,\n})\nexport class ModusWcIcon {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the i element. */",
      "type": ": string"
    },
    {
      "name": "decorative",
      "description": "/**\n * A customizable icon component used to render Modus icons.\n *\n * <b>This component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-icon',\n  styleUrl: 'modus-wc-icon.scss',\n  shadow: false,\n})\nexport class ModusWcIcon {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the i element. */",
      "type": ": boolean"
    },
    {
      "name": "name",
      "description": "/**\n * A customizable icon component used to render Modus icons.\n *\n * <b>This component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-icon',\n  styleUrl: 'modus-wc-icon.scss',\n  shadow: false,\n})\nexport class ModusWcIcon {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the i element. */",
      "type": ": string"
    },
    {
      "name": "size",
      "description": "/**\n * A customizable icon component used to render Modus icons.\n *\n * <b>This component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-icon',\n  styleUrl: 'modus-wc-icon.scss',\n  shadow: false,\n})\nexport class ModusWcIcon {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the i element. */",
      "type": ": DaisySize"
    },
    {
      "name": "variant",
      "description": "/**\n * A customizable icon component used to render Modus icons.\n *\n * <b>This component requires Modus icons to be installed in the host application. See [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs) for steps.</b>\n\n */\n@Component({\n  tag: 'modus-wc-icon',\n  styleUrl: 'modus-wc-icon.scss',\n  shadow: false,\n})\nexport class ModusWcIcon {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the i element. */",
      "type": ": 'outlined' | 'solid'"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "customClass": "''",
    "decorative": "true",
    "size": "'md'",
    "variant": "== 'outlined') {\n      classList.push('modus-icons-outlined')"
  },
  "documentation": "\n\n--- modus-wc-icon.stories.ts ---\n\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { DaisySize } from '../types';\n\ninterface IconArgs {\n  'custom-class'?: string;\n  decorative: boolean;\n  name: string;\n  size: DaisySize;\n  variant?: 'outlined' | 'solid';\n}\n\nconst meta: Meta<IconArgs> = {\n  title: 'Components/Icon',\n  component: 'modus-wc-icon',\n  args: {\n    'custom-class': '',\n    decorative: false,\n    name: 'alert',\n    size: 'md',\n  },\n  argTypes: {\n    size: {\n      control: { type: 'select' },\n      options: ['xs', 'sm', 'md', 'lg'],\n    },\n    variant: {\n      control: { type: 'select' },\n      options: ['outlined', 'solid'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<IconArgs>;\n\nconst Template: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-icon\n  aria-label=\"Alert icon\"\n  custom-class=\"${ifDefined(args['custom-class'])}\"\n  ?decorative=\"${args.decorative}\"\n  name=\"${args.name}\"\n  size=\"${args.size}\"\n  variant=\"${ifDefined(args.variant)}\"\n>\n</modus-wc-icon>\n    `;\n  },\n};\n\nexport const Default: Story = { ...Template };\n\nexport const CustomColor: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<style>\n  .red-icon {\n    color: red;\n  }\n</style>\n<modus-wc-icon\n  aria-label=\"Red alert icon\"\n  custom-class=\"red-icon\"\n  name=\"alert\"\n  size=\"${args.size}\"\n>\n</modus-wc-icon>\n    `;\n  },\n};\n\nexport const CustomIcons: Story = {\n  args: {\n    'custom-class': 'icon-font tc-icon-cloud-queue',\n    decorative: false,\n    name: '',\n    size: 'lg',\n  },\n  decorators: [\n    (story) => html`\n      <link\n        rel=\"stylesheet\"\n        href=\"https://resources.connect.trimble.com/1.12.0/fonts/icon-font.min.css\"\n      />\n      ${story()}\n    `,\n  ],\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-icon\n  aria-label=\"Cloud Queue icon\"\n  custom-class=\"${ifDefined(args['custom-class'])}\"\n  ?decorative=\"${args.decorative}\"\n  name=\"${args.name}\"\n  size=\"${args.size}\"\n>\n</modus-wc-icon>\n    `;\n  },\n};\n\nexport const Migration: Story = {\n  parameters: {\n    docs: {\n      description: {\n        story: `\n#### Breaking Changes\n\n  - Requires <b>Modus Icons</b> to be installed in the host application see [Modus Icon Usage](/docs/documentation-modus-icon-usage--docs).\n  - The \\`color\\` property has been removed in favor of using CSS for styling.\n  - The \\`iconClick\\` event has been removed. Use the \\`click\\` event on the host element instead.\n  - In 1.0 the \\`size\\` prop accepted any numeric string (e.g., \\`'16'\\`, \\`'24'\\`, \\`'32'\\`) to set the icon's\n  width and height. 2.0 uses preset sizes: \\`sm\\`, \\`md\\`, \\`lg\\`, and can use CSS for custom sizes.\n\n#### Prop Mapping\n\n| 1.0 Prop | 2.0 Prop | Notes                                                |\n|----------|----------|------------------------------------------------------|\n| color    |          | Not carried over, use CSS instead                    |\n| name     | name     |                                                      |\n| size     | size     | Numeric values changed to \\`sm\\`, \\`md\\`, \\`lg\\`, use CSS for custom sizes |\n\n#### Event Mapping\n\n| 1.0 Event | 2.0 Event | Notes                                                         |\n|-----------|-----------|---------------------------------------------------------------|\n| iconClick |           | Not carried over, use \\`click\\` event on host element instead |\n        `,\n      },\n    },\n    controls: { disable: true },\n    canvas: { disable: true },\n  },\n  render: () => html`<div></div>`,\n};\n",
  "storybook": {
    "examples": [
      "<modus-wc-icon\n  aria-label=\"Alert icon\"\n  custom-class=\"${ifDefined(args['custom-class'])}\"\n  ?decorative=\"${args.decorative}\"\n  name=\"${args.name}\"\n  size=\"${args.size}\"\n  variant=\"${ifDefined(args.variant)}\"\n>\n</modus-wc-icon>",
      "<modus-wc-icon\n  aria-label=\"Red alert icon\"\n  custom-class=\"red-icon\"\n  name=\"alert\"\n  size=\"${args.size}\"\n>\n</modus-wc-icon>",
      "<modus-wc-icon\n  aria-label=\"Cloud Queue icon\"\n  custom-class=\"${ifDefined(args['custom-class'])}\"\n  ?decorative=\"${args.decorative}\"\n  name=\"${args.name}\"\n  size=\"${args.size}\"\n>\n</modus-wc-icon>",
      "\n<modus-wc-icon\n  aria-label=\"Alert icon\"\n  custom-class=\"${ifDefined(args['custom-class'])}\"\n  ?decorative=\"${args.decorative}\"\n  name=\"${args.name}\"\n  size=\"${args.size}\"\n  variant=\"${ifDefined(args.variant)}\"\n>\n</modus-wc-icon>\n    ",
      "\n<style>\n  .red-icon {\n    color: red;\n  }\n</style>\n<modus-wc-icon\n  aria-label=\"Red alert icon\"\n  custom-class=\"red-icon\"\n  name=\"alert\"\n  size=\"${args.size}\"\n>\n</modus-wc-icon>\n    "
    ],
    "variants": [
      "${ifDefined(args.variant)}"
    ],
    "prop_usage": {
      "label": [
        "Alert icon",
        "Red alert icon",
        "Cloud Queue icon"
      ],
      "class": [
        "${ifDefined(args[",
        "red-icon"
      ],
      "decorative": [
        "${args.decorative}"
      ],
      "name": [
        "${args.name}",
        "alert"
      ],
      "size": [
        "${args.size}"
      ],
      "variant": [
        "${ifDefined(args.variant)}"
      ],
      "rel": [
        "stylesheet"
      ],
      "href": [
        "https://resources.connect.trimble.com/1.12.0/fonts/icon-font.min.css"
      ]
    }
  },
  "tag_name": "modus-wc-icon"
}