{
  "component_name": "modus-wc-slider",
  "version": "v2",
  "props": [
    {
      "name": "customClass",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": string"
    },
    {
      "name": "disabled",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": boolean"
    },
    {
      "name": "inputId",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": string"
    },
    {
      "name": "inputTabIndex",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": number"
    },
    {
      "name": "label",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": string"
    },
    {
      "name": "max",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": number"
    },
    {
      "name": "min",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": number"
    },
    {
      "name": "name",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": string"
    },
    {
      "name": "required",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": boolean"
    },
    {
      "name": "size",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": ModusSize"
    },
    {
      "name": "step",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": number"
    },
    {
      "name": "value",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": "number"
    }
  ],
  "events": [
    {
      "name": "inputBlur",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */\n  @Prop() customClass?: string = '';\n\n  /** The disabled state of the slider. */\n  @Prop() disabled?: boolean = false;\n\n  /** The ID of the input element. */\n  @Prop() inputId?: string;\n\n  /** The tabindex of the input. */\n  @Prop() inputTabIndex?: number;\n\n  /** The text to display within the label. */\n  @Prop() label?: string;\n\n  /** The maximum slider value. */\n  @Prop() max?: number;\n\n  /** The minimum slider value. */\n  @Prop() min?: number;\n\n  /** Name of the form control. Submitted with the form as part of a name/value pair. */\n  @Prop() name?: string = '';\n\n  /** A value is required for the form to be submittable. */\n  @Prop() required?: boolean = false;\n\n  /** The size of the input. */\n  @Prop() size?: ModusSize = 'md';\n\n  /** The increment of the slider. */\n  @Prop() step?: number;\n\n  /** The value of the slider. */\n  @Prop({ mutable: true, reflect: true }) value: number = 0;\n\n  /** Emitted when the input loses focus. */"
    },
    {
      "name": "inputChange",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */\n  @Prop() customClass?: string = '';\n\n  /** The disabled state of the slider. */\n  @Prop() disabled?: boolean = false;\n\n  /** The ID of the input element. */\n  @Prop() inputId?: string;\n\n  /** The tabindex of the input. */\n  @Prop() inputTabIndex?: number;\n\n  /** The text to display within the label. */\n  @Prop() label?: string;\n\n  /** The maximum slider value. */\n  @Prop() max?: number;\n\n  /** The minimum slider value. */\n  @Prop() min?: number;\n\n  /** Name of the form control. Submitted with the form as part of a name/value pair. */\n  @Prop() name?: string = '';\n\n  /** A value is required for the form to be submittable. */\n  @Prop() required?: boolean = false;\n\n  /** The size of the input. */\n  @Prop() size?: ModusSize = 'md';\n\n  /** The increment of the slider. */\n  @Prop() step?: number;\n\n  /** The value of the slider. */\n  @Prop({ mutable: true, reflect: true }) value: number = 0;\n\n  /** Emitted when the input loses focus. */"
    },
    {
      "name": "inputFocus",
      "description": "/**\n * A customizable slider component\n */\n@Component({\n  tag: 'modus-wc-slider',\n  styleUrl: 'modus-wc-slider.scss',\n  shadow: false,\n})\nexport class ModusWcSlider {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */\n  @Prop() customClass?: string = '';\n\n  /** The disabled state of the slider. */\n  @Prop() disabled?: boolean = false;\n\n  /** The ID of the input element. */\n  @Prop() inputId?: string;\n\n  /** The tabindex of the input. */\n  @Prop() inputTabIndex?: number;\n\n  /** The text to display within the label. */\n  @Prop() label?: string;\n\n  /** The maximum slider value. */\n  @Prop() max?: number;\n\n  /** The minimum slider value. */\n  @Prop() min?: number;\n\n  /** Name of the form control. Submitted with the form as part of a name/value pair. */\n  @Prop() name?: string = '';\n\n  /** A value is required for the form to be submittable. */\n  @Prop() required?: boolean = false;\n\n  /** The size of the input. */\n  @Prop() size?: ModusSize = 'md';\n\n  /** The increment of the slider. */\n  @Prop() step?: number;\n\n  /** The value of the slider. */\n  @Prop({ mutable: true, reflect: true }) value: number = 0;\n\n  /** Emitted when the input loses focus. */"
    }
  ],
  "slots": [],
  "default_values": {
    "customClass": "''",
    "disabled": "false",
    "max": "{this.max}\n          min={this.min}\n          name={this.name}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          onInput={this.handleInput}\n          required={this.required}\n          step={this.step}\n          tabIndex={this.inputTabIndex}\n          type=\"range\"\n          value={this.value}\n          {...this.inheritedAttributes}\n        />\n      </Host>\n    )",
    "min": "{this.min}\n          name={this.name}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          onInput={this.handleInput}\n          required={this.required}\n          step={this.step}\n          tabIndex={this.inputTabIndex}\n          type=\"range\"\n          value={this.value}\n          {...this.inheritedAttributes}\n        />\n      </Host>\n    )",
    "name": "''",
    "required": "false",
    "size": "'md'",
    "step": "{this.step}\n          tabIndex={this.inputTabIndex}\n          type=\"range\"\n          value={this.value}\n          {...this.inheritedAttributes}\n        />\n      </Host>\n    )",
    "value": "0"
  },
  "documentation": "\n\n--- modus-wc-slider.stories.ts ---\n\nimport { withActions } from '@storybook/addon-actions/decorator';\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { ModusSize } from '../types';\n\ninterface SliderArgs {\n  'custom-class'?: string;\n  disabled?: boolean;\n  'input-id'?: string;\n  'input-tab-index'?: number;\n  label?: string;\n  max?: number;\n  min?: number;\n  name?: string;\n  required?: boolean;\n  size?: ModusSize;\n  step?: number;\n  value: boolean;\n}\n\nconst meta: Meta<SliderArgs> = {\n  title: 'Components/Forms/Slider',\n  component: 'modus-wc-slider',\n  args: {\n    'custom-class': '',\n    disabled: false,\n    label: 'Label',\n    name: '',\n    required: false,\n    size: 'md',\n    value: true,\n  },\n  argTypes: {\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n    },\n  },\n  decorators: [withActions],\n  parameters: {\n    actions: {\n      handles: ['inputBlur', 'inputChange', 'inputFocus'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<SliderArgs>;\n\nexport const Default: Story = {\n  render: (args) => {\n    return html`\n      <modus-wc-slider\n        aria-label=\"Slider\"\n        custom-class=${ifDefined(args['custom-class'])}\n        ?disabled=${args.disabled}\n        input-id=${ifDefined(args['input-id'])}\n        input-tab-index=${ifDefined(args['input-tab-index'])}\n        label=${ifDefined(args.label)}\n        max=${ifDefined(args.max)}\n        min=${ifDefined(args.min)}\n        name=${ifDefined(args.name)}\n        ?required=${args.required}\n        size=${ifDefined(args.size)}\n        step=${ifDefined(args.step)}\n        .value=${args.value}\n      ></modus-wc-slider>\n    `;\n  },\n};\n\nexport const Migration: Story = {\n  parameters: {\n    docs: {\n      description: {\n        story: `\n#### Breaking Changes\n\n  - In 1.0 input state was maintained by the component. 2.0 components encourage users to follow a controlled\n  input model. See the Form Inputs [documentation](/docs/documentation-form-inputs--docs) for additional info and examples.\n  - Property names have changed: \\`max-value\\` \u2192 \\`max\\`, \\`min-value\\` \u2192 \\`min\\`.\n\n#### Prop Mapping\n\n| 1.0 Prop    | 2.0 Prop     | Notes |\n|-------------|--------------|-------|\n| aria-label  | aria-label   |       |\n| disabled    | disabled     |       |\n| label       | label        |       |\n| max-value   | max          |       |\n| min-value   | min          |       |\n| value       | value        |       |\n\n#### Event Mapping\n\n| 1.0 Event   | 2.0 Event   | Notes            |\n|-------------|-------------|------------------|\n| valueChange |             | Not carried over |\n| valueInput  | inputChange |                  |\n        `,\n      },\n    },\n    controls: { disable: true },\n    canvas: { disable: true },\n  },\n  render: () => html`<div></div>`,\n};\n",
  "storybook": {
    "examples": [
      "<modus-wc-slider\n        aria-label=\"Slider\"\n        custom-class=${ifDefined(args['custom-class'])}\n        ?disabled=${args.disabled}\n        input-id=${ifDefined(args['input-id'])}\n        input-tab-index=${ifDefined(args['input-tab-index'])}\n        label=${ifDefined(args.label)}\n        max=${ifDefined(args.max)}\n        min=${ifDefined(args.min)}\n        name=${ifDefined(args.name)}\n        ?required=${args.required}\n        size=${ifDefined(args.size)}\n        step=${ifDefined(args.step)}\n        .value=${args.value}\n      ></modus-wc-slider>",
      "\n      <modus-wc-slider\n        aria-label=\"Slider\"\n        custom-class=${ifDefined(args['custom-class'])}\n        ?disabled=${args.disabled}\n        input-id=${ifDefined(args['input-id'])}\n        input-tab-index=${ifDefined(args['input-tab-index'])}\n        label=${ifDefined(args.label)}\n        max=${ifDefined(args.max)}\n        min=${ifDefined(args.min)}\n        name=${ifDefined(args.name)}\n        ?required=${args.required}\n        size=${ifDefined(args.size)}\n        step=${ifDefined(args.step)}\n        .value=${args.value}\n      ></modus-wc-slider>\n    "
    ],
    "variants": [],
    "prop_usage": {
      "label": [
        "Slider"
      ]
    }
  },
  "tag_name": "modus-wc-slider"
}