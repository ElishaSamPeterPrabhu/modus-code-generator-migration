{
  "component_name": "modus-wc-skeleton",
  "version": "v2",
  "props": [
    {
      "name": "customClass",
      "description": "/**\n * A customizable skeleton component used to create skeletons of various sizes and shapes\n */\n@Component({\n  tag: 'modus-wc-skeleton',\n  styleUrl: 'modus-wc-skeleton.scss',\n  shadow: false,\n})\nexport class ModusWcSkeleton {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": string"
    },
    {
      "name": "height",
      "description": "/**\n * A customizable skeleton component used to create skeletons of various sizes and shapes\n */\n@Component({\n  tag: 'modus-wc-skeleton',\n  styleUrl: 'modus-wc-skeleton.scss',\n  shadow: false,\n})\nexport class ModusWcSkeleton {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": "string"
    },
    {
      "name": "shape",
      "description": "/**\n * A customizable skeleton component used to create skeletons of various sizes and shapes\n */\n@Component({\n  tag: 'modus-wc-skeleton',\n  styleUrl: 'modus-wc-skeleton.scss',\n  shadow: false,\n})\nexport class ModusWcSkeleton {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": 'circle' | 'rectangle'"
    },
    {
      "name": "width",
      "description": "/**\n * A customizable skeleton component used to create skeletons of various sizes and shapes\n */\n@Component({\n  tag: 'modus-wc-skeleton',\n  styleUrl: 'modus-wc-skeleton.scss',\n  shadow: false,\n})\nexport class ModusWcSkeleton {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": "string"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "customClass": "''",
    "height": "'var(--modus-wc-line-height-md)'",
    "shape": "'rectangle'",
    "width": "'100%'"
  },
  "documentation": "\n\n--- modus-wc-skeleton.stories.ts ---\n\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\ninterface SkeletonArgs {\n  'custom-class'?: string;\n  height?: string;\n  shape?: 'circle' | 'rectangle';\n  width?: string;\n}\n\nconst meta: Meta<SkeletonArgs> = {\n  title: 'Components/Skeleton',\n  component: 'modus-wc-skeleton',\n  args: {\n    'custom-class': '',\n    height: '1.5rem',\n    shape: 'rectangle',\n    width: '100%',\n  },\n  argTypes: {\n    shape: {\n      control: {\n        type: 'select',\n      },\n      options: ['circle', 'rectangle'],\n    },\n  },\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<SkeletonArgs>;\n\nexport const Default: Story = {\n  render: (args) => {\n    return html`\n      <modus-wc-skeleton\n        custom-class=${ifDefined(args['custom-class'])}\n        height=${ifDefined(args.height)}\n        shape=${ifDefined(args.shape)}\n        width=${ifDefined(args.width)}\n      ></modus-wc-skeleton>\n    `;\n  },\n};\n\nexport const Circle: Story = {\n  render: () => {\n    return html`\n      <modus-wc-skeleton\n        height=\"5rem\"\n        shape=\"circle\"\n        width=\"5rem\"\n      ></modus-wc-skeleton>\n    `;\n  },\n};\n\nexport const Square: Story = {\n  render: () => {\n    return html`\n      <modus-wc-skeleton height=\"5rem\" width=\"5rem\"></modus-wc-skeleton>\n    `;\n  },\n};\n\nexport const Composed: Story = {\n  render: () => {\n    // prettier-ignore\n    return html`\n<style>\n  .skeleton-container {\n    width: 13rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .skeleton-profile {\n    display: flex;\n    gap: 1rem;\n  }\n\n  .skeleton-text {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n</style>\n<div class=\"skeleton-container\">\n  <div class=\"skeleton-profile\">\n    <modus-wc-skeleton\n      height=\"4rem\"\n      shape=\"circle\"\n      width=\"4rem\"\n    ></modus-wc-skeleton>\n    <div class=\"skeleton-text\">\n      <modus-wc-skeleton width=\"5rem\"></modus-wc-skeleton>\n      <modus-wc-skeleton width=\"7rem\"></modus-wc-skeleton>\n    </div>\n  </div>\n  <modus-wc-skeleton height=\"8rem\"></modus-wc-skeleton>\n</div>\n    `;\n  },\n};\n",
  "storybook": {
    "examples": [
      "<modus-wc-skeleton\n        custom-class=${ifDefined(args['custom-class'])}\n        height=${ifDefined(args.height)}\n        shape=${ifDefined(args.shape)}\n        width=${ifDefined(args.width)}\n      ></modus-wc-skeleton>",
      "<modus-wc-skeleton\n        height=\"5rem\"\n        shape=\"circle\"\n        width=\"5rem\"\n      ></modus-wc-skeleton>",
      "<modus-wc-skeleton height=\"5rem\" width=\"5rem\"></modus-wc-skeleton>",
      "<modus-wc-skeleton\n      height=\"4rem\"\n      shape=\"circle\"\n      width=\"4rem\"\n    ></modus-wc-skeleton>",
      "<modus-wc-skeleton width=\"5rem\"></modus-wc-skeleton>"
    ],
    "variants": [],
    "prop_usage": {
      "height": [
        "5rem",
        "4rem",
        "8rem"
      ],
      "shape": [
        "circle"
      ],
      "width": [
        "5rem",
        "4rem",
        "7rem"
      ],
      "class": [
        "skeleton-container",
        "skeleton-profile",
        "skeleton-text"
      ]
    }
  },
  "tag_name": "modus-wc-skeleton"
}