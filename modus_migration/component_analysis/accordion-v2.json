{
  "component_name": "modus-wc-accordion",
  "version": "v2",
  "props": [
    {
      "name": "customClass",
      "description": "/**\n * A customizable accordion component used for showing and hiding related groups of content.\n *\n * The component supports a `<slot>` for injecting `<modus-wc-collapse>` elements. See [Collapse](/docs/components-collapse--docs) docs for additional info.\n */\n@Component({\n  tag: 'modus-wc-accordion',\n  styleUrl: 'modus-wc-accordion.scss',\n  shadow: false,\n})\nexport class ModusWcAccordion {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */",
      "type": ": string"
    }
  ],
  "events": [
    {
      "name": "expandedChange",
      "description": "/**\n * A customizable accordion component used for showing and hiding related groups of content.\n *\n * The component supports a `<slot>` for injecting `<modus-wc-collapse>` elements. See [Collapse](/docs/components-collapse--docs) docs for additional info.\n */\n@Component({\n  tag: 'modus-wc-accordion',\n  styleUrl: 'modus-wc-accordion.scss',\n  shadow: false,\n})\nexport class ModusWcAccordion {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** Custom CSS class to apply to the inner div. */\n  @Prop() customClass?: string = '';\n\n  /** When a collapse expanded state is changed, this event outputs the relevant index and state */"
    }
  ],
  "slots": [],
  "default_values": {
    "customClass": "''"
  },
  "documentation": "\n\n--- modus-wc-accordion.stories.ts ---\n\nimport { withActions } from '@storybook/addon-actions/decorator';\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { ICollapseOptions } from '../modus-wc-collapse/modus-wc-collapse';\n\ninterface AccordionArgs {\n  'custom-class'?: string;\n}\n\nconst collapseOptions: ICollapseOptions[] = [\n  {\n    description: 'Item one description',\n    icon: 'alert',\n    iconAriaLabel: 'Alert',\n    title: 'Item One',\n  },\n  {\n    description: 'Item two description',\n    icon: 'alert',\n    iconAriaLabel: 'Alert',\n    title: 'Item Two',\n  },\n  {\n    description: 'Item three description',\n    icon: 'alert',\n    iconAriaLabel: 'Alert',\n    title: 'Item Three',\n  },\n];\n\nconst meta: Meta<AccordionArgs> = {\n  title: 'Components/Accordion',\n  component: 'modus-wc-accordion',\n  decorators: [withActions],\n  parameters: {\n    actions: {\n      handles: ['expandedChange'],\n    },\n    layout: {\n      padded: true,\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<AccordionArgs>;\n\nconst Template: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<script>\n  const collapseOptions = [\n    {\n      description: 'Item one description',\n      icon: 'alert',\n      iconAriaLabel: 'Alert',\n      title: 'Item One',\n    },\n    {\n      description: 'Item two description',\n      icon: 'alert',\n      iconAriaLabel: 'Alert',\n      title: 'Item Two',\n    },\n    {\n      description: 'Item three description',\n      icon: 'alert',\n      iconAriaLabel: 'Alert',\n      title: 'Item Three',\n    },\n  ];\n</script>\n<div style=\"padding: 20px;\">\n  <modus-wc-accordion custom-class=${ifDefined(args['custom-class'])}>\n    <modus-wc-collapse .options=${collapseOptions[0]}>\n      <div slot=\"content\">Collapse content</div>\n    </modus-wc-collapse>\n    <modus-wc-collapse .options=${collapseOptions[1]}>\n      <div slot=\"content\">Collapse content</div>\n    </modus-wc-collapse>\n    <modus-wc-collapse .options=${collapseOptions[2]}>\n      <div slot=\"content\">Collapse content</div>\n    </modus-wc-collapse>\n  </modus-wc-accordion>\n</div>\n    `;\n  },\n};\n\nexport const Default: Story = { ...Template };\n\nexport const Migration: Story = {\n  parameters: {\n    docs: {\n      description: {\n        story: `\n#### Breaking Changes\n\n  - In 1.0 the accordion was composed of child accordion-item components. In 2.0 accordion children are collapse\n  components.\n  - The new accordion supports \\`header\\` and \\`content\\` slots to provide maximum flexibility.\n  - Size values have changed from (\\`condensed\\`, \\`standard\\`) in 1.0 accordion-item to abbreviations (\\`xs\\`, \\`sm\\`, \\`md\\`, \\`lg\\`) in 2.0 collapse.\n\n#### Prop Mapping\n\n##### accordion\n\n| 1.0 Prop           | 2.0 Prop           | Notes            |\n|--------------------|--------------------|------------------|\n| aria-label         | aria-label         |                  |\n\n##### accordion-item \u2192 collapse\n\n| 1.0 Prop           | 2.0 Prop            | Notes            |\n|--------------------|---------------------|------------------|\n| aria-label         | aria-label          |                  |\n| disabled           |                     | Not carried over |\n| expand-button-type |                     | Not carried over |\n| expanded           | expanded            |                  |\n| header-text        | options.title       |                  |\n| icon               | options.icon        |                  |\n| supporting-label   | options.description |                  |\n| size               | options.size        |                  |\n\n#### Event Mapping\n\n##### accordion-item \u2192 accordion\n\nThe new accordion and collapse have their own events. We recommend using the\naccordion events to migrate.\n\n| 1.0 Event | 2.0 Event      | Notes            |\n|-----------|----------------|------------------|\n| closed    | expandedChange |                  |\n| opened    | expandedChange |                  |\n        `,\n      },\n    },\n    // To hide the actual story rendering and only show docs:\n    controls: { disable: true },\n    canvas: { disable: true },\n  },\n  // Simple render function or leave it empty\n  render: () => html`<div></div>`,\n};\n",
  "storybook": {
    "examples": [
      "\n<script>\n  const collapseOptions = [\n    {\n      description: 'Item one description',\n      icon: 'alert',\n      iconAriaLabel: 'Alert',\n      title: 'Item One',\n    },\n    {\n      description: 'Item two description',\n      icon: 'alert',\n      iconAriaLabel: 'Alert',\n      title: 'Item Two',\n    },\n    {\n      description: 'Item three description',\n      icon: 'alert',\n      iconAriaLabel: 'Alert',\n      title: 'Item Three',\n    },\n  ];\n</script>\n<div style=\"padding: 20px;\">\n  <modus-wc-accordion custom-class=${ifDefined(args['custom-class'])}>\n    <modus-wc-collapse .options=${collapseOptions[0]}>\n      <div slot=\"content\">Collapse content</div>\n    </modus-wc-collapse>\n    <modus-wc-collapse .options=${collapseOptions[1]}>\n      <div slot=\"content\">Collapse content</div>\n    </modus-wc-collapse>\n    <modus-wc-collapse .options=${collapseOptions[2]}>\n      <div slot=\"content\">Collapse content</div>\n    </modus-wc-collapse>\n  </modus-wc-accordion>\n</div>\n    "
    ],
    "variants": [],
    "prop_usage": {
      "style": [
        "padding: 20px;"
      ],
      "slot": [
        "content"
      ]
    }
  },
  "tag_name": "modus-wc-accordion"
}