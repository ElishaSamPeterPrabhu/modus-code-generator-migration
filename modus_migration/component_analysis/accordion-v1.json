{
  "component_name": "modus-accordion",
  "version": "v1",
  "props": [
    {
      "name": "ariaLabel",
      "description": "/** (optional) The accordion's aria-label. */",
      "type": "string | null"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {},
  "documentation": "\n\n--- modus-accordion-storybook-docs.mdx ---\n\n# Accordion\n\n---\n\n[Modus Accordion](https://modus.trimble.com/components/web/accordions/) web components are wrappers around `<modus-accordion-item>` custom HTML elements. They are referenced using the `<modus-accordion>` custom HTML element.\n\nThe `<modus-accordion-item>` utilizes the slot element, allowing you to render your own HTML in the component.\n\n### Default\n\n<modus-accordion>\n  <modus-accordion-item header-text=\"Item 1\">Content</modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\">Content</modus-accordion-item>\n  <modus-accordion-item disabled header-text=\"Item 3\">\n    Content\n  </modus-accordion-item>\n</modus-accordion>\n\n### Condensed\n\n<modus-accordion>\n  <modus-accordion-item header-text=\"Item 1\" size=\"condensed\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\" size=\"condensed\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item disabled expanded header-text=\"Item 3\" size=\"condensed\">\n    Content\n  </modus-accordion-item>\n</modus-accordion>\n\n### With Icon\n\n<modus-accordion>\n  <modus-accordion-item header-text=\"Item 1\" icon=\"notifications\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\" icon=\"notifications\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item disabled header-text=\"Item 3\" icon=\"notifications\">\n    Content\n  </modus-accordion-item>\n</modus-accordion>\n\n### Circle Arrow\n\n<modus-accordion>\n  <modus-accordion-item header-text=\"Item 1\" size=\"condensed\" expand-button-type=\"circleArrow\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\" size=\"condensed\" expand-button-type=\"circleArrow\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item disabled expanded header-text=\"Item 3\" size=\"condensed\" expand-button-type=\"circleArrow\">\n    Content\n  </modus-accordion-item>\n</modus-accordion>\n\n```html\n<modus-accordion>\n  <modus-accordion-item header-text=\"Item 1\">Content</modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\">Content</modus-accordion-item>\n  <modus-accordion-item disabled header-text=\"Item 3\">Content</modus-accordion-item>\n</modus-accordion>\n\n<modus-accordion>\n  <modus-accordion-item header-text=\"Item 1\" size=\"condensed\">Content</modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\" size=\"condensed\">Content</modus-accordion-item>\n  <modus-accordion-item disabled expanded header-text=\"Item 3\" size=\"condensed\">Content</modus-accordion-item>\n</modus-accordion>\n\n<modus-accordion-item header-text=\"Item 1\" icon=\"notifications\">Content</modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\" icon=\"notifications\">Content</modus-accordion-item>\n  <modus-accordion-item disabled  header-text=\"Item 3\" icon=\"notifications\">\n    Content\n  </modus-accordion-item>\n</modus-accordion>\n\n<modus-accordion>\n  <modus-accordion-item header-text=\"Item 1\" size=\"condensed\" expand-button-type=\"circleArrow\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item header-text=\"Item 2\" size=\"condensed\" expand-button-type=\"circleArrow\">\n    Content\n  </modus-accordion-item>\n  <modus-accordion-item disabled expanded header-text=\"Item 3\" size=\"condensed\" expand-button-type=\"circleArrow\">\n    Content\n  </modus-accordion-item>\n</modus-accordion>\n```\n\n### Properties\n\n| Name                 | Description                                     | Type      | Options                        | Default Value   | Required |\n| -------------------- | ----------------------------------------------- | --------- | ------------------------------ | --------------- | -------- |\n| `aria-label`         | The accordion's aria-label                      | `string`  |                                |                 |          |\n| `disabled`           | Disables the accordion item                     | `boolean` |                                |                 |          |\n| `expand-button-type` | The type of expand button                       | `string`  | 'standardArrow' ,'circleArrow' | 'standardArrow' |          |\n| `expanded`           | The expanded state of the accordion item        | `boolean` |                                |                 |          |\n| `header-text`        | The text to render in the accordion item header | `string`  |                                |                 |          |\n| `icon`               | Takes the icon name and renders the icon        | `string`  |                                |                 |          |\n| `supporting-label`   | The supportingLabel of the accordion            | `string`  |                                |                 |          |\n| `size`               | The size of the accordion item                  | `string`  | 'condensed', 'standard'        | 'standard'      |          |\n\n### DOM Events\n\n| Name     | Description                      | Emits |\n| -------- | -------------------------------- | ----- |\n| `closed` | Fires on accordion item collapse |       |\n| `opened` | Fires on accordion item expand   |       |\n\n### Accessibility\n\n- Accordion gets an `aria-label` provided by the `aria-label` property input.\n- When an Accordion Item has focus, <kbd>Enter</kbd> toggles it, and emits the appropriate `closed` or `open` event.\n",
  "storybook_content": "\n\n--- modus-accordion.stories.tsx ---\n\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-accordion-storybook-docs.mdx';\nimport { html } from 'lit-html';\n\nexport default {\n  title: 'Components/Accordion',\n  argTypes: {\n    icon: {\n      name: 'icon',\n      description: 'The icon to display before the header text',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    expandButtonType: {\n      name: 'expandButtonType',\n      type: 'select',\n      defaultValue: 'standardArrow',\n      description: 'The type of expand button',\n      table: {\n        type: { summary: 'standardArrow | circleArrow' },\n        defaultValue: { summary: 'standardArrow' },\n      },\n      options: ['standardArrow', 'circleArrow'],\n    },\n    supportingLabel: {\n      name: 'supportingLabel',\n      type: 'string',\n      description: 'The supportingLabel of the accordion',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n  },\n  parameters: {\n    controls: {\n      expanded: true,\n      sort: 'alpha',\n    },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=1346-18&m=dev',\n    },\n  },\n};\n\nconst Template = ({ expandButtonType, icon, supportingLabel }) => html`\n  <modus-accordion>\n    <modus-accordion-item\n      header-text=\"Item 1\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}\n      >Content</modus-accordion-item\n    >\n    <modus-accordion-item\n      header-text=\"Item 2\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}\n      >Content</modus-accordion-item\n    >\n    <modus-accordion-item\n      disabled\n      header-text=\"Item 3\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}>\n      Content\n    </modus-accordion-item>\n  </modus-accordion>\n`;\n\nconst DefaultTemplateArgs = {\n  expandButtonType: 'standardArrow',\n  icon: '',\n  supportingLabel: 'Item Label',\n};\n\nconst WithIconTemplateArgs = {\n  expandButtonType: 'standardArrow',\n  icon: 'notifications',\n  supportingLabel: 'Item Label',\n};\n\nconst CircleArrowTemplateArgs = {\n  expandButtonType: 'circleArrow',\n  icon: '',\n  supportingLabel: 'Item Label',\n};\n\nexport const Default = Template.bind({});\nDefault.args = DefaultTemplateArgs;\n\nexport const WithIcon = Template.bind({});\nWithIcon.args = WithIconTemplateArgs;\n\nexport const CircleArrow = Template.bind({});\nCircleArrow.args = CircleArrowTemplateArgs;\n",
  "storybook": {
    "examples": [
      "<modus-accordion-item\n      header-text=\"Item 1\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}\n      >Content</modus-accordion-item\n    >",
      "<modus-accordion-item\n      header-text=\"Item 2\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}\n      >Content</modus-accordion-item\n    >",
      "<modus-accordion-item\n      disabled\n      header-text=\"Item 3\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}>\n      Content\n    </modus-accordion-item>",
      "\n  <modus-accordion>\n    <modus-accordion-item\n      header-text=\"Item 1\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}\n      >Content</modus-accordion-item\n    >\n    <modus-accordion-item\n      header-text=\"Item 2\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}\n      >Content</modus-accordion-item\n    >\n    <modus-accordion-item\n      disabled\n      header-text=\"Item 3\"\n      icon=${icon}\n      expand-button-type=${expandButtonType}\n      supporting-label=${supportingLabel}>\n      Content\n    </modus-accordion-item>\n  </modus-accordion>\n"
    ],
    "variants": [],
    "prop_usage": {
      "text": [
        "Item 1",
        "Item 2",
        "Item 3"
      ]
    }
  },
  "tag_name": "modus-accordion"
}