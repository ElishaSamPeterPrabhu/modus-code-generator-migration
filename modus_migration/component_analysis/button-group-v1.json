{
  "component_name": "modus-button-group",
  "version": "v1",
  "props": [],
  "events": [],
  "slots": [],
  "default_values": {},
  "documentation": "\n\n--- modus-button-group-storybook-docs.mdx ---\n\nimport { Anchor } from '@storybook/addon-docs';\n\n# Button Group\n\n[Modus Button Group](https://modus.trimble.com/components/web/button-groups/) web components provide a way to group buttons together. They are referenced using the `<modus-button-group>` custom HTML element.\nThis component utilizes the `modus-button` element, allowing you to render your own HTML in the button group.\n\n#### Implementation Details\n\nFor Text Buttons and Icon with Text Buttons,\n\n- Solid buttons supports all the given colors.\n- Outline buttons only support `primary` and `secondary` colors.\n- Borderless buttons only support `primary` color.\n\nFor Icon only Buttons,\n\n- Solid buttons supports all the given colors except `danger`.\n- Outline buttons only support `primary` and `secondary` colors.\n- Borderless buttons supports all the given colors except `danger`.\n\n<Anchor storyId=\"components-button-group--default\" />\n\n## Default\n\n<modus-button-group>\n  <modus-button>Button 1</modus-button>\n  <modus-button>Button 2</modus-button>\n  <modus-button>Button 3</modus-button>\n</modus-button-group>\n\n```html\n<modus-button-group>\n  <modus-button>Button 1</modus-button>\n  <modus-button>Button 2</modus-button>\n  <modus-button>Button 3</modus-button>\n</modus-button-group>\n```\n\n<Anchor storyId=\"components-button-group--single-selection\" />\n\n## Single Selection\n\n<modus-button-group selection-type=\"single\">\n  <modus-button selected>Button 1</modus-button>\n  <modus-button>Button 2</modus-button>\n  <modus-button>Button 3</modus-button>\n</modus-button-group>\n\n```html\n<modus-button-group selection-type=\"single\">\n  <modus-button selected>Button 1</modus-button>\n  <modus-button>Button 2</modus-button>\n  <modus-button>Button 3</modus-button>\n</modus-button-group>\n```\n\n<Anchor storyId=\"components-button-group--multiple-selection\" />\n\n## Multiple Selection\n\n<modus-button-group selection-type=\"multiple\">\n  <modus-button selected>Button 1</modus-button>\n  <modus-button selected>Button 2</modus-button>\n  <modus-button>Button 3</modus-button>\n</modus-button-group>\n\n```html\n<modus-button-group selection-type=\"multiple\">\n  <modus-button selected>Button 1</modus-button>\n  <modus-button selected>Button 2</modus-button>\n  <modus-button>Button 3</modus-button>\n</modus-button-group>\n```\n\n### Types\n\n```ts\ntype ButtonGroupSelectionType = 'single' | 'multiple' | 'none';\n\ninterface ModusButtonGroupButtonClickEvent {\n  button: HTMLModusButtonElement;\n  isSelected: boolean;\n}\n```\n\n### Properties\n\n| Property        | Attribute        | Description                                                      | Type                                             | Default     |\n| --------------- | ---------------- | ---------------------------------------------------------------- | ------------------------------------------------ | ----------- |\n| `ariaDisabled`  | `aria-disabled`  | (optional) The button groups's `aria-disabled` state             | `string`                                         | `undefined` |\n| `ariaLabel`     | `aria-label`     | (optional) The button groups's `aria-label`                      | `string`                                         | `undefined` |\n| `buttonStyle`   | `button-style`   | (optional) The style of the buttons in group                     | `\"borderless\" , \"fill\" , \"outline\"`              | `'outline'` |\n| `color`         | `color`          | (optional) The color of the buttons in group                     | `\"danger\" ,\"primary\" , \"secondary\" , \"tertiary\"` | `'primary'` |\n| `disabled`      | `disabled`       | (optional) If `true`, the button group is disabled               | `boolean`                                        | `false`     |\n| `selected`      | `selected`       | (optional) The default selected button in the group              | `HTMLModusButtonElement`                         | `undefined` |\n| `selectionType` | `selection-type` | (optional) The selection type (`none`, `single`, `multiple`)     | `ButtonGroupSelectionType`                       | `none`      |\n| `size`          | `size`           | (optional) The size of the buttons. (`small`, `medium`, `large`) | `ButtonSize`                                     | `medium`    |\n\n### DOM Events\n\n| Event             | Description                                                                                                                   | Type                                            |\n| ----------------- | ----------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------- |\n| `buttonClick`     | An event that fires on button click.                                                                                          | `CustomEvent<ModusButtonGroupButtonClickEvent>` |\n| `selectionChange` | An event that fires when selection type is `single` or `multiple` on button click that provides the list of selected buttons. | `CustomEvent<HTMLModusButtonElement[]>`         |\n\n### Accessibility\n\n- ButtonGroup gets an `aria-label` provided by the `aria-label` property input.\n- ButtonGroup gets an `aria-disabled` set to whether ButtonGroup is disabled.\n- ButtonGroup gets `role=\"group\"` set.\n",
  "storybook_content": "\n\n--- modus-button-group.stories.tsx ---\n\nimport { html } from 'lit-html';\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-button-group-storybook-docs.mdx';\n\nimport { withActions } from '@storybook/addon-actions/decorator';\nexport default {\n  title: 'Components/Button Group',\n  argTypes: {\n    ariaDisabled: {\n      name: 'aria-disabled',\n      description: \"The button group's aria-disabled state\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The button's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    buttonStyle: {\n      name: 'button-style',\n      options: ['borderless', 'fill', 'outline'],\n      type: 'select',\n      description: 'The style of the buttons in group, not all colors are supported for each button style',\n      table: {\n        defaultValue: { summary: `'outline'` },\n        type: { summary: `'borderless' | 'fill' | 'outline'` },\n      },\n    },\n    color: {\n      options: ['danger', 'primary', 'secondary', 'tertiary'],\n      type: 'select',\n      description: 'The color of the buttons in group, not all button styles are supported for each color',\n      table: {\n        defaultValue: { summary: `'primary'` },\n        type: { summary: `'danger' | 'primary' | 'secondary' | 'tertiary'` },\n      },\n    },\n    disabled: {\n      description: 'Whether the button is disabled',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    selectionType: {\n      name: 'selection-type',\n      description: 'The type of selection',\n      options: ['none', 'single', 'multiple'],\n      type: 'select',\n      table: {\n        defaultValue: { summary: `'none'` },\n        type: { summary: `'none' | 'single' | 'multiple'` },\n      },\n    },\n    size: {\n      name: 'size',\n      description: 'The size of the buttons',\n      options: ['small', 'medium', 'large'],\n      type: 'select',\n      table: {\n        defaultValue: { summary: `'medium'` },\n        type: { summary: `'small' | 'medium' | 'large'` },\n      },\n    },\n  },\n\n  parameters: {\n    controls: { expanded: true, sort: 'alpha' },\n    actions: {\n      handles: ['buttonGroupClick modus-button-group', 'buttonSelectionChange modus-button-group'],\n    },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=24902-8726&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\nconst DefaultTemplate = ({ ariaLabel, buttonStyle, color, disabled, selectionType, size }) => html`\n  <modus-button-group\n    aria-label=${ariaLabel}\n    button-style=${buttonStyle}\n    color=${color}\n    .disabled=${disabled}\n    selection-type=${selectionType}\n    size=${size}>\n    <modus-button>Button 1</modus-button>\n    <modus-button>Button 2</modus-button>\n    <modus-button>Button 3</modus-button>\n  </modus-button-group>\n`;\nconst SingleSelectionTemplate = ({ ariaLabel, buttonStyle, color, disabled, selectionType, size }) => html`\n  <modus-button-group\n    aria-label=${ariaLabel}\n    button-style=${buttonStyle}\n    color=${color}\n    .disabled=${disabled}\n    selection-type=${selectionType}\n    size=${size}>\n    <modus-button selected>Button 1</modus-button>\n    <modus-button>Button 2</modus-button>\n    <modus-button>Button 3</modus-button>\n  </modus-button-group>\n`;\nconst MultipleSelectionTemplate = ({ ariaLabel, buttonStyle, color, disabled, selectionType, size }) => html`\n  <modus-button-group\n    aria-label=${ariaLabel}\n    button-style=${buttonStyle}\n    color=${color}\n    .disabled=${disabled}\n    selection-type=${selectionType}\n    size=${size}>\n    <modus-button selected>Button 1</modus-button>\n    <modus-button selected>Button 2</modus-button>\n    <modus-button>Button 3</modus-button>\n  </modus-button-group>\n`;\nconst DefaultArgs = {\n  ariaDisabled: '',\n  ariaLabel: '',\n  disabled: false,\n  selectionType: 'none',\n  size: 'medium',\n  color: 'primary',\n  buttonStyle: 'outline',\n};\nexport const Default = DefaultTemplate.bind({});\nDefault.args = { ...DefaultArgs };\n\nexport const SingleSelection = SingleSelectionTemplate.bind({});\nSingleSelection.args = { ...DefaultArgs, selectionType: 'single' };\n\nexport const MultipleSelection = MultipleSelectionTemplate.bind({});\nMultipleSelection.args = { ...DefaultArgs, selectionType: 'multiple' };\n",
  "storybook": {
    "examples": [
      "<modus-button>Button 1</modus-button>",
      "<modus-button>Button 2</modus-button>",
      "<modus-button>Button 3</modus-button>",
      "<modus-button selected>Button 1</modus-button>",
      "<modus-button>Button 2</modus-button>"
    ],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-button-group"
}