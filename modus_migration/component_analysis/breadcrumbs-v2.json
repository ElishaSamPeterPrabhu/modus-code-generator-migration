{
  "component_name": "modus-wc-breadcrumbs",
  "version": "v2",
  "props": [
    {
      "name": "items",
      "description": "/** The text to render in the breadcrumb. */\n  label: string;\n  /** The URL emitted when the breadcrumb is clicked. */\n  url?: string;\n}\n\n/**\n * A customizable breadcrumbs component used to help users navigate through a website.\n */\n@Component({\n  tag: 'modus-wc-breadcrumbs',\n  styleUrl: 'modus-wc-breadcrumbs.scss',\n  shadow: false,\n})\nexport class ModusWcBreadcrumbs {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The breadcrumbs to render. */",
      "type": "IBreadcrumb[]"
    },
    {
      "name": "customClass",
      "description": "/** The text to render in the breadcrumb. */\n  label: string;\n  /** The URL emitted when the breadcrumb is clicked. */\n  url?: string;\n}\n\n/**\n * A customizable breadcrumbs component used to help users navigate through a website.\n */\n@Component({\n  tag: 'modus-wc-breadcrumbs',\n  styleUrl: 'modus-wc-breadcrumbs.scss',\n  shadow: false,\n})\nexport class ModusWcBreadcrumbs {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The breadcrumbs to render. */",
      "type": ": string"
    },
    {
      "name": "size",
      "description": "/** The text to render in the breadcrumb. */\n  label: string;\n  /** The URL emitted when the breadcrumb is clicked. */\n  url?: string;\n}\n\n/**\n * A customizable breadcrumbs component used to help users navigate through a website.\n */\n@Component({\n  tag: 'modus-wc-breadcrumbs',\n  styleUrl: 'modus-wc-breadcrumbs.scss',\n  shadow: false,\n})\nexport class ModusWcBreadcrumbs {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The breadcrumbs to render. */",
      "type": ": ModusSize"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "items": "[]",
    "customClass": "''",
    "size": "'md'"
  },
  "documentation": "\n\n--- modus-wc-breadcrumbs.stories.ts ---\n\nimport { withActions } from '@storybook/addon-actions/decorator';\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { IBreadcrumb } from './modus-wc-breadcrumbs';\nimport { DaisySize } from '../types';\n\nconst items: IBreadcrumb[] = [\n  {\n    label: 'Root',\n    url: '#',\n  },\n  {\n    label: 'Subpage',\n    url: '#',\n  },\n  {\n    label: 'Current Page',\n    url: '#',\n  },\n];\n\ninterface BreadcrumbArgs {\n  'custom-class'?: string;\n  items: IBreadcrumb[];\n  size?: DaisySize;\n}\n\nconst meta: Meta<BreadcrumbArgs> = {\n  title: 'Components/Breadcrumbs',\n  component: 'modus-wc-breadcrumbs',\n  args: {\n    items,\n    size: 'md',\n  },\n  argTypes: {\n    items: {\n      description: 'Array of items for the breadcrumbs component',\n      table: {\n        type: {\n          detail: `\n            Interface: IBreadcrumb\n            Properties:\n            - label (string): The text to render in the breadcrumb\n            - url (string, optional): The URL emitted when the breadcrumb is clicked\n          `,\n        },\n      },\n    },\n    size: {\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 'sm', 'md', 'lg'],\n    },\n  },\n  decorators: [withActions],\n  parameters: {\n    actions: {\n      handles: ['breadcrumbClick'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<BreadcrumbArgs>;\n\nconst Template: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-breadcrumbs\n  aria-label=\"Breadcrumbs\"\n  custom-class=${ifDefined(args['custom-class'])}\n  .items=${args.items}\n  size=${ifDefined(args.size)}\n></modus-wc-breadcrumbs>\n    `;\n  },\n};\n\nexport const Default: Story = { ...Template };\n\nexport const UnderlineLinks: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<style>\n  .underline-links a {\n    text-decoration: underline;\n  }\n</style>\n<modus-wc-breadcrumbs\n  custom-class=\"underline-links\"\n  .items=${args.items}\n  size=${ifDefined(args.size)}\n></modus-wc-breadcrumbs>\n    `;\n  },\n};\n\nexport const Migration: Story = {\n  parameters: {\n    docs: {\n      description: {\n        story: `\n#### Breaking Changes\n\n  - The structure of the breadcrumb \\`items\\` has changed from \\`Crumb\\` interface to \\`IBreadcrumb\\` interface.\n  - Underlined links are now applied using a custom class rather than a dedicated prop.\n\n#### Prop Mapping\n\n| 1.0 Prop        | 2.0 Prop      | Notes                                               |\n|-----------------|---------------|-----------------------------------------------------|\n| aria-label      | aria-label    |                                                     |\n| crumbs          | items         | Interface changed from \\`Crumb\\` to \\`IBreadcrumb\\` |\n| underline-links |               | Not carried over, use CSS instead                   |\n\n#### Event Mapping\n\n| 1.0 Event  | 2.0 Event       | Notes                                             |\n|------------|-----------------|---------------------------------------------------|\n| crumbClick | breadcrumbClick | Payload changed from \\`Crumb\\` to \\`IBreadcrumb\\` |\n\n#### Interfaces\n\n##### 1.0:\n\\`\\`\\`typescript\ninterface Crumb {\n  display: string;\n  id: string;\n}\n\\`\\`\\`\n\n##### 2.0:\n\\`\\`\\`typescript\ninterface IBreadcrumb {\n  label: string;\n  url?: string;\n}\n\\`\\`\\`\n        `,\n      },\n    },\n    // To hide the actual story rendering and only show docs:\n    controls: { disable: true },\n    canvas: { disable: true },\n  },\n  // Simple render function or leave it empty\n  render: () => html`<div></div>`,\n};\n",
  "storybook": {
    "examples": [
      "<modus-wc-breadcrumbs\n  aria-label=\"Breadcrumbs\"\n  custom-class=${ifDefined(args['custom-class'])}\n  .items=${args.items}\n  size=${ifDefined(args.size)}\n></modus-wc-breadcrumbs>",
      "<modus-wc-breadcrumbs\n  custom-class=\"underline-links\"\n  .items=${args.items}\n  size=${ifDefined(args.size)}\n></modus-wc-breadcrumbs>",
      "\n<modus-wc-breadcrumbs\n  aria-label=\"Breadcrumbs\"\n  custom-class=${ifDefined(args['custom-class'])}\n  .items=${args.items}\n  size=${ifDefined(args.size)}\n></modus-wc-breadcrumbs>\n    ",
      "\n<style>\n  .underline-links a {\n    text-decoration: underline;\n  }\n</style>\n<modus-wc-breadcrumbs\n  custom-class=\"underline-links\"\n  .items=${args.items}\n  size=${ifDefined(args.size)}\n></modus-wc-breadcrumbs>\n    "
    ],
    "variants": [],
    "prop_usage": {
      "label": [
        "Breadcrumbs"
      ],
      "class": [
        "underline-links"
      ]
    }
  },
  "tag_name": "modus-wc-breadcrumbs"
}