{
  "component_name": "modus-list-item",
  "version": "v1",
  "props": [
    {
      "name": "borderless",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "boolean"
    },
    {
      "name": "disabled",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "boolean"
    },
    {
      "name": "selected",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "boolean"
    },
    {
      "name": "leftIcon",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "string"
    },
    {
      "name": "size",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "'condensed' | 'large' | 'standard'"
    },
    {
      "name": "subText",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "string"
    },
    {
      "name": "wrapSubText",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "true | false"
    },
    {
      "name": "type",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": ""
    },
    {
      "name": "iconColor",
      "description": "/** (optional) Whether the list item has a border or not */",
      "type": "string"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "disabled": "{() => (!this.disabled ? this.itemClick.emit() : null)}\n        onKeyDown={(e) => this.handleKeydown(e)}>\n        {this.leftIcon && (\n          <span class=\"icon left-icon\">\n            <ModusIcon icon={this.leftIcon} size=\"24\" color={this.iconColor}></ModusIcon>\n          </span>\n        )}\n        <div class=\"text-container\">\n          <span class=\"slot\">\n            <slot />\n          </span>\n          {this.subText && <span class={'sub-text ' + (this.wrapSubText ? 'wrap' : 'no-wrap')}>{this.subText}</span>}\n        </div>\n        {this.selected && <IconCheck size={iconCheckSize} />}\n      </li>\n    )",
    "size": "'standard'",
    "wrapSubText": "true",
    "type": "'standard'"
  },
  "documentation": "",
  "storybook_content": "",
  "storybook": {
    "examples": [],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-list-item"
}