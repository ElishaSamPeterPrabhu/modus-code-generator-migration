{
  "component_name": "modus-wc-input-label",
  "version": "v2",
  "props": [
    {
      "name": "forId",
      "description": "/**\n * A customizable input label component.\n *\n * The component supports a `<slot>` for injecting additional custom content inside the label, such as icons or formatted text\n */\n@Component({\n  tag: 'modus-wc-input-label',\n  styleUrl: 'modus-wc-input-label.scss',\n  shadow: false,\n})\nexport class ModusWcInputLabel {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The `for` attribute of the label, matching the `id` of the associated input. */",
      "type": ": string"
    },
    {
      "name": "customClass",
      "description": "/**\n * A customizable input label component.\n *\n * The component supports a `<slot>` for injecting additional custom content inside the label, such as icons or formatted text\n */\n@Component({\n  tag: 'modus-wc-input-label',\n  styleUrl: 'modus-wc-input-label.scss',\n  shadow: false,\n})\nexport class ModusWcInputLabel {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The `for` attribute of the label, matching the `id` of the associated input. */",
      "type": ": string"
    },
    {
      "name": "labelText",
      "description": "/**\n * A customizable input label component.\n *\n * The component supports a `<slot>` for injecting additional custom content inside the label, such as icons or formatted text\n */\n@Component({\n  tag: 'modus-wc-input-label',\n  styleUrl: 'modus-wc-input-label.scss',\n  shadow: false,\n})\nexport class ModusWcInputLabel {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The `for` attribute of the label, matching the `id` of the associated input. */",
      "type": ": string"
    },
    {
      "name": "required",
      "description": "/**\n * A customizable input label component.\n *\n * The component supports a `<slot>` for injecting additional custom content inside the label, such as icons or formatted text\n */\n@Component({\n  tag: 'modus-wc-input-label',\n  styleUrl: 'modus-wc-input-label.scss',\n  shadow: false,\n})\nexport class ModusWcInputLabel {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The `for` attribute of the label, matching the `id` of the associated input. */",
      "type": ": boolean"
    },
    {
      "name": "size",
      "description": "/**\n * A customizable input label component.\n *\n * The component supports a `<slot>` for injecting additional custom content inside the label, such as icons or formatted text\n */\n@Component({\n  tag: 'modus-wc-input-label',\n  styleUrl: 'modus-wc-input-label.scss',\n  shadow: false,\n})\nexport class ModusWcInputLabel {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The `for` attribute of the label, matching the `id` of the associated input. */",
      "type": ": ModusSize"
    },
    {
      "name": "subLabelText",
      "description": "/**\n * A customizable input label component.\n *\n * The component supports a `<slot>` for injecting additional custom content inside the label, such as icons or formatted text\n */\n@Component({\n  tag: 'modus-wc-input-label',\n  styleUrl: 'modus-wc-input-label.scss',\n  shadow: false,\n})\nexport class ModusWcInputLabel {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  /** The `for` attribute of the label, matching the `id` of the associated input. */",
      "type": ": string"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "customClass": "''",
    "required": "false",
    "size": "'md'"
  },
  "documentation": "\n\n--- modus-wc-input-label.stories.ts ---\n\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { ModusSize } from '../types';\n\ninterface InputLabelArgs {\n  'for-id'?: string;\n  'custom-class'?: string;\n  'label-text'?: string;\n  required?: boolean;\n  size?: ModusSize;\n  'sub-label-text'?: string;\n}\n\nconst meta: Meta<InputLabelArgs> = {\n  title: 'Components/Forms/Input Label',\n  component: 'modus-wc-input-label',\n  args: {\n    'label-text': 'Label',\n    required: false,\n    size: 'md',\n  },\n  argTypes: {\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<InputLabelArgs>;\n\nconst Template: Story = {\n  render: (args) => html`\n    <modus-wc-input-label\n      for-id=${ifDefined(args['for-id'])}\n      custom-class=${ifDefined(args['custom-class'])}\n      label-text=${ifDefined(args['label-text'])}\n      ?required=${args['required']}\n      size=${args.size}\n      sub-label-text=${ifDefined(args['sub-label-text'])}\n    ></modus-wc-input-label>\n  `,\n};\n\nexport const Default: Story = { ...Template };\n\nexport const Required: Story = { ...Template, args: { required: true } };\n",
  "storybook": {
    "examples": [
      "<modus-wc-input-label\n      for-id=${ifDefined(args['for-id'])}\n      custom-class=${ifDefined(args['custom-class'])}\n      label-text=${ifDefined(args['label-text'])}\n      ?required=${args['required']}\n      size=${args.size}\n      sub-label-text=${ifDefined(args['sub-label-text'])}\n    ></modus-wc-input-label>",
      "\n    <modus-wc-input-label\n      for-id=${ifDefined(args['for-id'])}\n      custom-class=${ifDefined(args['custom-class'])}\n      label-text=${ifDefined(args['label-text'])}\n      ?required=${args['required']}\n      size=${args.size}\n      sub-label-text=${ifDefined(args['sub-label-text'])}\n    ></modus-wc-input-label>\n  "
    ],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-wc-input-label"
}