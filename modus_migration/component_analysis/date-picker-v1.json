{
  "component_name": "modus-date-picker",
  "version": "v1",
  "props": [
    {
      "name": "label",
      "description": "/** (optional) Label for the field. */",
      "type": "string"
    },
    {
      "name": "position",
      "description": "/** (optional) Label for the field. */",
      "type": "Placement | 'auto' | 'auto-start' | 'auto-end'"
    },
    {
      "name": "isDateEnabled",
      "description": "/** (optional) Label for the field. */",
      "type": "(dateIsoString: string)"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "label": "\"Previous Month\" onClick={() => this.addMonthOffset(-1)}>\n          <ModusIconMap icon=\"chevron_left_bold\"></ModusIconMap>\n        </button>\n\n        <div class=\"title\">\n          <div class=\"calendar-title\" role=\"heading\">{`${this._calendar?.month} ${this._calendar?.year}`}</div>\n          <div class=\"year-icons\">\n            <button type=\"button\" tabIndex={0} aria-label=\"Next Year\" onClick={() => this.addYearOffset(1)} class=\"year-up\">\n              <ModusIconMap icon=\"caret_up\" size=\"16\"></ModusIconMap>\n            </button>\n            <button\n              type=\"button\"\n              tabIndex={0}\n              aria-label=\"Previous Year\"\n              onClick={() => this.addYearOffset(-1)}\n              class=\"year-down\">\n              <ModusIconMap size=\"16\" icon=\"caret_down\"></ModusIconMap>\n            </button>\n          </div>\n        </div>\n        <button type=\"button\" tabIndex={0} aria-label=\"Next Month\" onClick={() => this.addMonthOffset(1)}>\n          <ModusIconMap icon=\"chevron_right_bold\"></ModusIconMap>\n        </button>\n      </div>\n    )",
    "position": "'bottom-start'",
    "isDateEnabled": "> boolean | undefined"
  },
  "documentation": "\n\n--- modus-date-picker-storybook-docs.mdx ---\n\nimport { Story } from '@storybook/blocks';\nimport * as DatePicker from './modus-date-picker.stories.tsx';\n\n# Date Input\n\n---\n\nModus Date Input web component is a wrapper around native `<input type=\"text\">` element used to type the date. It is referenced using the `<modus-date-input>` custom HTML element.\n\nThis component can be wrapped by a [Modus Date Picker](https://modus.trimble.com/components/web/date-time-picker) which is referenced by `<modus-date-picker>` to pick a date or a date range from the calendar view.\n\n#### Implementation details\n\n- Modus Date Input accepts input in any format following the formatting rules.\n- To use a calendar view for the date selection, Modus Date Input components must be wrapped by a `<modus-date-picker>` and the `type` must be specified. The prop `type` represents whether the date field is a start/end date or simple date (default).\n- A calendar icon appears automatically when a Modus Date Input is wrapped by `<modus-date-picker>` and clicking on the icon opens the calendar view with the current date highlighted.\n- The header of the calendar view displays up and down arrows allowing for navigation to another year. Left and right arrows change the month.\n\n#### Validation\n\nModus Date Input has a default validation which is triggered on a blur event and it can validate for invalid date inputs and invalid date range incase start and end dates are used inside `<modus-date-picker>`.\n\nDefault validation can also be disabled and use the props `errorText`, `invalid` to control the error state.\n\n### Default\n\n<Story of={DatePicker.Default} />\n\n```html\n<modus-date-input\n  helper-text=\"mmm dd, yyyy\"\n  label=\"Single date\"\n  allowed-chars-regex=\"[\\d\\/]\"\n  format=\"mmm dd, yyyy\"\n  value=\"2022-12-22\"></modus-date-input>\n```\n\n### Custom date format\n\nA custom date format can be set using the prop `format` as shown in the example. The displayed date format will differ from the actual `value` because the `value` is always parsed to ISO8601 'yyyy-mm-dd'.\n\nIf you want to support a few alternative date formats then you can set the prop `alt-formats` with a few formats separated by a `|` symbol separator. If you input a valid date for any of the alternative formats then it will be accepted by the component and converted to the main format specified in the `format` prop.\n\n<modus-date-input label=\"Formatted date\"\n  helper-text=\"yyyy-mm\"\n  format=\"yyyy-mm\"\n  alt-formats=\"yyyy mmm|yy.mm\"\n  value=\"2022-12-22\"></modus-date-input>\n\n```html\n<modus-date-input\n  label=\"Formatted date\"\n  helper-text=\"yyyy-mm\"\n  allowed-chars-regex=\"[\\d-]\"\n  format=\"yyyy-mm\"\n  alt-formats=\"yyyy mmm|yy.mm\"\n  value=\"2022-12-22\"></modus-date-input>\n```\n\n### Date Range with picker\n\n<Story of={DatePicker.DateRange} />\n\n```html\n<modus-date-picker label=\"Select date range\">\n  <modus-date-input\n    type=\"start\"\n    label=\"Start\"\n    format=\"dd-mm-yyyy\"\n    helper-text=\"dd-mm-yyyy\"\n    allowed-chars-regex=\"[\\d-]\"\n    show-calendar-icon=\"true\"\n    value=\"2022-12-22\"></modus-date-input>\n\n  <modus-date-input\n    type=\"end\"\n    label=\"End\"\n    format=\"dd-mm-yyyy\"\n    helper-text=\"dd-mm-yyyy\"\n    allowed-chars-regex=\"[\\d-]\"\n    show-calendar-icon=\"true\"\n    value=\"2022-12-22\"></modus-date-input>\n</modus-date-picker>\n```\n\n### Formatting Rules\n\nEach character as shown in the table below can be used for representing the date format and any character can be used as a separator except for those in regular expressions.\n\n| Character | Description                     | Example     |\n| --------- | ------------------------------- | ----------- |\n| `d`       | Date without a leading zero     | 1 - 31      |\n| `dd`      | Date with a leading zero        | 01 - 31     |\n| `m`       | Month without a leading zero    | 1 - 12      |\n| `mm`      | Month with a leading zero       | 01 - 12     |\n| `mmm`     | Three letter month abbreviation | Feb         |\n| `mmmm`    | Full month name                 | February    |\n| `yy`      | Year in two digits              | 00 - 99     |\n| `yyyy`    | Full Year with four digits      | 0000 - 9999 |\n\n### Properties\n\n##### Modus Date Input\n\n| Property            | Attribute            | Description                                                                                                                                                                                                         | Type                           | Default        |\n| ------------------- | -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | -------------- |\n| `allowedCharsRegex` | --                   | (optional) Regular expression to allow characters while typing the input.                                                                                                                                           | `RegExp \\| string`             | `undefined`    |\n| `ariaLabel`         | `aria-label`         | (optional) The input's aria-label.                                                                                                                                                                                  | `string`                       | `undefined`    |\n| `autoFocusInput`    | `auto-focus-input`   | (optional) Sets autofocus on the input.                                                                                                                                                                             | `boolean`                      | `undefined`    |\n| `disableValidation` | `disable-validation` | (optional) Disables default validation for the date input.                                                                                                                                                          | `boolean`                      | `undefined`    |\n| `disabled`          | `disabled`           | (optional) Whether the input is disabled.                                                                                                                                                                           | `boolean`                      | `undefined`    |\n| `errorText`         | `error-text`         | (optional) Custom error text displayed for the input.                                                                                                                                                               | `string`                       | `undefined`    |\n| `fillerDate`        | `filler-date`        | (optional) Filler date is used as fillers for parts not in the display format when constructing a full date string, for 'value'. It must be in the ISO String format YYYY-MM-DD. Default is `{current year}-01-01`. | `string`                       | `undefined`    |\n| `format`            | `format`             | Format string for the date input. Default 'mm/dd/yyyy'. Use 'm','mm' for month, 'd','dd' for date and 'yy','yyyy' for year with any separator that is not a regular expression.                                     | `string`                       | `'mm/dd/yyyy'` |\n| `helperText`        | `helper-text`        | (optional) Custom helper text displayed below the input.                                                                                                                                                            | `any`                          | `undefined`    |\n| `label`             | `label`              | (optional) The input's label.                                                                                                                                                                                       | `string`                       | `undefined`    |\n| `max`               | `max`                | (optional) The maximum date allowed. The date is formatted according to ISO8601 'yyyy-mm-dd'.                                                                                                                       | `string`                       | `undefined`    |\n| `min`               | `min`                | (optional) The minimum date allowed. The date is formatted according to ISO8601 'yyyy-mm-dd'.                                                                                                                       | `string`                       | `undefined`    |\n| `placeholder`       | `placeholder`        | (optional) The input's placeholder text.                                                                                                                                                                            | `string`                       | `undefined`    |\n| `readOnly`          | `read-only`          | (optional) Whether the input's content is read-only                                                                                                                                                                 | `boolean`                      | `undefined`    |\n| `required`          | `required`           | (optional) Whether the input is required.                                                                                                                                                                           | `boolean`                      | `undefined`    |\n| `showCalendarIcon`  | `show-calendar-icon` | (optional) Show a calendar icon. Note: Clicking on this icon will only emit an event `calendarIconClicked`.                                                                                                         | `boolean`                      | `undefined`    |\n| `size`              | `size`               | (optional) The input's size.                                                                                                                                                                                        | `\"large\" \\| \"medium\"`          | `'medium'`     |\n| `type`              | `type`               | (optional) Denotes what type of date and the types are 'start','end','single'. Required when using `modus-date-picker`.                                                                                             | `\"end\" \\| \"single\" \\| \"start\"` | `'single'`     |\n| `validText`         | `valid-text`         | (optional) The input's valid state text.                                                                                                                                                                            | `string`                       | `undefined`    |\n| `value`             | `value`              | (optional) A string representing the date entered in the input. The date is formatted according to ISO8601 'yyyy-mm-dd'. The displayed date format will differ from the 'value'.                                    | `string`                       | `undefined`    |\n\n##### Modus Date Picker\n\n| Property   | Attribute  | Description                                    | Type                                                                                                                                                                                                        | Default        |\n| ---------- | ---------- | ---------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- |\n| `label`    | `label`    | (optional) Label for the field.                | `string`                                                                                                                                                                                                    | `undefined`    |\n| `position` | `position` | (optional) The position of the calendar popup. | `\"auto\" \\| \"auto-start\" \\| \"auto-end\" \\| \"top-start\" \\| \"top-end\" \\| \"bottom-start\" \\| \"bottom-end\" \\| \"right-start\" \\| \"right-end\" \\| \"left-start\" \\| \"left-end\" \\| \"top\" \\| \"left\" \\| \"bottom\" \\| \"right\" | `bottom-start` |\n\n### DOM Events\n\n| Event                 | Description                                      | Type                                      |\n| --------------------- | ------------------------------------------------ | ----------------------------------------- |\n| `calendarIconClicked` | An event that fires on calendar icon click.      | `CustomEvent<ModusDateInputEventDetails>` |\n| `dateInputBlur`       | An event that fires on input value out of focus. | `CustomEvent<ModusDateInputEventDetails>` |\n| `valueChange`         | An event that fires on input value change.       | `CustomEvent<ModusDateInputEventDetails>` |\n\n### Methods\n\n##### Modus Date Input\n\n| Method name  | Description        | Parameter | Return          |\n| ------------ | ------------------ | --------- | --------------- |\n| `focusInput` | Focus the input    |           | `Promise<void>` |\n| `validate`   | Validate the input |           | `Promise<void>` |\n\n### Accessibility\n\n- Every element in Modus Date Input is accessible through keyboard. Use <kbd>Tab</kbd> key and `Shift + Tab` key to interact with the Date Input field and the calendar view.\n- Date Input gets an `aria-label` provided by the `aria-label` property input.\n- It is recommended to pass `aria-label` when there is no label used so the input is accessible to screen readers.\n- Date Input gets an `aria-disabled` provided by the `disabled` property input.\n- Date Input gets an `aria-placeholder` provided by the `placeholder` property input.\n- Date Input gets an `aria-invalid` from `invalid` property input.\n- Date Input gets an `aria-readonly` from `readonly` property input.\n- Date Input gets an `aria-required` from `required` property input.\n",
  "storybook_content": "\n\n--- modus-date-picker.stories.tsx ---\n\nimport { html } from 'lit-html';\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-date-picker-storybook-docs.mdx';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\nexport default {\n  title: 'User Inputs/Date Picker',\n  argTypes: {\n    allowedCharsRegex: {\n      name: 'allowed-chars-regex',\n      description: 'Regular expression to allow characters while typing the input.',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    altFormats: {\n      name: 'alt-formats',\n      description: 'Alternative formats string for the date input split by | separator.',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The input's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    autoFocusInput: {\n      name: 'auto-focus-input',\n      description: 'Sets autofocus for the input',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    position: {\n      name: 'position',\n      options: [\n        'auto',\n        'auto-start',\n        'auto-end',\n        'top-start',\n        'top-end',\n        'bottom-start',\n        'bottom-end',\n        'right-start',\n        'right-end',\n        'left-start',\n        'left-end',\n        'top',\n        'left',\n        'bottom',\n        'right',\n      ],\n      type: 'select',\n      description: 'The placement of the calendar popup',\n      table: {\n        defaultValue: { summary: 'bottom-start' },\n        type: {\n          summary:\n            \"'auto' | 'auto-start' | 'auto-end' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'right-start' | 'right-end' | 'left-start' | 'left-end' | 'top' | 'left' | 'bottom' | 'right'\",\n        },\n      },\n    },\n    disabled: {\n      description: 'Whether the date input is disabled',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    disableValidation: {\n      name: 'disable-validation',\n      description: 'Disables default validation for the date input',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    errorText: {\n      name: 'error-text',\n      description: \"The input's error text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    format: {\n      name: 'format',\n      description: \"Format string for the date input. Default 'mm/dd/yyyy'\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    helperText: {\n      name: 'helper-text',\n      description: \"The input's helper text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    label: {\n      description: \"The input's label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    max: {\n      description: \"The maximum date allowed. The input string should be ISO8601 'yyyy-mm-dd'.\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    min: {\n      description: \"The minimum date allowed. The input string should be ISO8601 'yyyy-mm-dd'.\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    placeholder: {\n      description: \"The input's placeholder text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    readOnly: {\n      name: 'read-only',\n      description: 'Whether the input is read-only',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    required: {\n      description: 'Whether the input is required',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    showCalendarIcon: {\n      name: 'show-calendar-icon',\n      description: 'Show a calendar icon.',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n    size: {\n      options: ['medium', 'large'],\n      type: 'select',\n      description: 'The size of the input',\n      table: {\n        defaultValue: { summary: \"'medium'\" },\n        type: { summary: \"'medium' | 'large'\" },\n      },\n    },\n    validText: {\n      name: 'valid-text',\n      description: \"The input's valid text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    value: {\n      description: \"A string representing the date entered in the input. The input string should be ISO8601 'yyyy-mm-dd'.\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n  },\n  parameters: {\n    actions: {\n      handles: ['valueChange', 'dateInputBlur', 'calendarIconClicked'],\n    },\n    controls: { expanded: true, sort: 'requiredFirst' },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=1346-5&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\n\nconst defaultArgs = {\n  ariaLabel: '',\n  allowedCharsRegex: '[\\\\d\\\\/]',\n  altFormats: '',\n  autoFocusInput: true,\n  disableValidation: false,\n  disabled: false,\n  errorText: '',\n  format: 'mm/dd/yyyy',\n  helperText: 'mm/dd/yyyy',\n  label: 'Date',\n  min: '',\n  max: '',\n  placeholder: '',\n  readOnly: false,\n  required: false,\n  showCalendarIcon: false,\n  size: 'medium',\n  validText: '',\n  value: '2022-12-22',\n};\n\nconst DefaultTemplate = ({\n  ariaLabel,\n  allowedCharsRegex,\n  altFormats,\n  autoFocusInput,\n  disableValidation,\n  disabled,\n  errorText,\n  format,\n  helperText,\n  label,\n  min,\n  max,\n  placeholder,\n  readOnly,\n  required,\n  showCalendarIcon,\n  size,\n  validText,\n  value,\n}) => html`\n  <modus-date-input\n    allowed-chars-regex=${allowedCharsRegex}\n    alt-formats=${altFormats}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    format=${format}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    show-calendar-icon=${showCalendarIcon}\n    valid-text=${validText}\n    value=${value}></modus-date-input>\n`;\n\nexport const Default = DefaultTemplate.bind({});\nDefault.args = {\n  ...defaultArgs,\n  format: 'mmm dd, yyyy',\n  allowedCharsRegex: '.',\n  helperText: 'mmm dd, yyyy',\n  ...{ label: 'Single Date' },\n};\n\nconst DateRangeTemplate = ({\n  ariaLabel,\n  allowedCharsRegex,\n  altFormats,\n  autoFocusInput,\n  disableValidation,\n  disabled,\n  errorText,\n  format,\n  min,\n  position,\n  max,\n  helperText,\n  placeholder,\n  readOnly,\n  required,\n  showCalendarIcon,\n  size,\n  validText,\n  value,\n}) => html`\n  <modus-date-picker label=\"Select date range\" position=${position}>\n    <modus-date-input\n      allowed-chars-regex=${allowedCharsRegex}\n      alt-formats=${altFormats}\n      aria-label=${ariaLabel}\n      auto-focus-input=${autoFocusInput}\n      disable-validation=${disableValidation}\n      ?disabled=${disabled}\n      error-text=${errorText}\n      format=${format}\n      min=${min}\n      max=${max}\n      helper-text=${helperText}\n      type=\"start\"\n      label=\"Start\"\n      placeholder=${placeholder}\n      read-only=${readOnly}\n      ?required=${required}\n      size=${size}\n      show-calendar-icon=${showCalendarIcon}\n      valid-text=${validText}\n      value=${value}></modus-date-input>\n\n    <modus-date-input\n      allowed-chars-regex=${allowedCharsRegex}\n      alt-formats=${altFormats}\n      aria-label=${ariaLabel}\n      auto-focus-input=${autoFocusInput}\n      disable-validation=${disableValidation}\n      ?disabled=${disabled}\n      error-text=${errorText}\n      format=${format}\n      min=${min}\n      max=${max}\n      helper-text=${helperText}\n      type=\"end\"\n      label=\"End\"\n      placeholder=${placeholder}\n      read-only=${readOnly}\n      ?required=${required}\n      size=${size}\n      show-calendar-icon=${showCalendarIcon}\n      valid-text=${validText}\n      value=${value}></modus-date-input>\n  </modus-date-picker>\n`;\nexport const DateRange = DateRangeTemplate.bind({});\nDateRange.args = {\n  ...defaultArgs,\n  ...{\n    showCalendarIcon: true,\n    format: 'dd-mm-yyyy',\n    helperText: 'dd-mm-yyyy',\n    allowedCharsRegex: '[\\\\d-]',\n  },\n};\n\nconst DefaultWithPickerTemplate = ({\n  ariaLabel,\n  allowedCharsRegex,\n  altFormats,\n  autoFocusInput,\n  position,\n  disableValidation,\n  disabled,\n  errorText,\n  format,\n  helperText,\n  label,\n  min,\n  max,\n  placeholder,\n  readOnly,\n  required,\n  showCalendarIcon,\n  size,\n  validText,\n  value,\n  isDateEnabled,\n}) => {\n  setTimeout(() => {\n    isDateEnabledLoading = false;\n  }, 4000);\n  return html`\n    <modus-date-picker .isDateEnabled=${isDateEnabled} position=${position}>\n      <modus-date-input\n        allowed-chars-regex=${allowedCharsRegex}\n        aria-label=${ariaLabel}\n        alt-formats=${altFormats}\n        auto-focus-input=${autoFocusInput}\n        disable-validation=${disableValidation}\n        ?disabled=${disabled}\n        error-text=${errorText}\n        format=${format}\n        helper-text=${helperText}\n        label=${label}\n        min=${min}\n        max=${max}\n        placeholder=${placeholder}\n        read-only=${readOnly}\n        ?required=${required}\n        size=${size}\n        show-calendar-icon=${showCalendarIcon}\n        valid-text=${validText}\n        value=${value}></modus-date-input>\n    </modus-date-picker>\n  `;\n};\n\nexport const DefaultWithPicker = DefaultWithPickerTemplate.bind({});\n// Uncomment and pass in as isDateEnabled below to test isDateEnabled functionality\n// const isWeekend = (isoString: string) => {\n//   const date = new Date(isoString);\n//   const isWeekend  = date.getDay() === 0 || date.getDay() === 6;\n//   return isWeekend;\n// }\n\nDefaultWithPicker.args = {\n  ...defaultArgs,\n  position: 'bottom-start',\n  showCalendarIcon: true,\n  min: '2022-12-02',\n  max: '2022-12-30',\n  format: 'mmm dd, yyyy',\n  allowedCharsRegex: '.',\n  helperText: 'mmm dd, yyyy',\n  label: 'Single Date',\n};\n",
  "storybook": {
    "examples": [
      "<modus-date-input\n    allowed-chars-regex=${allowedCharsRegex}\n    alt-formats=${altFormats}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    format=${format}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    show-calendar-icon=${showCalendarIcon}\n    valid-text=${validText}\n    value=${value}></modus-date-input>",
      "<modus-date-input\n      allowed-chars-regex=${allowedCharsRegex}\n      alt-formats=${altFormats}\n      aria-label=${ariaLabel}\n      auto-focus-input=${autoFocusInput}\n      disable-validation=${disableValidation}\n      ?disabled=${disabled}\n      error-text=${errorText}\n      format=${format}\n      min=${min}\n      max=${max}\n      helper-text=${helperText}\n      type=\"start\"\n      label=\"Start\"\n      placeholder=${placeholder}\n      read-only=${readOnly}\n      ?required=${required}\n      size=${size}\n      show-calendar-icon=${showCalendarIcon}\n      valid-text=${validText}\n      value=${value}></modus-date-input>",
      "<modus-date-input\n      allowed-chars-regex=${allowedCharsRegex}\n      alt-formats=${altFormats}\n      aria-label=${ariaLabel}\n      auto-focus-input=${autoFocusInput}\n      disable-validation=${disableValidation}\n      ?disabled=${disabled}\n      error-text=${errorText}\n      format=${format}\n      min=${min}\n      max=${max}\n      helper-text=${helperText}\n      type=\"end\"\n      label=\"End\"\n      placeholder=${placeholder}\n      read-only=${readOnly}\n      ?required=${required}\n      size=${size}\n      show-calendar-icon=${showCalendarIcon}\n      valid-text=${validText}\n      value=${value}></modus-date-input>",
      "<modus-date-input\n        allowed-chars-regex=${allowedCharsRegex}\n        aria-label=${ariaLabel}\n        alt-formats=${altFormats}\n        auto-focus-input=${autoFocusInput}\n        disable-validation=${disableValidation}\n        ?disabled=${disabled}\n        error-text=${errorText}\n        format=${format}\n        helper-text=${helperText}\n        label=${label}\n        min=${min}\n        max=${max}\n        placeholder=${placeholder}\n        read-only=${readOnly}\n        ?required=${required}\n        size=${size}\n        show-calendar-icon=${showCalendarIcon}\n        valid-text=${validText}\n        value=${value}></modus-date-input>",
      "\n  <modus-date-input\n    allowed-chars-regex=${allowedCharsRegex}\n    alt-formats=${altFormats}\n    aria-label=${ariaLabel}\n    auto-focus-input=${autoFocusInput}\n    disable-validation=${disableValidation}\n    ?disabled=${disabled}\n    error-text=${errorText}\n    format=${format}\n    helper-text=${helperText}\n    label=${label}\n    min=${min}\n    max=${max}\n    placeholder=${placeholder}\n    read-only=${readOnly}\n    ?required=${required}\n    size=${size}\n    show-calendar-icon=${showCalendarIcon}\n    valid-text=${validText}\n    value=${value}></modus-date-input>\n"
    ],
    "variants": [],
    "prop_usage": {
      "label": [
        "Select date range",
        "Start",
        "End"
      ],
      "type": [
        "start",
        "end"
      ]
    }
  },
  "tag_name": "modus-date-picker"
}