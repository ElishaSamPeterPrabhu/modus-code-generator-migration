{
  "component_name": "modus-wc-chip",
  "version": "v2",
  "props": [
    {
      "name": "active",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": boolean"
    },
    {
      "name": "customClass",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": string"
    },
    {
      "name": "disabled",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": boolean"
    },
    {
      "name": "hasError",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": boolean"
    },
    {
      "name": "label",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": string"
    },
    {
      "name": "showRemove",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": boolean"
    },
    {
      "name": "shape",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": 'rectangle' | 'circle'"
    },
    {
      "name": "size",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": ModusSize"
    },
    {
      "name": "variant",
      "description": "/**\n * A customizable chip component used to display information in a compact area\n */\n@Component({\n  tag: 'modus-wc-chip',\n  styleUrl: 'modus-wc-chip.scss',\n  shadow: false,\n})\nexport class ModusWcChip {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element. */\n  @Element() el!: HTMLElement;\n\n  /** Active state of chip. */",
      "type": ": 'filled' | 'outline'"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "active": "false",
    "customClass": "''",
    "disabled": "false",
    "hasError": "false",
    "label": "''",
    "showRemove": "false",
    "shape": "'rectangle'",
    "size": "'md'",
    "variant": "'filled'"
  },
  "documentation": "\n\n--- modus-wc-chip.stories.ts ---\n\nimport { withActions } from '@storybook/addon-actions/decorator';\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { ModusSize } from '../types';\n\ninterface ChipArgs {\n  active?: boolean;\n  'custom-class'?: string;\n  disabled?: boolean;\n  'has-error'?: boolean;\n  label: string;\n  shape?: 'rectangle' | 'circle';\n  'show-remove'?: boolean;\n  size: ModusSize;\n  variant: 'filled' | 'outline';\n}\n\nconst meta: Meta<ChipArgs> = {\n  title: 'Components/Chip',\n  component: 'modus-wc-chip',\n  args: {\n    label: 'Chip',\n    'show-remove': true,\n    shape: 'rectangle',\n    size: 'md',\n    variant: 'filled',\n  },\n  argTypes: {\n    shape: {\n      control: { type: 'select' },\n      options: ['rectangle', 'circle'],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n    },\n    variant: {\n      control: { type: 'select' },\n      options: ['filled', 'outline'],\n    },\n  },\n  decorators: [withActions],\n  parameters: {\n    actions: {\n      handles: ['chipClick', 'chipRemove'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<ChipArgs>;\n\nconst Template: Story = {\n  render: (args) => {\n    return html` <modus-wc-chip\n      aria-label=\"Chip example\"\n      active=${ifDefined(args.active)}\n      disabled=${ifDefined(args.disabled)}\n      has-error=${ifDefined(args['has-error'])}\n      label=${args.label}\n      shape=${args.shape}\n      show-remove=${ifDefined(args['show-remove'])}\n      size=${args.size}\n      variant=${args.variant}\n    />`;\n  },\n};\n\nexport const Default: Story = { ...Template };\n\nexport const AvatarChip: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-chip\n  aria-label=\"Chip example\"\n  active=${ifDefined(args.active)}\n  disabled=${ifDefined(args.disabled)}\n  has-error=${ifDefined(args['has-error'])}\n  label=${args.label}\n  shape=${args.shape}\n  show-remove=${ifDefined(args['show-remove'])}\n  size=${args.size}\n  variant=${args.variant}\n>\n  <modus-wc-avatar\n    img-src=\"https://i.pinimg.com/474x/73/54/79/7354794bf3873c3ef2666f778da4bcac.jpg\"\n    alt=\"sonic the hedgehog\"\n  ></modus-wc-avatar>\n</modus-wc-chip>\n    `;\n  },\n};\n\nexport const CheckIconChip: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-chip\n  aria-label=\"Chip example\"\n  active=${ifDefined(args.active)}\n  disabled=${ifDefined(args.disabled)}\n  has-error=${ifDefined(args['has-error'])}\n  label=${args.label}\n  shape=${args.shape}\n  show-remove=${ifDefined(args['show-remove'])}\n  size=${args.size}\n  variant=${args.variant}\n>\n  <modus-wc-icon name=\"check\" size=\"xs\"></modus-wc-icon>\n</modus-wc-chip>\n    `;\n  },\n};\n\n// prettier-ignore\nexport const Composable: Story = {\n  render: (args) => {\n    return html`\n<modus-wc-chip\n  aria-label=\"Chip example\"\n  active=${ifDefined(args.active)}\n  disabled=${ifDefined(args.disabled)}\n  has-error=${ifDefined(args['has-error'])}\n  shape=${args.shape}\n  size=${args.size}\n  variant=${args.variant}\n>\n  <modus-wc-icon name=\"heart\" size=\"xs\"></modus-wc-icon>\n  Chip\n</modus-wc-chip>\n\n<modus-wc-chip\n  aria-label=\"Chip example\"\n  active=${ifDefined(args.active)}\n  disabled=${ifDefined(args.disabled)}\n  has-error=${ifDefined(args['has-error'])}\n  shape=${args.shape}\n  show-remove=\"true\"\n  size=${args.size}\n  variant=${args.variant}\n>\n  <modus-wc-icon name=\"heart\" size=\"xs\"></modus-wc-icon>\n  Chip\n</modus-wc-chip>\n\n<modus-wc-chip\n  aria-label=\"Chip example\"\n  active=${ifDefined(args.active)}\n  disabled=${ifDefined(args.disabled)}\n  has-error=${ifDefined(args['has-error'])}\n  shape=${args.shape}\n  size=${args.size}\n  variant=${args.variant}\n>\n  <modus-wc-icon name=\"heart\" size=\"xs\"></modus-wc-icon>\n  Chip\n  <modus-wc-icon name=\"heart\" size=\"xs\"></modus-wc-icon>\n</modus-wc-chip>\n    `;\n  },\n};\n\nexport const Migration: Story = {\n  parameters: {\n    docs: {\n      description: {\n        story: `\n#### Breaking Changes\n\n  - \\`chip-style\\` prop has been renamed to \\`variant\\` and values changed from \\`solid\\` to \\`filled\\`.\n  - \\`closeClick\\` event has been renamed to \\`chipRemove\\`.\n  - \\`show-close\\` prop has been renamed to \\`show-remove\\`.\n  - Size values have changed from verbose names (\\`medium\\`, \\`small\\`) to abbreviations (\\`md\\`, \\`sm\\`).\n\n#### Prop Mapping\n\n| 1.0 Prop       | 2.0 Prop    | Notes                                             |\n|----------------|-------------|---------------------------------------------------|\n| active         | active      |                                                   |\n| advanced-chip  |             | Not carried over                                  |\n| aria-label     | aria-label  |                                                   |\n| chip-id        |             | Not carried over                                  |\n| chip-style     | variant     | \\`solid\\` \u2192 \\`filled\\`, \\`outline\\` \u2192 \\`outline\\` |\n| disabled       | disabled    |                                                   |\n| has-error      | has-error   |                                                   |\n| image-url      |             | Not carried over, use slot instead                |\n| max-width      |             | Not carried over, use CSS instead                 |\n| show-checkmark |             | Not carried over, use slot instead                |\n| show-close     | show-remove |                                                   |\n| size           | size        | \\`medium\\` \u2192 \\`md\\`, \\`small\\` \u2192 \\`sm\\`           |\n| value          | label       |                                                   |\n|                | shape       | New in 2.0: \\`rectangle\\` (default), \\`circle\\` |\n\n#### Event Mapping\n\n| 1.0 Event   | 2.0 Event   | Notes |\n|-------------|-------------|-------|\n| chipClick  | chipClick  |       |\n| closeClick | chipRemove |       |\n        `,\n      },\n    },\n    controls: { disable: true },\n    canvas: { disable: true },\n  },\n  render: () => html`<div></div>`,\n};\n",
  "storybook": {
    "examples": [
      "<modus-wc-avatar\n    img-src=\"https://i.pinimg.com/474x/73/54/79/7354794bf3873c3ef2666f778da4bcac.jpg\"\n    alt=\"sonic the hedgehog\"\n  ></modus-wc-avatar>",
      "<modus-wc-icon name=\"check\" size=\"xs\"></modus-wc-icon>",
      "<modus-wc-icon name=\"heart\" size=\"xs\"></modus-wc-icon>",
      "<modus-wc-icon name=\"heart\" size=\"xs\"></modus-wc-icon>",
      "<modus-wc-icon name=\"heart\" size=\"xs\"></modus-wc-icon>"
    ],
    "variants": [],
    "prop_usage": {
      "label": [
        "Chip example"
      ],
      "src": [
        "https://i.pinimg.com/474x/73/54/79/7354794bf3873c3ef2666f778da4bcac.jpg"
      ],
      "alt": [
        "sonic the hedgehog"
      ],
      "name": [
        "check",
        "heart"
      ],
      "size": [
        "xs"
      ],
      "remove": [
        "true"
      ]
    }
  },
  "tag_name": "modus-wc-chip"
}