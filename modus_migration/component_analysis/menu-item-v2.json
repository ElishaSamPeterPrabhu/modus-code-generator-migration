{
  "component_name": "modus-wc-menu-item",
  "version": "v2",
  "props": [
    {
      "name": "bordered",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": boolean"
    },
    {
      "name": "checkbox",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": boolean"
    },
    {
      "name": "customClass",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": string"
    },
    {
      "name": "disabled",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": boolean"
    },
    {
      "name": "label",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": "string"
    },
    {
      "name": "startIcon",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": string"
    },
    {
      "name": "selected",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": boolean"
    },
    {
      "name": "focused",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": boolean"
    },
    {
      "name": "size",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": ModusSize"
    },
    {
      "name": "subLabel",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": string"
    },
    {
      "name": "tooltipContent",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": string"
    },
    {
      "name": "tooltipPosition",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": ": 'auto' | 'top' | 'right' | 'bottom' | 'left'"
    },
    {
      "name": "value",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */",
      "type": "string"
    }
  ],
  "events": [
    {
      "name": "itemSelect",
      "description": "/**\n * A customizable menu item component used to display the item portion of a menu\n */\n@Component({\n  tag: 'modus-wc-menu-item',\n  styleUrl: 'modus-wc-menu-item.scss',\n  shadow: false,\n})\nexport class ModusWcMenuItem {\n  private inheritedAttributes: Attributes = {};\n\n  /** Reference to the host element */\n  @Element() el!: HTMLElement;\n\n  @Prop() bordered?: boolean;\n\n  /** If true, renders a checkbox at the start of the menu item. */\n  @Prop() checkbox?: boolean;\n\n  /** Custom CSS class to apply to the li element. */\n  @Prop() customClass?: string = '';\n\n  /** The disabled state of the menu item. */\n  @Prop() disabled?: boolean;\n\n  /** The text rendered in the menu item. */\n  @Prop() label: string = '';\n\n  /** The modus icon name to render on the start of the menu item. */\n  @Prop() startIcon?: string;\n\n  /** The selected state of the menu item. */\n  @Prop() selected?: boolean;\n\n  /** The focused state of the menu item. */\n  @Prop() focused?: boolean;\n\n  /** The size of the menu item. */\n  @Prop() size?: ModusSize = 'md';\n\n  /** The text rendered beneath the label. */\n  @Prop() subLabel?: string;\n\n  /** The tooltip text to display when hovering over the menu item. */\n  @Prop() tooltipContent?: string;\n\n  /** The position of the tooltip relative to the menu item. */\n  @Prop() tooltipPosition?: 'auto' | 'top' | 'right' | 'bottom' | 'left' =\n    'auto';\n\n  /** The unique identifying value of the menu item. */\n  @Prop() value: string = '';\n\n  /** Event emitted when a menu item is selected. */"
    }
  ],
  "slots": [],
  "default_values": {
    "checkbox": "= true && (\n                <div class=\"modus-wc-menu-item-selected-icon\">\n                  <modus-wc-icon\n                    decorative={true}\n                    name=\"check\"\n                    size={this.getIconSize()}\n                  />\n                </div>\n              )}\n            </div>\n          </button>\n        </li>\n      </Host>\n    )",
    "customClass": "''",
    "disabled": "{this.disabled}\n          class={this.getClasses()}\n          role=\"menuitem\"\n          {...this.inheritedAttributes}\n        >\n          <button\n            disabled={this.disabled}\n            onClick={this.handleItemSelect}\n            type=\"button\"\n          >\n            <div class=\"modus-wc-menu-item-content\">\n              {this.checkbox && (\n                <modus-wc-checkbox\n                  aria-label=\"Checkbox\"\n                  disabled={this.disabled}\n                  size={this.size}\n                  value={!!this.selected}\n                />\n              )}\n              <slot name=\"start-icon\"></slot>\n              <div class=\"modus-wc-menu-item-labels\">\n                {this.tooltipContent ? (\n                  <modus-wc-tooltip\n                    content={this.tooltipContent}\n                    position={this.tooltipPosition}\n                    customClass=\"modus-wc-menu-item-tooltip\"\n                  >\n                    <div>{this.label}</div>\n                  </modus-wc-tooltip>\n                ) : (\n                  <div>{this.label}</div>\n                )}\n                {this.subLabel && (\n                  <div class=\"modus-wc-menu-item-sublabel\">{this.subLabel}</div>\n                )}\n              </div>\n              {this.selected && this.checkbox !== true && (\n                <div class=\"modus-wc-menu-item-selected-icon\">\n                  <modus-wc-icon\n                    decorative={true}\n                    name=\"check\"\n                    size={this.getIconSize()}\n                  />\n                </div>\n              )}\n            </div>\n          </button>\n        </li>\n      </Host>\n    )",
    "label": "''",
    "size": "'md'",
    "tooltipContent": "{this.tooltipContent}\n                    position={this.tooltipPosition}\n                    customClass=\"modus-wc-menu-item-tooltip\"\n                  >\n                    <div>{this.label}</div>\n                  </modus-wc-tooltip>\n                ) : (\n                  <div>{this.label}</div>\n                )}\n                {this.subLabel && (\n                  <div class=\"modus-wc-menu-item-sublabel\">{this.subLabel}</div>\n                )}\n              </div>\n              {this.selected && this.checkbox !== true && (\n                <div class=\"modus-wc-menu-item-selected-icon\">\n                  <modus-wc-icon\n                    decorative={true}\n                    name=\"check\"\n                    size={this.getIconSize()}\n                  />\n                </div>\n              )}\n            </div>\n          </button>\n        </li>\n      </Host>\n    )",
    "tooltipPosition": "'auto'",
    "value": "''"
  },
  "documentation": "\n\n--- modus-wc-menu-item.stories.ts ---\n\nimport { withActions } from '@storybook/addon-actions/decorator';\nimport { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { ModusSize } from '../types';\n\ninterface MenuItemArgs {\n  bordered?: boolean;\n  checkbox?: boolean;\n  'custom-class'?: string;\n  disabled?: boolean;\n  label: string;\n  selected?: boolean;\n  size?: ModusSize;\n  'sub-label'?: string;\n  'tooltip-content'?: string;\n  'tooltip-position'?: 'auto' | 'top' | 'right' | 'bottom' | 'left';\n  value: string;\n}\n\nconst meta: Meta<MenuItemArgs> = {\n  title: 'Components/Menu Item',\n  component: 'modus-wc-menu-item',\n  args: {\n    label: 'Menu Item',\n    size: 'md',\n    value: 'menuItem',\n  },\n  argTypes: {\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n    },\n    'tooltip-position': {\n      control: { type: 'select' },\n      options: ['auto', 'top', 'right', 'bottom', 'left'],\n    },\n  },\n  decorators: [withActions],\n  parameters: {\n    actions: {\n      handles: ['itemSelect'],\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<MenuItemArgs>;\n\nconst Template: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-menu>\n  <modus-wc-menu-item\n    ?bordered=${args.bordered}\n    ?checkbox=${args.checkbox}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    tooltip-content=${ifDefined(args['tooltip-content'])}\n    tooltip-position=${ifDefined(args['tooltip-position'])}\n    value=${args.value}\n  ></modus-wc-menu-item>\n</modus-wc-menu>\n    `;\n  },\n};\n\nexport const Default: Story = { ...Template };\n\nexport const WithIcon: Story = {\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-menu>\n  <modus-wc-menu-item\n    ?bordered=${args.bordered}\n    ?checkbox=${args.checkbox}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    tooltip-content=${ifDefined(args['tooltip-content'])}\n    tooltip-position=${ifDefined(args['tooltip-position'])}\n    value=${args.value}\n  >\n    <modus-wc-icon\n      slot=\"start-icon\"\n      name=\"alert\"\n      size=\"sm\"\n    ></modus-wc-icon>\n  </modus-wc-menu-item>\n</modus-wc-menu>\n    `;\n  },\n};\nexport const WithCheckbox: Story = {\n  args: {\n    checkbox: true,\n  },\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-menu>\n  <modus-wc-menu-item\n    ?bordered=${args.bordered}\n    ?checkbox=${args.checkbox}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    value=${args.value}\n ></modus-wc-menu-item>\n</modus-wc-menu>\n    `;\n  },\n};\n\nexport const WithTooltip: Story = {\n  args: {\n    'tooltip-content': 'This is a tooltip for the menu item',\n    'tooltip-position': 'top',\n  },\n  render: (args) => {\n    // prettier-ignore\n    return html`\n<modus-wc-menu>\n  <modus-wc-menu-item\n    ?bordered=${args.bordered}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    tooltip-content=${ifDefined((args['tooltip-content']))}\n    tooltip-position=${ifDefined(args['tooltip-position'])}\n    value=${args.value}\n  ></modus-wc-menu-item>\n</modus-wc-menu>\n    `;\n  },\n};\n",
  "storybook": {
    "examples": [
      "<modus-wc-menu-item\n    ?bordered=${args.bordered}\n    ?checkbox=${args.checkbox}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    tooltip-content=${ifDefined(args['tooltip-content'])}\n    tooltip-position=${ifDefined(args['tooltip-position'])}\n    value=${args.value}\n  ></modus-wc-menu-item>",
      "<modus-wc-icon\n      slot=\"start-icon\"\n      name=\"alert\"\n      size=\"sm\"\n    ></modus-wc-icon>",
      "<modus-wc-menu-item\n    ?bordered=${args.bordered}\n    ?checkbox=${args.checkbox}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    value=${args.value}\n ></modus-wc-menu-item>",
      "<modus-wc-menu-item\n    ?bordered=${args.bordered}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    tooltip-content=${ifDefined((args['tooltip-content']))}\n    tooltip-position=${ifDefined(args['tooltip-position'])}\n    value=${args.value}\n  ></modus-wc-menu-item>",
      "\n<modus-wc-menu>\n  <modus-wc-menu-item\n    ?bordered=${args.bordered}\n    ?checkbox=${args.checkbox}\n    custom-class=${ifDefined(args['custom-class'])}\n    ?disabled=${args.disabled}\n    label=${args.label}\n    ?selected=${args.selected}\n    size=${args.size}\n    sub-label=${ifDefined(args['sub-label'])}\n    tooltip-content=${ifDefined(args['tooltip-content'])}\n    tooltip-position=${ifDefined(args['tooltip-position'])}\n    value=${args.value}\n  ></modus-wc-menu-item>\n</modus-wc-menu>\n    "
    ],
    "variants": [],
    "prop_usage": {
      "slot": [
        "start-icon"
      ],
      "name": [
        "alert"
      ],
      "size": [
        "sm"
      ]
    }
  },
  "tag_name": "modus-wc-menu-item"
}