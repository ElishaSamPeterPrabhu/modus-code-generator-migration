{
  "documentation": "import { Meta } from '@storybook/blocks';\n\n<Meta\n  title=\"Framework Integrations/React\"\n  parameters={{\n    previewTabs: {\n      canvas: {\n        hidden: true,\n      },\n    },\n    options: {\n      isToolshown: false,\n    },\n    viewMode: 'docs',\n  }}\n/>\n\n# Modus React Components\n\nWe highly recommend to use the [Modus React Components](https://www.npmjs.com/package/@trimble-oss/modus-react-components) library for React based projects. The components are programmatically generated using the [Stencil](https://stenciljs.com/) for React v17 and v18. Please check out the [instructions](https://www.npmjs.com/package/@trimble-oss/modus-react-components) on how to use the library.\n\n## Modus Web Components in a React project\n\nOptionally you can choose to consume the [Modus Web Components](https://www.npmjs.com/package/@trimble-oss/modus-web-components) directly in your React application instead of [Modus React Components](https://www.npmjs.com/package/@trimble-oss/modus-react-components) by following the below steps.\n\n### Installation\n\nIf you haven't viewed the [Getting Started](/docs/introduction-getting-started--page) page yet, go ahead and give that a look.\nIn your React application, import and execute `defineCustomElements()` in the index file.\n\n### Intrinsic Elements\n\nIn your `src` folder, you will need to add a new file, `intrinsic.d.ts`, which will declare interfaces for the Modus Web Components so that errors aren't thrown when unknown element names are provided in the markup:\n\n```javascript\n  declare namespace JSX {\n      interface IntrinsicElements {\n          ...\n          'modus-button': unknown;\n          ...\n      }\n}\n```\n\n> You only need to define the components you are referencing.\n\n### Wrapping Components\n\nWhen using Modus Web Components directly, it is recommended to wrap it in corresponding React components within your application.\nThis will abstract away from the library dependency, allowing more flexibility for you and your application in the future.\nEach part of the component is able to be abstracted, leaving you with a React component.\n\nA wrapped Modus Button will look like this:\n\n```javascript\nimport React from 'react';\n\ndeclare interface ButtonComponentProps {\n  buttonStyle?: 'borderless' | 'fill' | 'outline';\n  children?: React.ReactNode | React.ReactNode[];\n  color?: 'danger' | 'default' | 'primary' | 'secondary' | 'warning';\n  disabled?: boolean;\n  buttonClick?: (event: React.MouseEvent) => void;\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst ButtonComponent: React.FC<ButtonComponentProps> = (\n  props: ButtonComponentProps\n) => {\n  return (\n    <modus-button\n      button-style={props.buttonStyle}\n      color={props.color}\n      disabled={props.disabled}\n      buttonClick={(event: React.MouseEvent) =>\n        props.buttonClick ? props.buttonClick(event) : null\n      }\n      size={props.size}>\n      {props.children}\n    </modus-button>\n  );\n};\n\nexport default ButtonComponent;\n```\n",
  "examples": {
    "index.tsx": "export { default as Accordion } from './ModusAccordionExamples';\nexport { default as Alert } from './ModusAlertExamples';\nexport { default as Badge } from './ModusBadgeExamples';\nexport { default as Breadcrumb } from './ModusBreadcrumbExamples';\nexport { default as Button } from './ModusButtonExamples';\nexport { default as Card } from './ModusCardExamples';\nexport { default as Chip } from './ModusChipExamples';\nexport { default as ContentTree } from './ModusContentTreeExamples';\nexport { default as DataTable } from './ModusDataTableExamples';\nexport { default as Dropdown } from './ModusDropdownExamples';\nexport { default as FileDropZone } from './ModusFileDropZoneExamples';\nexport { default as List } from './ModusListExamples';\nexport { default as Message } from './ModusMessageExamples';\nexport { default as Modal } from './ModusModalExamples';\nexport { default as Pagination } from './ModusPaginationExamples';\nexport { default as Navbar } from './ModusNavbarExamples';\nexport { default as ProgressBar } from './ModusProgressBarExamples';\nexport { default as RadioGroup } from './ModusRadioGroupExamples';\nexport { default as SideNavigation } from './ModusSideNavigationExamples';\nexport { default as Slider } from './ModusSliderExamples';\nexport { default as Spinner } from './ModusSpinnerExamples';\nexport { default as Tab } from './ModusTabExamples';\nexport { default as Toast } from './ModusToastExamples';\nexport { default as Tooltip } from './ModusTooltipExamples';\nexport { default as AutoComplete } from './ModusAutoCompleteExamples';\nexport { default as Checkbox } from './ModusCheckboxExamples';\nexport { default as DatePicker } from './ModusDatePickerExamples';\nexport { default as NumberInput } from './ModusNumberInputExamples';\nexport { default as Select } from './ModusSelectExamples';\nexport { default as Switch } from './ModusSwitchExamples';\nexport { default as TextInput } from './ModusTextInputExamples';\nexport { default as TimePicker } from './ModusTimePickerExamples';\nexport { default as Table } from './ModusTableExamples';\n",
    "ModusContentTreeExamples.tsx": "import { ModusTreeView, ModusTreeViewItem } from '@trimble-oss/modus-react-components';\n\nexport default function ModusContentTreeExamples() {\n  return (\n    <>\n      <h3>Content Tree</h3>\n      <ModusTreeView\n        style={{ width: '400px' }}\n        checkbox-selection=\"true\"\n        checked-items=\"false\"\n        expanded-items=\"false\"\n        multi-checkbox-selection=\"true\"\n        multi-selection=\"true\"\n        selected-items=\"false\">\n        <ModusTreeViewItem nodeId=\"1\" label=\"Inbox\">\n          <ModusTreeViewItem nodeId=\"2\" label=\"Personal\"></ModusTreeViewItem>\n          <ModusTreeViewItem nodeId=\"3\" label=\"Work\"></ModusTreeViewItem>\n          <ModusTreeViewItem nodeId=\"4\" label=\"Social\"></ModusTreeViewItem>\n          <ModusTreeViewItem nodeId=\"5\" label=\"More ...\"></ModusTreeViewItem>\n        </ModusTreeViewItem>\n        <ModusTreeViewItem nodeId=\"6\" label=\"Archived\">\n          <ModusTreeViewItem nodeId=\"7\" label=\"Folder1\">\n            <ModusTreeViewItem nodeId=\"8\" label=\"File1\"></ModusTreeViewItem>\n            <ModusTreeViewItem nodeId=\"9\" label=\"Folder2\">\n              <ModusTreeViewItem nodeId=\"10\" label=\"File2\"></ModusTreeViewItem>\n            </ModusTreeViewItem>\n            <ModusTreeViewItem nodeId=\"11\" label=\"File3\"></ModusTreeViewItem>\n          </ModusTreeViewItem>\n        </ModusTreeViewItem>\n        <ModusTreeViewItem nodeId=\"12\" label=\"Spam\"></ModusTreeViewItem>\n      </ModusTreeView>\n    </>\n  );\n}\n",
    "ModusBadgeExamples.tsx": "import { ModusBadge } from '@trimble-oss/modus-react-components';\n\nexport default function ModusBadgeExamples() {\n  return (\n    <>\n      <h3>Badge</h3>\n      <div className=\"grid\">\n        <div className=\"grid-row\">\n          <ModusBadge>Default</ModusBadge>\n          <ModusBadge color=\"secondary\">Secondary</ModusBadge>\n          <ModusBadge color=\"tertiary\">Tertiary</ModusBadge>\n          <ModusBadge color=\"dark\">Dark</ModusBadge>\n          <ModusBadge color=\"warning\">Warning</ModusBadge>\n          <ModusBadge color=\"danger\">Danger</ModusBadge>\n        </div>\n\n        <div className=\"grid-row\">\n          <ModusBadge size=\"small\">Small</ModusBadge>\n          <ModusBadge size=\"medium\">Medium</ModusBadge>\n          <ModusBadge size=\"large\">Large</ModusBadge>\n        </div>\n\n        <div className=\"grid-row\">\n          <ModusBadge type=\"counter\">Counter</ModusBadge>\n          <ModusBadge color=\"secondary\" type=\"counter\">\n            Counter\n          </ModusBadge>\n          <ModusBadge color=\"tertiary\" type=\"counter\">\n            Counter\n          </ModusBadge>\n          <ModusBadge color=\"dark\" type=\"counter\">\n            Counter\n          </ModusBadge>\n          <ModusBadge color=\"warning\" type=\"counter\">\n            Counter\n          </ModusBadge>\n          <ModusBadge color=\"danger\" type=\"counter\">\n            Counter\n          </ModusBadge>\n        </div>\n\n        <div className=\"grid-row\">\n          <ModusBadge size=\"small\" type=\"counter\">\n            Small\n          </ModusBadge>\n          <ModusBadge size=\"medium\" type=\"counter\">\n            Medium\n          </ModusBadge>\n          <ModusBadge size=\"large\" type=\"counter\">\n            Large\n          </ModusBadge>\n        </div>\n\n        <div className=\"grid-row\">\n          <ModusBadge type=\"text\">Primary</ModusBadge>\n          <ModusBadge color=\"secondary\" type=\"text\">\n            Secondary\n          </ModusBadge>\n          <ModusBadge color=\"dark\" type=\"text\">\n            High Contrast\n          </ModusBadge>\n          <ModusBadge color=\"success\" type=\"text\">\n            Success\n          </ModusBadge>\n          <ModusBadge color=\"danger\" type=\"text\">\n            Danger\n          </ModusBadge>\n        </div>\n\n        <div className=\"grid-row\">\n          <ModusBadge size=\"small\" type=\"text\">\n            Small\n          </ModusBadge>\n          <ModusBadge size=\"medium\" type=\"text\">\n            Medium\n          </ModusBadge>\n          <ModusBadge size=\"large\" type=\"text\">\n            Large\n          </ModusBadge>\n        </div>\n      </div>\n    </>\n  );\n}\n",
    "ModusProgressBarExamples.tsx": "import { ModusProgressBar } from '@trimble-oss/modus-react-components';\n\nexport default function ModusProgressBarExamples() {\n  return (\n    <>\n      <h3>Progress Bar</h3>\n      <div className=\"grid\">\n        <ModusProgressBar value={3} maxValue={4} min-value=\"0\" text=\"75%\"></ModusProgressBar>\n        <ModusProgressBar value={3} maxValue={4} min-value=\"0\" size=\"compact\"></ModusProgressBar>\n      </div>\n    </>\n  );\n}\n",
    "ModusModalExamples.tsx": "import { ModusButton, ModusModal } from '@trimble-oss/modus-react-components';\nimport { useRef } from 'react';\n\nexport default function ModusModalExamples() {\n  const ref = useRef<HTMLModusModalElement>(null);\n  return (\n    <>\n      <h3>Modal</h3>\n      <ModusButton\n        id=\"btn-modal\"\n        color=\"primary\"\n        onButtonClick={(e) => {\n          const modal = ref.current;\n          if (modal) {\n            modal.open();\n            modal.primaryButtonDisabled = true;\n          }\n        }}>\n        Open modal\n      </ModusButton>\n      <ModusModal\n        id=\"modal1\"\n        ref={ref}\n        header-text=\"Modal title\"\n        primary-button-text=\"Save changes\"\n        secondary-button-text=\"Sweet!\"\n        primary-button-aria-label=\"Save changes\"\n        secondary-button-aria-label=\"Sweet\">\n        <p>Woo-hoo, you're reading this text in a modal!</p>\n      </ModusModal>\n    </>\n  );\n}\n",
    "ModusPaginationExamples.tsx": "import { ModusPagination } from '@trimble-oss/modus-react-components';\n\nexport default function ModusPaginationExamples() {\n  return (\n    <>\n      <h3>Pagination</h3>\n      <div className=\"grid\">\n        <ModusPagination active-page=\"8\" max-page=\"32\" min-page=\"1\" size=\"medium\"></ModusPagination>\n        <ModusPagination active-page=\"8\" max-page=\"32\" min-page=\"1\" size=\"large\"></ModusPagination>\n        <ModusPagination active-page=\"8\" max-page=\"32\" min-page=\"1\" size=\"small\"></ModusPagination>\n      </div>\n    </>\n  );\n}\n",
    "ModusChipExamples.tsx": "import { ModusChip } from '@trimble-oss/modus-react-components';\n\nexport default function ModusChipExamples() {\n  return (\n    <>\n      <h3>Chips</h3>\n      <div className=\"grid-row\">\n        <ModusChip image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></ModusChip>\n        <ModusChip has-error image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></ModusChip>\n        <ModusChip disabled image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></ModusChip>\n      </div>\n      <div className=\"grid-row\">\n        <ModusChip image-url=\"https://example.com/image.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></ModusChip>\n        <ModusChip\n          has-error\n          image-url=\"https://example.com/image.jpg\"\n          show-close\n          chip-style=\"outline\"\n          value=\"Bryan\"></ModusChip>\n        <ModusChip\n          disabled\n          image-url=\"https://example.com/image.jpg\"\n          show-close\n          chip-style=\"outline\"\n          value=\"Bryan\"></ModusChip>\n      </div>\n      <div className=\"grid-row\">\n        <ModusChip show-checkmark size=\"small\" value=\"Pets OK\"></ModusChip>\n      </div>\n    </>\n  );\n}\n",
    "ModusTabExamples.tsx": "import { ModusTabs } from '@trimble-oss/modus-react-components';\n\nexport default function ModusTabExamples() {\n  return (\n    <>\n      <h3>Tabs</h3>\n      <ModusTabs\n        tabs={[\n          {\n            id: '0',\n            label: 'Tab 1',\n          },\n          {\n            active: true,\n            id: '1',\n            label: 'Tab 2',\n          },\n        ]}></ModusTabs>\n    </>\n  );\n}\n",
    "ModusRadioGroupExamples.tsx": "import { ModusRadioGroup } from '@trimble-oss/modus-react-components';\n\nexport default function ModusRadioGroupExamples() {\n  return (\n    <>\n      <h3>Radio group</h3>\n      <ModusRadioGroup\n        checked-id=\"1\"\n        name=\"my-group\"\n        radioButtons={[\n          {\n            id: '0',\n            label: 'Radio 1',\n          },\n          {\n            id: '1',\n            checked: true,\n            label: 'Radio 2',\n          },\n          {\n            id: '2',\n            label: 'Radio 3',\n          },\n        ]}></ModusRadioGroup>\n    </>\n  );\n}\n",
    "ModusTableExamples.tsx": "import React from 'react';\nimport {\n  ModusTableColumn,\n  ModusTableColumnDataType, // eslint-disable-line\n  ModusTableColumnsVisibilityOptions,\n  ModusTableDisplayOptions,\n  ModusTableRowSelectionOptions,\n  ModusTableToolbarOptions,\n} from '@trimble-oss/modus-web-components';\nimport { ModusTable } from '@trimble-oss/modus-react-components';\n\nfunction range(len: number) {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\n\nfunction randomNumber(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction newPerson() {\n  const namesIndex = randomNumber(0, 17);\n  const firstName = Names[namesIndex].split(' ')[0];\n  const lastName = Names[namesIndex].split(' ')[1];\n  const email: string = `${firstName}${lastName}@example.com`.toLowerCase();\n  return {\n    firstName,\n    lastName,\n    age: randomNumber(20, 80) * 30,\n    visits: randomNumber(1, 100) * 100,\n    email: { display: email, url: email },\n    progress: randomNumber(1, 100) * 100,\n    status: randomNumber(1, 100) > 66 ? 'Verified' : randomNumber(0, 100) > 33 ? 'Pending' : 'Rejected',\n    createdAt: new Date(randomNumber(1990, 2020), randomNumber(0, 11), randomNumber(1, 30)).toDateString(),\n  };\n}\n\nfunction makeData(...lens: number[]): object[] {\n  const makeDataLevel: any = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map(() => {\n      return {\n        ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n\nconst Names = [\n  'Mickey Mouse',\n  'Bugs Bunny',\n  'Homer Simpson',\n  'Fred Flintstone',\n  'Sponge Bob',\n  'Daffy Duck',\n  'Charlie Brown',\n  'Scooby Doo',\n  'Tom Cat',\n  'Jerry Mouse',\n  'Mighty Mouse',\n  'Wile E Coyote',\n  'Tweety Bird',\n  'Pink Panther',\n  'Road Runner',\n  'Patrick Star',\n  'Roger Rabbit',\n  'Papa Smurf',\n  'Buzz Lightyear',\n];\nconst DefaultColumns: ModusTableColumn<unknown>[] = [\n  {\n    header: 'First Name',\n    accessorKey: 'firstName',\n    id: 'first-name',\n    dataType: 'text',\n    size: 150,\n    minSize: 80,\n    footer: 'Total',\n  },\n  {\n    header: 'Last Name',\n    accessorKey: 'lastName',\n    id: 'last-name',\n    dataType: 'text',\n    size: 150,\n    minSize: 80,\n  },\n  {\n    header: 'Age',\n    accessorKey: 'age',\n    id: 'age',\n    dataType: 'integer',\n    size: 80,\n    minSize: 60,\n  },\n  {\n    header: 'Visits',\n    accessorKey: 'visits',\n    id: 'visits',\n    dataType: 'integer',\n    showTotal: true,\n    minSize: 80,\n    cell: function formatNumber({ cell }: any) {\n      return `$${Number(cell.getValue())\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}`;\n    },\n  },\n  {\n    header: 'Email',\n    accessorKey: 'email',\n    id: 'email',\n    dataType: 'link',\n    size: 230,\n    minSize: 80,\n    sortingFn: 'sortForHyperlink',\n  },\n  {\n    header: 'Status',\n    accessorKey: 'status',\n    id: 'status',\n    dataType: 'text',\n    minSize: 80,\n  },\n  {\n    header: 'Profile Progress',\n    accessorKey: 'progress',\n    id: 'progress',\n    dataType: 'integer',\n    minSize: 100,\n  },\n  {\n    header: 'Created At',\n    accessorKey: 'createdAt',\n    id: 'createdAt',\n    dataType: 'text',\n    size: 150,\n    minSize: 150,\n  },\n];\n\nfunction ModusTableExamples() {\n  const DefaultArgs: any = {\n    showSortIconOnHover: true,\n    fullWidth: false,\n    pageSizeList: [7, 10, 20],\n    displayOptions: {\n      borderless: true,\n      cellBorderless: false,\n    } as ModusTableDisplayOptions,\n    maxHeight: '',\n    maxWidth: '800px',\n    columns: DefaultColumns,\n    data: makeData(10000, 1, 1),\n    pagination: true,\n    sort: true,\n    hover: true,\n    rowsExpandable: true,\n    summaryRow: true,\n    columnResize: true,\n    columnReorder: true,\n    toolbar: true,\n    toolbarOptions: {\n      columnsVisibility: {\n        title: '',\n        requiredColumns: ['age', 'visits'],\n      } as ModusTableColumnsVisibilityOptions,\n    } as ModusTableToolbarOptions,\n    rowSelection: true,\n    rowSelectionOptions: {\n      multiple: true,\n      subRowSelection: true,\n    } as ModusTableRowSelectionOptions,\n  };\n\n  return <ModusTable {...DefaultArgs}></ModusTable>;\n}\n\nexport default ModusTableExamples;\n",
    "ModusSliderExamples.tsx": "import { ModusSlider } from '@trimble-oss/modus-react-components';\n\nexport default function ModusSliderExamples() {\n  return (\n    <>\n      <h3>Slider</h3>\n      <div className=\"grid\">\n        <ModusSlider label=\"Slider\"></ModusSlider> <ModusSlider disabled label=\"Disabled slider\"></ModusSlider>\n        <h3>Spinner</h3>\n      </div>\n    </>\n  );\n}\n",
    "ModusSideNavigationExamples.tsx": "import { ModusNavbar, ModusSideNavigation, ModusSwitch } from '@trimble-oss/modus-react-components';\nimport { ModusSideNavigationItemInfo } from '@trimble-oss/modus-web-components';\n\nconst handleSideNavItemClick = (e: any) => {\n  if (e.detail) {\n    const panel = document.querySelector('#panelcontent');\n    document.querySelector('#sidenav-content-title')?.remove();\n    const el = document.createElement('h3');\n    el.id = 'sidenav-content-title';\n    el.innerHTML = e.target?.label || 'Home page';\n    panel?.insertBefore(el, document.querySelector('#overview'));\n  }\n};\n\nconst handleSwitch = (e: any) => {\n  const sidenav = document.querySelector('modus-side-navigation');\n  if (sidenav) sidenav.mode = sidenav.mode === 'push' ? 'overlay' : 'push';\n};\n\nconst handleNavBarMainMenu = (e: any) => {\n  const panel = document.querySelector('modus-side-navigation');\n  if (panel) panel.expanded = !panel.expanded;\n};\n\nconst NavbarOptions = {\n  apps: [\n    {\n      description: 'The One Trimble Design System',\n      logoUrl: 'https://modus.trimble.com/favicon.svg',\n      name: 'Trimble Modus',\n      url: 'https://modus.trimble.com/',\n      category: '',\n      showCategory: false,\n    },\n  ],\n  productLogoOptions: { url: 'https://modus.trimble.com/img/trimble-logo.svg' },\n  profileMenuOptions: {\n    email: 'modus_user@trimble.com',\n    initials: 'MU',\n    username: 'Modus User',\n  },\n};\n\nconst SideNavIcons = {\n  home: \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cstyle%3E .st1 %7B stroke: %23000; stroke-miterlimit: 10; %7D %3C/style%3E%3Cpath d='M30.707 15.293 26 10.586V5a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v1.586l-4.293-4.293a1 1 0 0 0-1.414 0l-13 13A1 1 0 0 0 4 17h3v12a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-7h6v7a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V17h3a1 1 0 0 0 .707-1.707z' /%3E%3C/svg%3E\",\n\n  usage:\n    \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cg%3E%3Cpath d='M30 23v6c0 .55-.45 1-1 1h-6c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1h2v-5h-8v5h2c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1h-6c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1h2v-5H7v5h2c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1h2v-6c0-.55.45-1 1-1h9v-5h-2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h6c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1h-2v5h9c.55 0 1 .45 1 1v6h2c.55 0 1 .45 1 1z' /%3E%3C/g%3E%3C/svg%3E\",\n\n  styles:\n    \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cpath d='M30 25h-1v-9a1 1 0 0 0-1-1h-5a1 1 0 0 0-1 1v9h-2V5a1 1 0 0 0-1-1h-5a1 1 0 0 0-1 1v20h-2V12a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v13H3a1 1 0 1 0 0 2h27a1 1 0 1 0 0-2zM6 25V13h3v12H6zm9 0V6h3v19h-3zm9 0v-8h3v8h-3z' /%3E%3C/svg%3E\",\n\n  accessibility:\n    \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cg%3E%3Cpath d='M29 4H3c-.55 0-1 .45-1 1v17c0 .55.45 1 1 1h12v3h-4c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1h-4v-3h12c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 17H4v-2h24v2z' /%3E%3C/g%3E%3C/svg%3E\",\n};\n\nconst SideNavData: ModusSideNavigationItemInfo[] = [\n  {\n    id: 'home-menu',\n    menuIcon: SideNavIcons.home,\n    label: 'Home page 1',\n    children: [\n      {\n        id: 'home-menu-2',\n        menuIcon: SideNavIcons.home,\n        label: 'Home page 2',\n        onSideNavItemClicked: handleSideNavItemClick,\n      },\n      {\n        id: 'usage-menu-2',\n        children: [\n          {\n            id: 'home-menu-3',\n            menuIcon: SideNavIcons.home,\n            label: 'Home page 3',\n            onSideNavItemClicked: handleSideNavItemClick,\n          },\n        ],\n        menuIcon: SideNavIcons.usage,\n        label: 'Usage page 2',\n      },\n    ],\n  },\n  {\n    id: 'usage-menu',\n    menuIcon: SideNavIcons.usage,\n    label: 'Usage page 1',\n    onSideNavItemClicked: handleSideNavItemClick,\n  },\n  {\n    id: 'styles-menu',\n    menuIcon: SideNavIcons.styles,\n    label: 'Styles page 1',\n    onSideNavItemClicked: handleSideNavItemClick,\n  },\n  {\n    id: 'accessibility-menu',\n    menuIcon: SideNavIcons.accessibility,\n    label: 'Accessibility page 1',\n    onSideNavItemClicked: handleSideNavItemClick,\n  },\n];\n\nexport default function ModusSideNavigationExamples() {\n  return (\n    <>\n      <h3>Side navigation</h3>\n      <div id=\"dataTemplate\">\n        <ModusSwitch id=\"switch-mode\" onSwitchClick={handleSwitch} label=\"Enable Push Side Navigation\"></ModusSwitch>\n        <div style={{ width: '100%', alignItems: 'center', height: '56px', boxShadow: '0 0 2px', marginTop: '10px' }}>\n          <ModusNavbar\n            onMainMenuClick={handleNavBarMainMenu}\n            id=\"navbar\"\n            show-apps-menu\n            show-help\n            show-main-menu\n            show-notifications\n            {...NavbarOptions}></ModusNavbar>\n        </div>\n\n        <div\n          id=\"container\"\n          style={{ display: 'flex', minHeight: '500px', overflowY: 'auto', position: 'relative', boxShadow: '0 0 2px' }}>\n          <ModusSideNavigation\n            max-width=\"300px\"\n            id=\"sideNav\"\n            target-content=\"#dataTemplate #panelcontent\"\n            mode=\"overlay\"\n            data={SideNavData}></ModusSideNavigation>\n\n          <div id=\"panelcontent\" style={{ padding: '10px', transition: 'all 0.25s linear 0s' }}>\n            <div id=\"overview\">\n              <p>\n                The side navigation of an application provides context through accessible menu options and positions a\n                consistent component to connect to various pages in the application.\n              </p>\n              <p>\n                The side navigation is a collapsible side content of the site\u2019s pages. It is located alongside the page\u2019s\n                primary content. The component is designed to add side content to a fullscreen application. It is activated\n                through the \u201chamburger\u201d menu in the Navbar.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n",
    "ModusCardExamples.tsx": "import { ModusButton, ModusCard } from '@trimble-oss/modus-react-components';\n\nexport default function ModusCardExamples() {\n  return (\n    <>\n      <h3>Card</h3>\n      <ModusCard>\n        <div style={{ padding: '10px' }}>\n          <h4 id=\"card-title\">Card title</h4>\n          <h5>Card subtitle</h5>\n          <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n          <ModusButton color=\"primary\">Go somewhere</ModusButton>\n        </div>\n      </ModusCard>\n    </>\n  );\n}\n",
    "ModusDatePickerExamples.tsx": "import { ModusDateInput, ModusDatePicker } from '@trimble-oss/modus-react-components';\n\nexport default function ModusDatePickerExamples() {\n  return (\n    <>\n      <h3>Date picker</h3>\n      <div className=\"grid\">\n        <ModusDateInput\n          helper-text=\"mm/dd/yyyy\"\n          label=\"Single date\"\n          allowed-chars-regex=\"[\\d\\/]\"\n          format=\"mm/dd/yyyy\"\n          value=\"2022-12-22\"></ModusDateInput>\n\n        <ModusDatePicker label=\"Select date range\">\n          <ModusDateInput\n            type=\"start\"\n            label=\"Start\"\n            format=\"dd-mm-yyyy\"\n            helper-text=\"dd-mm-yyyy\"\n            allowed-chars-regex=\"[\\d-]\"\n            show-calendar-icon=\"true\"\n            value=\"2022-12-22\"></ModusDateInput>\n\n          <ModusDateInput\n            type=\"end\"\n            label=\"End\"\n            format=\"dd-mm-yyyy\"\n            helper-text=\"dd-mm-yyyy\"\n            allowed-chars-regex=\"[\\d-]\"\n            show-calendar-icon=\"true\"\n            value=\"2022-12-22\"></ModusDateInput>\n        </ModusDatePicker>\n      </div>\n    </>\n  );\n}\n",
    "ModusDataTableExamples.tsx": "import { ModusDataTable } from '@trimble-oss/modus-react-components';\n\nexport default function ModusDataTableExamples() {\n  return (\n    <>\n      <h3>Data Table</h3>\n      <ModusDataTable\n        columns={['Name', 'Age', 'Contacted']}\n        data={[\n          ['John', 25, false],\n          ['Jane', 26, false],\n          ['Joe', 27, true],\n        ]}\n      />\n    </>\n  );\n}\n",
    "ModusDropdownExamples.tsx": "import { ModusButton, ModusDropdown, ModusList, ModusListItem } from '@trimble-oss/modus-react-components';\n\nexport default function ModusDropdownExamples() {\n  return (\n    <>\n      <h3>Dropdown</h3>\n      <ModusDropdown toggle-element-id=\"toggleElement\">\n        <ModusButton id=\"toggleElement\" slot=\"dropdownToggle\">\n          Dropdown\n        </ModusButton>\n        <ModusList slot=\"dropdownList\">\n          <ModusListItem size=\"condensed\">Item 1</ModusListItem>\n          <ModusListItem size=\"condensed\">Item 2</ModusListItem>\n          <ModusListItem size=\"condensed\">Item 3</ModusListItem>\n        </ModusList>\n      </ModusDropdown>\n    </>\n  );\n}\n",
    "ModusTimePickerExamples.tsx": "import { ModusSelect, ModusTimePicker } from '@trimble-oss/modus-react-components';\n\nexport default function ModusTimePickerExamples() {\n  return (\n    <>\n      <h3>Time Picker Input</h3>\n      <div className=\"grid\">\n        <ModusTimePicker\n          ampm={true}\n          auto-format=\"true\"\n          helper-text=\"hh:mm AM/PM\"\n          label=\"Time\"\n          max-length=\"10\"\n          placeholder=\"12:00 AM\">\n          <div style={{ width: '300px', paddingLeft: '0.5rem' }} slot=\"timeZone\">\n            <ModusSelect\n              id=\"timezone\"\n              label=\"Time Zone\"\n              aria-label=\"Time Zone\"\n              options={[\n                { display: 'Alpha Time Zone' },\n                { display: 'Australian Central Daylight Time' },\n                { display: 'Atlantic Daylight Time' },\n              ]}\n              options-display-prop=\"display\"></ModusSelect>\n          </div>\n        </ModusTimePicker>\n      </div>\n    </>\n  );\n}\n",
    "ModusCheckboxExamples.tsx": "import { ModusCheckbox } from '@trimble-oss/modus-react-components';\n\nexport default function ModusCheckboxExamples() {\n  return (\n    <>\n      <h3>Checkbox</h3>\n      <div className=\"grid\">\n        <ModusCheckbox></ModusCheckbox>\n        <ModusCheckbox disabled></ModusCheckbox>\n        <ModusCheckbox label=\"Checkbox\"></ModusCheckbox>\n        <ModusCheckbox disabled label=\"Checkbox\"></ModusCheckbox>\n        <ModusCheckbox checked disabled label=\"Checkbox\"></ModusCheckbox>\n\n        <ModusCheckbox indeterminate></ModusCheckbox>\n      </div>\n    </>\n  );\n}\n",
    "ModusListExamples.tsx": "import { ModusList, ModusListItem } from '@trimble-oss/modus-react-components';\n\nexport default function ModusListExamples() {\n  return (\n    <>\n      <h3>List</h3>\n      <ModusList>\n        <ModusListItem size=\"condensed\">Condensed</ModusListItem>\n        <ModusListItem selected size=\"condensed\">\n          Condensed & Selected\n        </ModusListItem>\n        <ModusListItem>Default</ModusListItem>\n        <ModusListItem selected>Selected</ModusListItem>\n        <ModusListItem disabled>Disabled</ModusListItem>\n        <ModusListItem size=\"large\">Large</ModusListItem>\n        <ModusListItem selected size=\"large\">\n          Large & Selected\n        </ModusListItem>\n      </ModusList>\n    </>\n  );\n}\n",
    "ModusSpinnerExamples.tsx": "import { ModusButton, ModusSpinner } from '@trimble-oss/modus-react-components';\n\nexport default function ModusSpinnerExamples() {\n  return (\n    <>\n      <h3>Spinner</h3>\n      <ModusSpinner></ModusSpinner>\n      <ModusSpinner color=\"secondary\"></ModusSpinner>\n      <ModusButton color=\"primary\" disabled>\n        <ModusSpinner color=\"white\" size=\".5rem\"></ModusSpinner>\n        &nbsp;Loading...\n      </ModusButton>\n    </>\n  );\n}\n",
    "ModusTextInputExamples.tsx": "import { ModusTextInput } from '@trimble-oss/modus-react-components';\n\nexport default function ModusTextInputExamples() {\n  return (\n    <>\n      <h3>Text Input</h3>\n      <div className=\"grid\">\n        <ModusTextInput label=\"Text Input Demo 1\" placeholder=\"Placeholder\" include-search-icon required></ModusTextInput>\n        <ModusTextInput label=\"Text Input Demo 2\" include-search-icon disabled></ModusTextInput>\n        <ModusTextInput\n          label=\"Text Input Demo 3\"\n          placeholder=\"Placeholder\"\n          value=\"Value\"\n          helper-text=\"Helper Demo\"\n          include-search-icon\n          required></ModusTextInput>\n        <ModusTextInput\n          label=\"Text Input Demo 4\"\n          placeholder=\"Placeholder\"\n          value=\"Value\"\n          error-text=\"Error Demo\"\n          include-search-icon></ModusTextInput>\n        <ModusTextInput\n          label=\"Text Input Demo 5\"\n          placeholder=\"Placeholder\"\n          value=\"Value\"\n          valid-text=\"Valid Demo\"\n          include-search-icon></ModusTextInput>\n        <ModusTextInput\n          label=\"Text Input Demo 6\"\n          placeholder=\"Placeholder\"\n          value=\"Value\"\n          size=\"large\"\n          include-search-icon></ModusTextInput>\n        <ModusTextInput label=\"Text Input Demo 7\" placeholder=\"Placeholder\" value=\"Value\" clearable={true}></ModusTextInput>\n        <ModusTextInput label=\"Text Input Demo Password\" placeholder=\"Password\" type=\"password\"></ModusTextInput>\n      </div>\n    </>\n  );\n}\n",
    "ModusNavbarExamples.tsx": "import { ModusNavbar } from '@trimble-oss/modus-react-components';\n\nexport default function ModusNavbarExamples() {\n  const appMenuOptions = [\n    {\n      description: 'The One Trimble Design System',\n      logoUrl: 'https://modus.trimble.com/favicon.svg',\n      name: 'Trimble Modus',\n      url: 'https://modus.trimble.com/',\n      category: '',\n      showCategory: false,\n    },\n  ];\n\n  const logoOptions = {\n    primary: {\n      url: 'https://modus-bootstrap.trimble.com/img/trimble-logo-rev.svg',\n      height: '24',\n    },\n    secondary: { url: 'https://modus.trimble.com/favicon.svg', height: '24' },\n  };\n  const profileMenuOptions = {\n    email: 'modus_user@trimble.com',\n    initials: 'MU',\n    username: 'Modus User',\n  };\n\n  const buttons = [\n    { id: 'addMenu', icon: 'add', tooltip: { text: '' }, orderIndex: 1 },\n    { id: 'notificationMenu', icon: 'notifications', tooltip: { text: '' }, orderIndex: 1 },\n  ];\n\n  return (\n    <>\n      <h3>Navbar</h3>\n      <ModusNavbar\n        onMainMenuClick={(e) => {\n          const panel = document.querySelector('modus-side-navigation');\n          if (panel) panel.expanded = !panel.expanded;\n        }}\n        id=\"navbar\"\n        show-apps-menu\n        show-help\n        show-main-menu\n        apps={appMenuOptions}\n        logoOptions={logoOptions}\n        profileMenuOptions={profileMenuOptions}\n        buttons={buttons}>\n        <div slot=\"main\" style={{ height: '300px' }}>\n          Render your own main menu.\n        </div>\n        <div slot=\"notificationMenu\">Render your own notification menu.</div>\n        <div slot=\"addMenu\">Render your own add menu.</div>\n      </ModusNavbar>\n    </>\n  );\n}\n",
    "ModusAccordionExamples.tsx": "import { ModusAccordion, ModusAccordionItem } from '@trimble-oss/modus-react-components';\n\nexport default function ModusAccordionExamples() {\n  return (\n    <>\n      <h3>Accordion</h3>\n      <ModusAccordion>\n        <ModusAccordionItem headerText=\"Item 1\">Content</ModusAccordionItem>\n        <ModusAccordionItem headerText=\"Item 2\">Content</ModusAccordionItem>\n        <ModusAccordionItem disabled headerText=\"Item 3\">\n          Content\n        </ModusAccordionItem>\n      </ModusAccordion>\n    </>\n  );\n}\n",
    "ModusButtonExamples.tsx": "import { ModusButton } from '@trimble-oss/modus-react-components';\n\nexport default function ModusButtonExamples() {\n  return (\n    <>\n      <h3>Buttons</h3>\n      <div className=\"grid-row\">\n        <ModusButton color=\"primary\">Primary</ModusButton>\n        <ModusButton color=\"secondary\">Secondary</ModusButton>\n        <ModusButton color=\"tertiary\">Tertiary</ModusButton>\n      </div>\n      <div className=\"grid-row\">\n        <ModusButton color=\"danger\">Danger</ModusButton>\n        <ModusButton disabled color=\"danger\">\n          Disabled\n        </ModusButton>\n      </div>\n      <div className=\"grid-row\">\n        <ModusButton size=\"small\" color=\"primary\">\n          Small\n        </ModusButton>\n        <ModusButton size=\"large\" color=\"primary\">\n          Large\n        </ModusButton>\n      </div>\n      <div className=\"grid-row\">\n        <ModusButton button-style=\"borderless\">Borderless</ModusButton>\n      </div>\n      <div className=\"grid-row\">\n        <ModusButton button-style=\"outline\" color=\"primary\">\n          Outline\n        </ModusButton>\n        <ModusButton button-style=\"outline\" color=\"secondary\">\n          Outline\n        </ModusButton>\n      </div>\n    </>\n  );\n}\n",
    "ModusAlertExamples.tsx": "import { ModusAlert } from '@trimble-oss/modus-react-components';\n\nexport default function ModusAlertExamples() {\n  return (\n    <>\n      <h3>Alert</h3>\n      <div className=\"grid\">\n        <ModusAlert dismissible message=\"Dismissible alert\"></ModusAlert>\n        <ModusAlert message=\"Error alert\" type=\"error\"></ModusAlert>\n        <ModusAlert message=\"Info gray alert\" type=\"info-gray\"></ModusAlert>\n        <ModusAlert message=\"Info gray dark alert\" type=\"info-gray-dark\"></ModusAlert>\n        <ModusAlert message=\"Success alert\" type=\"success\"></ModusAlert>\n        <ModusAlert message=\"Warning alert\" type=\"warning\"></ModusAlert>\n      </div>\n    </>\n  );\n}\n",
    "ModusNumberInputExamples.tsx": "import { ModusNumberInput } from '@trimble-oss/modus-react-components';\n\nexport default function ModusNumberInputExamples() {\n  return (\n    <>\n      <h3>Number Input</h3>\n      <div className=\"grid\">\n        <ModusNumberInput label=\"Number Input Demo 1\" placeholder=\"Placeholder\" required={true}></ModusNumberInput>\n        <ModusNumberInput\n          disabled={true}\n          label=\"Number Input Demo 2\"\n          placeholder=\"Placeholder\"\n          required={true}></ModusNumberInput>\n        <ModusNumberInput helper-text=\"Helper demo\" label=\"Number Input Demo 3\" placeholder=\"Placeholder\"></ModusNumberInput>\n        <ModusNumberInput error-text=\"Error demo\" label=\"Number Input Demo 4\" placeholder=\"Placeholder\"></ModusNumberInput>\n        <ModusNumberInput valid-text=\"Valid demo\" label=\"Number Input Demo 5\" placeholder=\"Placeholder\"></ModusNumberInput>\n        <ModusNumberInput label=\"Text Input Demo 6\" placeholder=\"Placeholder\" size=\"large\" value=\"100\"></ModusNumberInput>\n      </div>\n    </>\n  );\n}\n",
    "ModusMessageExamples.tsx": "import { ModusMessage } from '@trimble-oss/modus-react-components';\n\nexport default function ModusMessageExamples() {\n  return (\n    <>\n      <h3>Message</h3>\n      <ModusMessage type=\"info\">Info message.</ModusMessage>\n      <ModusMessage type=\"question\">Question message?</ModusMessage>\n    </>\n  );\n}\n",
    "ModusFileDropZoneExamples.tsx": "import { ModusFileDropzone } from '@trimble-oss/modus-react-components';\n\nexport default function ModusFileDropzoneExamples() {\n  return (\n    <>\n      <h3>File upload dropzone</h3>\n      <ModusFileDropzone\n        ariaLabel=\"dropzone\"\n        description=\"File dropzone description\"\n        dropzone-Height=\"175px\"\n        dropzone-Width=\"400px\"\n        label=\"Dropzone Label\"\n        multiple={true}\n        onFiles={(event) => {\n          const [files] = event.detail;\n          alert(`Files Upload: ${files.map((f) => f.name).toString()}`);\n        }}></ModusFileDropzone>\n    </>\n  );\n}\n",
    "ModusToastExamples.tsx": "import { ModusToast } from '@trimble-oss/modus-react-components';\n\nexport default function ModusToastExamples() {\n  return (\n    <>\n      <h3>Toasts</h3>\n      <div className=\"grid\">\n        <ModusToast type=\"default\">Default</ModusToast>\n        <ModusToast type=\"danger\">Danger</ModusToast>\n        <ModusToast type=\"dark\">Dark</ModusToast>\n        <ModusToast type=\"primary\">Primary</ModusToast>\n        <ModusToast type=\"secondary\">Secondary</ModusToast>\n        <ModusToast type=\"success\">Success</ModusToast>\n        <ModusToast type=\"warning\">Warning</ModusToast>\n      </div>\n    </>\n  );\n}\n",
    "ModusSwitchExamples.tsx": "import { ModusSwitch } from '@trimble-oss/modus-react-components';\n\nexport default function ModusSwitchExamples() {\n  return (\n    <>\n      <h3>Switch</h3>\n      <div className=\"grid\">\n        <ModusSwitch label=\"Default\"></ModusSwitch>\n        <ModusSwitch checked label=\"Checked\"></ModusSwitch>\n        <ModusSwitch disabled label=\"Disabled\"></ModusSwitch>\n      </div>\n    </>\n  );\n}\n",
    "ModusTooltipExamples.tsx": "import { ModusButton, ModusTooltip } from '@trimble-oss/modus-react-components';\n\nexport default function ModusToolTipExamples() {\n  return (\n    <>\n      <h3>Tooltips</h3>\n      <ModusTooltip text=\"Tooltip text...\" position=\"right\">\n        <ModusButton>Button</ModusButton>\n      </ModusTooltip>\n    </>\n  );\n}\n",
    "ModusSelectExamples.tsx": "import { ModusSelect } from '@trimble-oss/modus-react-components';\n\nexport default function ModusSelectExamples() {\n  return (\n    <>\n      <h3>Select Input</h3>\n      <div className=\"grid\">\n        <ModusSelect\n          id=\"select-demo-1\"\n          label=\"Select Demo 1\"\n          value={{ display: 'Option 1' }}\n          options-display-prop=\"display\"\n          options={[{ display: 'Option 1' }, { display: 'Option 2' }, { display: 'Option 3' }]}></ModusSelect>\n\n        <ModusSelect\n          disabled\n          helper-text=\"Helper demo\"\n          id=\"select-demo-2\"\n          label=\"Select Demo 2\"\n          options-display-prop=\"display\"></ModusSelect>\n\n        <ModusSelect error-text=\"Error demo\" label=\"Select Demo 3\"></ModusSelect>\n\n        <ModusSelect label=\"Select Demo 4\" value=\"Option 1\" valid-text=\"Valid demo\"></ModusSelect>\n      </div>\n    </>\n  );\n}\n",
    "ModusAutoCompleteExamples.tsx": "import { ModusAutocomplete } from '@trimble-oss/modus-react-components';\n\nexport default function ModusAutoCompleteExamples() {\n  return (\n    <>\n      <h3>AutoComplete</h3>\n      <div className=\"grid\">\n        <div style={{ width: '500px' }}>\n          <ModusAutocomplete\n            id=\"default\"\n            options={['Apple', 'Banana', 'Orange']}\n            label=\"Default Autocomplete\"\n            placeholder=\"Search...\"></ModusAutocomplete>\n\n          <ModusAutocomplete\n            id=\"with-option\"\n            options={[\n              { id: '0', value: 'Apple' },\n              { id: '1', value: 'Banana' },\n              { id: '2', value: 'Orange' },\n            ]}\n            label=\"Autocomplete using option model\"\n            placeholder=\"Search...\"></ModusAutocomplete>\n\n          <ModusAutocomplete label=\"Employee Search\" clearable placeholder=\"Search...\">\n            <li data-search-value=\"The Git Guru\" data-id=\"1\" style={{ padding: '8px' }}>\n              <div style={{ fontWeight: 'bold' }}>The Git Guru</div>\n              <div style={{ fontSize: '12px' }}>Lead DevOps Engineer</div>\n            </li>\n            <li data-search-value=\"Bob the Builder\" data-id=\"2\" style={{ padding: '8px' }}>\n              <div style={{ fontWeight: 'bold' }}>Bob the Builder</div>\n              <div style={{ fontSize: '12px' }}>Senior Construction Engineer</div>\n            </li>\n          </ModusAutocomplete>\n        </div>\n      </div>\n    </>\n  );\n}\n",
    "ModusBreadcrumbExamples.tsx": "import { ModusBreadcrumb } from '@trimble-oss/modus-react-components';\n\nexport default function ModusBreadcrumbExamples() {\n  return (\n    <>\n      <h3>Breadcrumbs</h3>\n      <ModusBreadcrumb\n        crumbs={[\n          { id: '1', display: 'Crumb 1' },\n          { id: '2', display: 'Crumb 2' },\n          { id: '3', display: 'Crumb 3' },\n          { id: '4', display: 'Crumb 4' },\n        ]}></ModusBreadcrumb>\n    </>\n  );\n}\n"
  }
}