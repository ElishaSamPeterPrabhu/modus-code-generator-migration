{
  "component_name": "modus-list",
  "version": "v1",
  "props": [],
  "events": [],
  "slots": [],
  "default_values": {},
  "documentation": "\n\n--- modus-list-storybook-docs.mdx ---\n\n# List\n\n---\n\n[Modus List](https://modus.trimble.com/components/lists/) web components are wrappers around native `<modus-list-item>` custom HTML elements. They are referenced using the `<modus-list>` custom HTML element.\n\nThe `<modus-list-item>` utilizes the slot element, allowing you to render your own HTML in the component.\n\n#### Implementation Details\n\n- To support a wide variety of selection methods (single, multi, etc) it is up to the implementation to control which items are selected.\n- If `sub-text` is provided, it shows below the slot dynamically\n\n### Default\n\n<modus-list>\n  <modus-list-item size=\"condensed\">Condensed</modus-list-item>\n  <modus-list-item selected size=\"condensed\">\n    Condensed & Selected\n  </modus-list-item>\n  <modus-list-item>Default</modus-list-item>\n  <modus-list-item selected>Selected</modus-list-item>\n  <modus-list-item disabled>Disabled</modus-list-item>\n  <modus-list-item size=\"large\">Large</modus-list-item>\n  <modus-list-item selected size=\"large\">\n    Large & Selected\n  </modus-list-item>\n  <modus-list-item borderless>Borderless</modus-list-item>\n</modus-list>\n\n```html\n<modus-list>\n  <modus-list-item size=\"condensed\">Condensed</modus-list-item>\n  <modus-list-item selected size=\"condensed\">Condensed & Selected</modus-list-item>\n  <modus-list-item wrap-sub-text=\"true\" sub-text=\"default\">Default</modus-list-item>\n  <modus-list-item selected>Selected</modus-list-item>\n  <modus-list-item disabled>Disabled</modus-list-item>\n  <modus-list-item size=\"large\">Large</modus-list-item>\n  <modus-list-item selected size=\"large\">Large & Selected</modus-list-item>\n  <modus-list-item borderless>Borderless</modus-list-item>\n</modus-list>\n```\n\n### Properties\n\n##### Modus List Item\n\n| Property      | Attribute       | Description                                                                            | Type                                   | Default      |\n| ------------- | --------------- | -------------------------------------------------------------------------------------- | -------------------------------------- | ------------ |\n| `borderless`  | `borderless`    | (optional) Whether the list item has a border or not                                   | `boolean`                              | `undefined`  |\n| `disabled`    | `disabled`      | (optional) Disables the list item                                                      | `boolean`                              | `undefined`  |\n| `iconColor`   | `icon-color`    | (optional) change color of left icon                                                   | `string`                               | `undefined`  |\n| `leftIcon`    | `left-icon`     | (optional) Takes the icon name and shows the icon aligned to the left of the list item | `string`                               | `undefined`  |\n| `selected`    | `selected`      | (optional) The selected state of the list item                                         | `boolean`                              | `undefined`  |\n| `size`        | `size`          | (optional) The size of list item                                                       | `\"condensed\" \\| \"large\" \\| \"standard\"` | `'standard'` |\n| `subText`     | `sub-text`      | (optional) Whether to show Subtext below the Slot content or not                       | `string`                               | `undefined`  |\n| `type`        | `type`          | (optional) The type of list item                                                       | `string`                               | `'standard'` |\n| `wrapSubText` | `wrap-sub-text` | (optional) Whether to wrap the sub text.                                               | `boolean`                              | `true`       |\n\n### DOM Events\n\n##### Modus List Item\n\n| Event       | Description                            | Type               |\n| ----------- | -------------------------------------- | ------------------ |\n| `itemClick` | An event that fires on list item click | `CustomEvent<any>` |\n\n### Methods\n\n##### Modus List Item\n\n| Method name | Description         | Parameter       | Return          |\n| ----------- | ------------------- | --------------- | --------------- |\n| `focusItem` | Focus the list item | `Promise<void>` | `Promise<void>` |\n\n### Shadow Parts\n\n| Part           | Description                                                              |\n| -------------- | ------------------------------------------------------------------------ |\n| `\"list-items\"` | To apply a custom style to the `ul` element in `modus-list`'s shadow DOM |\n",
  "storybook_content": "\n\n--- modus-list.stories.tsx ---\n\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-list-storybook-docs.mdx';\nimport { html } from 'lit-html';\n\nexport default {\n  title: 'Components/List',\n  argTypes: {\n    subText: {\n      description: 'set the sub-text for the list-item',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    wrapSubText: {\n      description: 'whether to wrap the sub text',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    leftIcon: {\n      description: 'set the left icon for the list-item',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    iconColor: {\n      description: 'set the color of the left icon',\n      table: {\n        defaultValue: { summary: `'#6A6976'` },\n        type: { summary: 'string' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      page: docs,\n    },\n    controls: {\n      expanded: true,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=1856-13819&m=dev',\n    },\n  },\n};\n\nconst Template = ({ subText, wrapSubText, leftIcon, iconColor }) => html`\n  <modus-list>\n    <modus-list-item wrap-sub-text=${wrapSubText} sub-text=${subText} left-icon=${leftIcon} icon-color=${iconColor}\n      >Default</modus-list-item\n    >\n    <modus-list-item selected>Selected</modus-list-item>\n    <modus-list-item disabled>Disabled</modus-list-item>\n  </modus-list>\n`;\nexport const Default = Template.bind({});\n\nDefault.args = {\n  subText: 'default',\n  wrapSubText: true,\n  leftIcon: '',\n  iconColor: '#6A6976',\n};\n",
  "storybook": {
    "examples": [
      "<modus-list-item wrap-sub-text=${wrapSubText} sub-text=${subText} left-icon=${leftIcon} icon-color=${iconColor}\n      >Default</modus-list-item\n    >",
      "<modus-list-item selected>Selected</modus-list-item>",
      "<modus-list-item disabled>Disabled</modus-list-item>",
      "\n  <modus-list>\n    <modus-list-item wrap-sub-text=${wrapSubText} sub-text=${subText} left-icon=${leftIcon} icon-color=${iconColor}\n      >Default</modus-list-item\n    >\n    <modus-list-item selected>Selected</modus-list-item>\n    <modus-list-item disabled>Disabled</modus-list-item>\n  </modus-list>\n"
    ],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-list"
}