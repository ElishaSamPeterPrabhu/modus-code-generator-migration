{
  "component_name": "modus-sentiment-scale",
  "version": "v1",
  "props": [],
  "events": [],
  "slots": [],
  "default_values": {},
  "documentation": "\n\n--- modus-sentiment-scale-storybook-docs.mdx ---\n\n# Modus Sentiment Scale\n\n---\n\nThe Modus Sentiment Scale component offers a configurable sentiment scale for users to choose a sentiment from predefined options. This component supports both smiley and thumb icon types and are are referenced using the `<modus-sentiment-scale>` custom HTML element.\n\nUsers can navigate the sentiment scale using the <kbd>Tab</kbd> & <kbd>Shift</kbd>+<kbd>Tab</kbd> keys. Pressing the <kbd>Enter</kbd> key will toggle the selection.\n\n## Usage\n\n### Thumbs\n\n<modus-sentiment-scale type=\"thumbs\"></modus-sentiment-scale>\n\n```html\n<modus-sentiment-scale type=\"thumbs\"></modus-sentiment-scale>\n\n<script>\n  const sentimentScale = document.querySelector('modus-sentiment-scale');\n  sentimentScale.addEventListener('sentimentSelection', (event) => {\n    console.log('Sentiment selected:', event.detail);\n  });\n</script>\n```\n\n### Smileys\n\n<modus-sentiment-scale type=\"smileys\"></modus-sentiment-scale>\n\n```html\n<modus-sentiment-scale type=\"smileys\"></modus-sentiment-scale>\n\n<script>\n  const sentimentScale = document.querySelector('modus-sentiment-scale');\n  sentimentScale.addEventListener('sentimentSelection', (event) => {\n    console.log('Sentiment selected:', event.detail);\n  });\n</script>\n```\n\n### Properties\n\n| Property    | Attribute    | Description                                         | Type                            | Options             | Default | Required |\n| ----------- | ------------ | --------------------------------------------------- | ------------------------------- | ------------------- | ------- | -------- |\n| `ariaLabel` | `aria-label` | (optional) The button's aria-label.                 | `string`                        |                     |         |          |\n| `type`      | `type`       | The type of icons to be displayed.                  | `SMILEY_ICONS` \\| `THUMB_ICONS` | `smileys`, `thumbs` |         | Yes      |\n| `disabled`  | `disabled`   | (optional) Whether the sentiment scale is disabled. | `boolean`                       |                     | `false` |          |\n\n### Types\n\n| Types   | Values                                                                                                                   |\n| ------- | ------------------------------------------------------------------------------------------------------------------------ |\n| smileys | `thumbs-up`, `thumbs-down`                                                                                               |\n| thumbs  | `smiley-satisfied`, `smiley-dissatisfied`, `smiley-somewhat-dissatisfied`, `smiley-neutral`, `smiley-somewhat-satisfied` |\n\n### Events\n\n| Events               | Description                         | Detail                  |\n| -------------------- | ----------------------------------- | ----------------------- |\n| `sentimentSelection` | Fires when a sentiment is selected. | The selected sentiment. |\n",
  "storybook_content": "\n\n--- modus-sentiment-scale.stories.tsx ---\n\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-sentiment-scale-storybook-docs.mdx';\nimport { html } from 'lit-html';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\n//changed\nexport default {\n  title: 'Components/Sentiment Scale',\n  argTypes: {\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The Sentiment Scale's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    iconsType: {\n      name: 'type',\n      options: ['smileys', 'thumbs'],\n      type: 'select',\n    },\n    disabled: {\n      description: 'Whether the sentiment-scale is disabled',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'boolean' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      page: docs,\n    },\n    actions: {\n      handles: ['sentimentSelection'],\n    },\n    controls: {\n      expanded: true,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=15854-33980&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\n\nconst Template = ({ ariaLabel, iconsType, disabled }) => html`\n  <modus-sentiment-scale aria-label=${ariaLabel} type=\"${iconsType}\" ?disabled=\"${disabled}\"></modus-sentiment-scale>\n`;\nexport const Default = Template.bind({});\nDefault.args = {\n  ariaLabel: '',\n  iconsType: 'smileys',\n  disabled: false,\n};\n",
  "storybook": {
    "examples": [
      "<modus-sentiment-scale aria-label=${ariaLabel} type=\"${iconsType}\" ?disabled=\"${disabled}\"></modus-sentiment-scale>",
      "\n  <modus-sentiment-scale aria-label=${ariaLabel} type=\"${iconsType}\" ?disabled=\"${disabled}\"></modus-sentiment-scale>\n"
    ],
    "variants": [],
    "prop_usage": {
      "type": [
        "${iconsType}"
      ],
      "disabled": [
        "${disabled}"
      ]
    }
  },
  "tag_name": "modus-sentiment-scale"
}