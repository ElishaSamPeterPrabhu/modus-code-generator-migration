{
  "component_name": "modus-accordion-item",
  "version": "v1",
  "props": [
    {
      "name": "disabled",
      "description": "/** (optional) Disables the accordion item, locks expand/collapse. */",
      "type": "boolean"
    },
    {
      "name": "expandButtonType",
      "description": "/** (optional) Disables the accordion item, locks expand/collapse. */",
      "type": "'standardArrow' | 'circleArrow'"
    },
    {
      "name": "expanded",
      "description": "/** (optional) Disables the accordion item, locks expand/collapse. */",
      "type": "boolean"
    },
    {
      "name": "headerText",
      "description": "/** (optional) Disables the accordion item, locks expand/collapse. */",
      "type": "string"
    },
    {
      "name": "icon",
      "description": "/** (optional) Disables the accordion item, locks expand/collapse. */",
      "type": "string"
    },
    {
      "name": "supportingLabel",
      "description": "/** (optional) Disables the accordion item, locks expand/collapse. */",
      "type": "string"
    },
    {
      "name": "size",
      "description": "/** (optional) Disables the accordion item, locks expand/collapse. */",
      "type": "'condensed' | 'standard'"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "disabled": "{this.disabled ? 'true' : undefined}\n        aria-expanded={this.expanded ? 'true' : undefined}\n        class=\"accordion-item\">\n        <div\n          class={headerClass}\n          role=\"button\"\n          aria-expanded={this.expanded ? 'true' : 'false'}\n          aria-controls={this.expandedContentId}\n          onClick={() => this.handleHeaderClick()}\n          onKeyDown={(event) => this.handleKeydown(event)}\n          tabIndex={this.disabled ? -1 : 0}>\n          {this.icon ? this.renderIcon() : null}\n          <div class=\"label-container\">\n            <span class=\"title\">{this.headerText}</span>\n            {this.supportingLabel && <span class=\"supporting-label\">{this.supportingLabel}</span>}\n          </div>\n          {\n            <div\n              class={`chevron-container ${this.expanded ? 'reverse' : ''} `}\n              ref={(el) => (this.chevronContainerRef = el)}>\n              {this.expandButtonType == 'circleArrow' ? (\n                <IconExpandMoreCircle size={expandIconSize}></IconExpandMoreCircle>\n              ) : (\n                <IconExpandMore size={expandIconSize}></IconExpandMore>\n              )}\n            </div>\n          }\n        </div>\n        <div id={this.expandedContentId} class={bodyClass} ref={(el) => (this.accordionBodyRef = el)}>\n          <div class=\"body-content\">\n            <slot />\n          </div>\n        </div>\n      </div>\n    )",
    "expandButtonType": "'standardArrow'",
    "expanded": "true",
    "icon": "{this.icon} size={iconSize}></ModusIconMap>\n      </span>\n    )",
    "size": "'standard'"
  },
  "documentation": "",
  "storybook_content": "",
  "storybook": {
    "examples": [],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-accordion-item"
}