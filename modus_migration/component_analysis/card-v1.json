{
  "component_name": "modus-card",
  "version": "v1",
  "props": [
    {
      "name": "ariaLabel",
      "description": "/** (optional) The card's aria-label. */",
      "type": "string | null"
    },
    {
      "name": "height",
      "description": "/** (optional) The card's aria-label. */",
      "type": "this.height,\n          width: this.width,\n          'border-radius': this.borderRadius,\n        }}>\n        <slot />\n      </article>\n    )"
    },
    {
      "name": "width",
      "description": "/** (optional) The card's aria-label. */",
      "type": "this.width,\n          'border-radius': this.borderRadius,\n        }}>\n        <slot />\n      </article>\n    )"
    },
    {
      "name": "borderRadius",
      "description": "/** (optional) The card's aria-label. */",
      "type": "string"
    },
    {
      "name": "showCardBorder",
      "description": "/** (optional) The card's aria-label. */",
      "type": "'card-border' : ''}  `}\n        aria-label"
    },
    {
      "name": "showShadowOnHover",
      "description": "/** (optional) The card's aria-label. */",
      "type": "'shadow' : ''} ${this.showCardBorder ? 'card-border' : ''}  `}\n        aria-label"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "height": "'269px'",
    "width": "'240px'",
    "showCardBorder": "true",
    "showShadowOnHover": "true"
  },
  "documentation": "\n\n--- modus-card-storybook-docs.mdx ---\n\nimport { Story } from '@storybook/blocks';\nimport * as Card from './modus-card.stories.tsx';\n\n# Card\n\n---\n\n[Modus Card](https://modus.trimble.com/components/web/cards/) web components are wrappers around native `<article>` elements. They are referenced using the `<modus-card>` custom HTML element.\n\nThis component utilizes the slot element, allowing you to render your own HTML in the card. You can change the background color using the CSS variable `--modus-card-bg`.\n\n### Default\n\n<Story of={Card.Default} height={'150px'} />\n\n```html\n<modus-card height=\"270px\" width=\"250px\" show-card-border=\"true\" show-shadow-on-hover=\"true\">\n  <!-- Render anything here -->\n  <div style=\"padding:10px\">\n    <h4>Card title</h4>\n    <h5>Card subtitle</h5>\n    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    <modus-button color=\"primary\">Go somewhere</modus-button>\n  </div>\n</modus-card>\n```\n\n### Properties\n\n| Property            | Attribute              | Description                                                                            | Type      | Default     |\n| ------------------- | ---------------------- | -------------------------------------------------------------------------------------- | --------- | ----------- |\n| `ariaLabel`         | `aria-label`           | (optional) The card's aria-label.                                                      | `string`  | `undefined` |\n| `borderRadius`      | `border-radius`        | (optional) The border radius of the card.                                              | `string`  | `4px`       |\n| `height`            | `height`               | (optional) The height of the card.                                                     | `string`  | `269px`     |\n| `showCardBorder`    | `show-card-border`     | (optional) A flag that controls the display of border.                                 | `boolean` | `true`      |\n| `showShadowOnHover` | `show-shadow-on-hover` | (optional) A flag that controls the display of shadow box when the element is hovered. | `boolean` | `true`      |\n| `width`             | `width`                | (optional) The width of the card.                                                      | `string`  | `240px`     |\n\n---\n\n### Accessibility\n\n- Card gets an `aria-label` provided by the `aria-label` property input.\n",
  "storybook_content": "\n\n--- modus-card.stories.tsx ---\n\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-card-storybook-docs.mdx';\nimport { html } from 'lit-html';\n\nexport default {\n  title: 'Components/Card',\n  argTypes: {\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The card's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    height: {\n      height: 'The height of the card',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'string' },\n      },\n    },\n    width: {\n      description: 'The width of the card',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'string' },\n      },\n    },\n    borderRadius: {\n      description: 'The border radius of the card',\n      table: {\n        defaultValue: { summary: false },\n        type: { summary: 'string' },\n      },\n    },\n    showCardBorder: {\n      description: 'A flag that controls the display of border',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    showShadowOnHover: {\n      description: 'A flag that controls the display of shadow box when the element is hovered',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      page: docs,\n    },\n    controls: { expanded: true, sort: 'requiredFirst' },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=1850-15217&m=dev',\n    },\n  },\n};\n\nconst Template = ({ ariaLabel, height, width, borderRadius, showCardBorder, showShadowOnHover }) => html`\n  <modus-card\n    aria-label=${ariaLabel}\n    height=${height}\n    width=${width}\n    border-radius=${borderRadius}\n    show-card-border=${showCardBorder}\n    show-shadow-on-hover=${showShadowOnHover}>\n    <!-- Render anything here -->\n    <div style=\"padding:10px\">\n      <h4>Card title</h4>\n      <h5>Card subtitle</h5>\n      <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n      <modus-button color=\"primary\">Go somewhere</modus-button>\n    </div>\n  </modus-card>\n`;\nexport const Default = Template.bind({});\nDefault.args = {\n  ariaLabel: '',\n  height: '270px',\n  width: '250px',\n  borderRadius: '4px',\n  showCardBorder: true,\n  showShadowOnHover: true,\n};\n",
  "storybook": {
    "examples": [
      "<modus-button color=\"primary\">Go somewhere</modus-button>",
      "\n  <modus-card\n    aria-label=${ariaLabel}\n    height=${height}\n    width=${width}\n    border-radius=${borderRadius}\n    show-card-border=${showCardBorder}\n    show-shadow-on-hover=${showShadowOnHover}>\n    <!-- Render anything here -->\n    <div style=\"padding:10px\">\n      <h4>Card title</h4>\n      <h5>Card subtitle</h5>\n      <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n      <modus-button color=\"primary\">Go somewhere</modus-button>\n    </div>\n  </modus-card>\n"
    ],
    "variants": [],
    "prop_usage": {
      "style": [
        "padding:10px"
      ],
      "color": [
        "primary"
      ]
    }
  },
  "tag_name": "modus-card"
}