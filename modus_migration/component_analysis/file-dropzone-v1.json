{
  "component_name": "modus-file-dropzone",
  "version": "v1",
  "props": [
    {
      "name": "acceptFileTypes",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "string"
    },
    {
      "name": "ariaLabel",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "string | null"
    },
    {
      "name": "description",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "string"
    },
    {
      "name": "dropzoneHeight",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "string"
    },
    {
      "name": "dropzoneWidth",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "string"
    },
    {
      "name": "fileDraggedOverInstructions",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "this.instructions"
    },
    {
      "name": "includeStateIcon",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": ""
    },
    {
      "name": "label",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "string"
    },
    {
      "name": "instructions",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "string | undefined"
    },
    {
      "name": "maxFileCount",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "number"
    },
    {
      "name": "maxFileNameLength",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "number"
    },
    {
      "name": "maxTotalFileSizeBytes",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "number"
    },
    {
      "name": "multiple",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": ""
    },
    {
      "name": "disabled",
      "description": "/** (optional) The dropzone's accepted file types */",
      "type": "boolean"
    }
  ],
  "events": [],
  "slots": [],
  "default_values": {
    "fileDraggedOverInstructions": "'Drag files here.'",
    "includeStateIcon": "true",
    "label": "{this.ariaLabel} role=\"button\" aria-disabled={this.disabled ? 'true' : undefined}>\n        <div class=\"modus-file-dropzone\">\n          <input\n            onChange={this.onFileChange}\n            multiple={this.multiple}\n            ref={(el) => (this.fileInput = el as HTMLInputElement)}\n            type=\"file\"\n            disabled={this.disabled}\n            accept={this.acceptFileTypes}\n          />\n          <div class=\"header\">\n            <label>{this.label}</label>\n            <span>{this.description}</span>\n          </div>\n          <div\n            class={{\n              dropzone: true,\n              error: !!this.error,\n              highlight: this.fileDraggedOver,\n              disabled: this.disabled,\n              browse: !this.error && !this.fileDraggedOver,\n            }}\n            onDragLeave={(e) => this.onDragLeave(e)}\n            onDragOver={(e) => this.onDragOver(e)}\n            onDrop={(e) => this.onDrop(e)}\n            onClick={this.error ? undefined : this.openBrowse}\n            style={{ height: this.dropzoneHeight, width: this.dropzoneWidth }}\n            tabIndex={0}>\n            {this.includeStateIcon && (this.error ? <IconCancel size={'36'} /> : <IconUploadCloud size={'36'} />)}\n            {instructions}\n            {this.error && (\n              <div class=\"error-messages\" role=\"alert\">\n                {this.errorMessageTop && <span>{this.errorMessageTop}</span>}\n                {this.errorMessageBottom && <span>{this.errorMessageBottom}</span>}\n                <modus-button button-style=\"outline\" color=\"secondary\" onClick={this.reset}>\n                  Reset\n                </modus-button>\n              </div>\n            )}\n          </div>\n        </div>\n      </Host>\n    )",
    "instructions": "'Drag files here or browse to upload.'",
    "multiple": "true",
    "disabled": "{this.disabled ? 'true' : undefined}>\n        <div class=\"modus-file-dropzone\">\n          <input\n            onChange={this.onFileChange}\n            multiple={this.multiple}\n            ref={(el) => (this.fileInput = el as HTMLInputElement)}\n            type=\"file\"\n            disabled={this.disabled}\n            accept={this.acceptFileTypes}\n          />\n          <div class=\"header\">\n            <label>{this.label}</label>\n            <span>{this.description}</span>\n          </div>\n          <div\n            class={{\n              dropzone: true,\n              error: !!this.error,\n              highlight: this.fileDraggedOver,\n              disabled: this.disabled,\n              browse: !this.error && !this.fileDraggedOver,\n            }}\n            onDragLeave={(e) => this.onDragLeave(e)}\n            onDragOver={(e) => this.onDragOver(e)}\n            onDrop={(e) => this.onDrop(e)}\n            onClick={this.error ? undefined : this.openBrowse}\n            style={{ height: this.dropzoneHeight, width: this.dropzoneWidth }}\n            tabIndex={0}>\n            {this.includeStateIcon && (this.error ? <IconCancel size={'36'} /> : <IconUploadCloud size={'36'} />)}\n            {instructions}\n            {this.error && (\n              <div class=\"error-messages\" role=\"alert\">\n                {this.errorMessageTop && <span>{this.errorMessageTop}</span>}\n                {this.errorMessageBottom && <span>{this.errorMessageBottom}</span>}\n                <modus-button button-style=\"outline\" color=\"secondary\" onClick={this.reset}>\n                  Reset\n                </modus-button>\n              </div>\n            )}\n          </div>\n        </div>\n      </Host>\n    )"
  },
  "documentation": "\n\n--- modus-file-dropzone-storybook-docs.mdx ---\n\nimport { Anchor } from '@storybook/addon-docs';\n\n# File Dropzone\n\n---\n\nThe [Modus File Dropzone](https://modus.trimble.com/components/file-upload-dropzone/) web component allows users to upload content from their computer or device into the application by dragging a file (or files) into a target zone.\nThey are referenced using the `<modus-file-dropzone>` tag.\n\n#### Implementation Details\n\n- The File Dropzone component provides the consumer a styled file picker. The dropzone does not provide functionality outside of selecting and holding files. This allows the consumer to use the component in a variety of scenarios, displaying and adding files how they'd like.\n- There are multiple component methods available: `addFile`, `getError`, `getFiles`, and `removeFile`. Since the component does not provide interaction outside of file selecting, the consumer can use these to control the dropzone in code.\n- The `files` event fires when a file has been added or removed. It contains the file(s) along with the current error value. These values can be accessed by array deconstruction respectively on the `event.detail`.\n  - If the error value returned is `null`, there is not an error. The possible error values are: `'maxFileCount'`, `'maxFileNameLength'`, and `'maxTotalFileSize'`.\n- When error state is triggered reset button will be displayed to clear the error state.\n  - The reset button will clear the error state and remove all files from the dropzone.\n- The `accept-file-types` property allows you to define the file types that are allowed to be uploaded in the dropzone.\n  - You can specify file types using common MIME types (e.g., `image/*` for any image). You can also specify multiple types by separating them with commas.\n  - For detailed information on valid file type specifiers, see the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept#unique_file_type_specifiers).\n\n<Anchor storyId=\"components-file-dropzone--default\" />\n\n### Default\n\n<modus-file-dropzone\n  aria-Label=\"dropzone\"\n  description=\"File dropzone description\"\n  dropzone-Height=\"175px\"\n  dropzone-Width=\"400px\"\n  label=\"Dropzone Label\"\n  multiple=\"false\">\n</modus-file-dropzone>\n\n```html\n<modus-file-dropzone\n  aria-Label=\"dropzone\"\n  description=\"File dropzone description\"\n  dropzone-Height=\"175px\"\n  dropzone-Width=\"400px\"\n  label=\"Dropzone Label\"\n  multiple=\"false\">\n</modus-file-dropzone>\n\n<script>\n  document.querySelector('modus-file-dropzone').addEventListener('files', (event) => {\n    const [files, error] = event.detail;\n    console.log(files);\n    console.log(error);\n  });\n</script>\n```\n\n## Properties\n\n| Property                      | Attribute                        | Description                                                                   | Type      | Default                                  |\n| ----------------------------- | -------------------------------- | ----------------------------------------------------------------------------- | --------- | ---------------------------------------- |\n| `acceptfiletypes`             | `accept-file-types`              | (optional) The dropzone's accepted file types.                                | `string`  | `undefined`                              |\n| `ariaLabel`                   | `aria-label`                     | (optional) The dropzone's aria-label.                                         | `string`  | `undefined`                              |\n| `disabled`                    | `disabled`                       | (optional) Disables the dropzone.                                             | `boolean` | `undefined`                              |\n| `description`                 | `description`                    | (optional) The dropzone's description text.                                   | `string`  | `undefined`                              |\n| `dropzoneHeight`              | `dropzone-height`                | (optional) The dropzone's height.                                             | `string`  | `undefined`                              |\n| `dropzoneWidth`               | `dropzone-width`                 | (optional) The dropzone's width.                                              | `string`  | `undefined`                              |\n| `fileDraggedOverInstructions` | `file-dragged-over-instructions` | (optional) The dropzone's instruction text when a file is being dragged over. | `string`  | `'Drag files here.'`                     |\n| `includeStateIcon`            | `include-state-icon`             | (optional) Whether to include the upload icon.                                | `boolean` | `true`                                   |\n| `instructions`                | `instructions`                   | (optional) The dropzone's instruction text.                                   | `string`  | `'Drag files here or browse to upload.'` |\n| `label`                       | `label`                          | (optional) The dropzone's label text.                                         | `string`  | `undefined`                              |\n| `maxFileCount`                | `max-file-count`                 | (optional) The dropzone's max file count.                                     | `number`  | `undefined`                              |\n| `maxFileNameLength`           | `max-file-name-length`           | (optional) The dropzone's max file name length of each file.                  | `number`  | `undefined`                              |\n| `maxTotalFileSizeBytes`       | `max-total-file-size-bytes`      | (optional) The dropzone's max total file size.                                | `number`  | `undefined`                              |\n| `multiple`                    | `multiple`                       | (optional) Whether multiple files can be uploaded.                            | `boolean` | `true`                                   |\n\n## Events\n\n| Event   | Description                                                                                                                          | Type                            |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------- |\n| `files` | An event that fires when files have been added or removed, regardless of whether they're valid. Returns the files and current error. | `CustomEvent<[File[], string]>` |\n\n## Methods\n\n| Method name  | Description                     | Parameter          | Return                  |\n| ------------ | ------------------------------- | ------------------ | ----------------------- |\n| `addFile`    | Add a file to the dropzone      | `file: File`       | `Promise<void>`         |\n| `getError`   | Get the dropzone's error        |                    | `Promise<string\\|null>` |\n| `getFiles`   | Get the dropzone's files        |                    | `Promise<File[]>`       |\n| `removeFile` | Remove a file from the dropzone | `fileName: string` | `Promise<void>`         |\n\n### Accessibility\n\n- File Dropzone has `role` of `button`.\n- When File Dropzone is focused, clicking <kbd>Enter</kbd> opens the file picker.\n",
  "storybook_content": "\n\n--- modus-file-dropzone.stories.tsx ---\n\nimport { html } from 'lit-html';\n// @ts-ignore: JSX/MDX with Stencil\nimport docs from './modus-file-dropzone-storybook-docs.mdx';\nimport { withActions } from '@storybook/addon-actions/decorator';\n\nexport default {\n  title: 'Components/File Dropzone',\n  argTypes: {\n    acceptFileTypes: {\n      name: 'accept-file-types',\n      description: \"The dropzone's accepted file types\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    ariaLabel: {\n      name: 'aria-label',\n      description: \"The dropzone's aria-label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    disabled: {\n      name: 'disabled',\n      description: 'Whether the dropzone is disabled',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    description: {\n      name: 'description',\n      description: \"The dropzone's description\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    dropzoneHeight: {\n      name: 'dropzone-height',\n      description: \"The dropzone's height\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    dropzoneWidth: {\n      name: 'dropzone-width',\n      description: \"The dropzone's width\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    fileDraggedOverInstructions: {\n      name: 'file-dragged-over-instructions',\n      description: \"The dropzone's instruction text when a file is being dragged over.'\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    includeStateIcon: {\n      name: 'include-state-icon',\n      description: 'Whether to include the state icon',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    instructions: {\n      name: 'instructions',\n      description: \"The dropzone's instruction text\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    label: {\n      name: 'label',\n      description: \"The dropzone's label\",\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    maxFileCount: {\n      name: 'max-file-count',\n      description: \"The dropzone's max file count\",\n      table: {\n        type: { summary: 'number' },\n      },\n    },\n    maxFileNameLength: {\n      name: 'max-file-name-length',\n      description: \"The dropzone's max file name length\",\n      table: {\n        type: { summary: 'number' },\n      },\n    },\n    maxTotalFileSizeBytes: {\n      name: 'max-total-file-size-bytes',\n      description: \"The dropzone's max total file size bytes\",\n      table: {\n        type: { summary: 'number' },\n      },\n    },\n    multiple: {\n      name: 'multiple',\n      description: 'Whether multiple files are allowed',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n  },\n  parameters: {\n    controls: { expanded: true, sort: 'alpha' },\n    actions: {\n      handles: ['buttonClick'],\n    },\n    docs: {\n      page: docs,\n    },\n    options: {\n      isToolshown: true,\n    },\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/wyfVJUHWRMkeCfdB38HFEE/Modus---Web?node-id=5762-22364&m=dev',\n    },\n  },\n  decorators: [withActions],\n};\n\nexport const Default = ({\n  acceptFileTypes,\n  ariaLabel,\n  disabled,\n  description,\n  dropzoneHeight,\n  dropzoneWidth,\n  fileDraggedOverInstructions,\n  includeStateIcon,\n  instructions,\n  label,\n  maxFileCount,\n  maxFileNameLength,\n  maxTotalFileSizeBytes,\n  multiple,\n}) => html`\n  <modus-file-dropzone\n    accept-file-types=${acceptFileTypes}\n    aria-label=${ariaLabel}\n    ?disabled=${disabled}\n    description=${description}\n    dropzone-height=${dropzoneHeight}\n    dropzone-width=${dropzoneWidth}\n    file-dragged-over-instructions=${fileDraggedOverInstructions}\n    include-state-icon=${includeStateIcon}\n    instructions=${instructions}\n    label=${label}\n    max-file-count=${maxFileCount}\n    max-file-name-length=${maxFileNameLength}\n    max-total-file-size-bytes=${maxTotalFileSizeBytes}\n    multiple=${multiple}>\n  </modus-file-dropzone>\n`;\nDefault.args = {\n  acceptFileTypes: '.doc,.docx',\n  ariaLabel: 'dropzone',\n  disabled: false,\n  description: 'File dropzone description',\n  dropzoneHeight: '200px',\n  dropzoneWidth: '500px',\n  fileDraggedOverInstructions: 'Drag files here.',\n  includeStateIcon: true,\n  instructions: 'Drag files here or browse to upload.',\n  label: 'Dropzone Label',\n  maxFileCount: '4',\n  maxFileNameLength: '20',\n  maxTotalFileSizeBytes: '1000000',\n  multiple: true,\n};\n",
  "storybook": {
    "examples": [
      "<modus-file-dropzone\n    accept-file-types=${acceptFileTypes}\n    aria-label=${ariaLabel}\n    ?disabled=${disabled}\n    description=${description}\n    dropzone-height=${dropzoneHeight}\n    dropzone-width=${dropzoneWidth}\n    file-dragged-over-instructions=${fileDraggedOverInstructions}\n    include-state-icon=${includeStateIcon}\n    instructions=${instructions}\n    label=${label}\n    max-file-count=${maxFileCount}\n    max-file-name-length=${maxFileNameLength}\n    max-total-file-size-bytes=${maxTotalFileSizeBytes}\n    multiple=${multiple}>\n  </modus-file-dropzone>",
      "\n  <modus-file-dropzone\n    accept-file-types=${acceptFileTypes}\n    aria-label=${ariaLabel}\n    ?disabled=${disabled}\n    description=${description}\n    dropzone-height=${dropzoneHeight}\n    dropzone-width=${dropzoneWidth}\n    file-dragged-over-instructions=${fileDraggedOverInstructions}\n    include-state-icon=${includeStateIcon}\n    instructions=${instructions}\n    label=${label}\n    max-file-count=${maxFileCount}\n    max-file-name-length=${maxFileNameLength}\n    max-total-file-size-bytes=${maxTotalFileSizeBytes}\n    multiple=${multiple}>\n  </modus-file-dropzone>\n"
    ],
    "variants": [],
    "prop_usage": {}
  },
  "tag_name": "modus-file-dropzone"
}