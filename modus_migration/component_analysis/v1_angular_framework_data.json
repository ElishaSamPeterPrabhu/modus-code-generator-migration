{
  "documentation": "import { Meta } from '@storybook/blocks';\n\n<Meta\n  title=\"Framework Integrations/Angular\"\n  parameters={{\n    previewTabs: {\n      canvas: {\n        hidden: true,\n      },\n    },\n    options: {\n      isToolshown: false,\n    },\n    viewMode: 'docs',\n  }}\n/>\n\n# Modus Angular Components\n\nWe highly recommend to use the [Modus Angular Components](https://www.npmjs.com/package/@trimble-oss/modus-angular-components) library for Angular based projects. The components are programmatically generated using the [Stencil](https://stenciljs.com/) [Angular Framework Integration](https://stenciljs.com/docs/angular). Please check out the [instructions](https://www.npmjs.com/package/@trimble-oss/modus-angular-components) on how to use the library.\n\n## Modus Web Components in a Angular project\n\nOptionally you can choose to consume the [Modus Web Components](https://www.npmjs.com/package/@trimble-oss/modus-web-components) directly in your Angular application instead of [Modus Angular Components](https://www.npmjs.com/package/@trimble-oss/modus-angular-components) by following the below steps.\n\nAngular has built-in support for web components and custom elements. Working with web components in Angular is straightforward, they work with the same template API we are familiar with.\n\n### Installation\n\nIf you haven't viewed the [Getting Started](/docs/introduction-getting-started--page) page yet, go ahead and give that a look.\nIn an Angular application, import and execute `defineCustomElements()` in your application's main file.\n\nIf you're unsure which is your main file, you can find out in the application's `angular.json` file, under `projects` > `architect` > `build` > `options` > `main`.\n\n### Custom Elements Schema\n\nIn your `app.module.ts` file, you need to tell Angular that you will be working with custom element schemas so that it does not throw errors when unknown element names are provided in the markup.\n\nImport `CUSTOM_ELEMENTS_SCHEMA` and add it to your `@NgModule`'s schemas:\n\n```typescript\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\n\n@NgModule({\n  ...\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n  ...\n})\n```\n\n### Wrapping Components\n\nWhen using Modus Web Components directly, it is recommended to wrap it in corresponding Angular components within your application.\nThis will abstract away from the library dependency, allowing more flexibility for you and your application in the future.\nEach part of the component is able to be abstracted, leaving you with an Angular-native component.\n\nNotice Angular allows `[]` and `()` markup syntax for the web component's inputs and outputs, respectively.\n\nA wrapped Modus Button will look like this:\n\n```javascript\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'button-component',\n  template: `\n    <modus-button\n      [buttonStyle]=\"buttonStyle\"\n      [color]=\"color\"\n      [disabled]=\"disabled\"\n      [size]=\"size\"\n      (buttonClick)=\"onButtonClick.emit()\">\n      <ng-content></ng-content>\n    </modus-button>\n  `,\n})\nexport class ButtonComponent {\n  @Input() buttonStyle: 'borderless' | 'fill' | 'outline' = 'fill';\n  @Input() color: 'danger' | 'default' | 'primary' | 'secondary' | 'warning' =\n    'default';\n  @Input() disabled: boolean;\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Output() onButtonClick = new EventEmitter();\n}\n```\n\n### Reactive Forms\n\nWorking with a web component's inputs/outputs works great but these components do not integrate with Angular's reactive forms quite as easily.\nSince web components do not know about Angular's form APIs, we must extend form-compatible components' behavior with simple directives.\nThese directives are applied to the web component selectors, giving the components Angular form functionality.\n\nLet's take a look at a directive implementation for a Modus Select's form functionality.\n\n#### Wrapper\n\nYou'll notice the `modus-select` in the markup is taking extra inputs, such as `formControl` and `optionsDisplayProp`, these inputs are provided by the directive below.\nHere is what our wrapper looks like:\n\n```typescript\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'select-component',\n  template: `\n    <modus-select\n      #select\n      [disabled]=\"disabled\"\n      [errorText]=\"errorText\"\n      [formControl]=\"formControl\"\n      [helperText]=\"helperText\"\n      [label]=\"label\"\n      [options]=\"options\"\n      [optionsDisplayProp]=\"optionsDisplayProp\"\n      [required]=\"required\"\n      [selectValue]=\"value\"\n      [size]=\"size\"\n      [validText]=\"validText\"\n      (valueChange)=\"onSelectValueChange.emit(select.value)\">\n    </modus-select>\n  `,\n})\nexport class SelectComponent {\n  @Input() disabled: boolean;\n  @Input() errorText: string;\n  @Input() formControl: FormControl;\n  @Input() helperText: string;\n  @Input() label: string;\n  @Input() options: unknown[] = [];\n  @Input() optionsDisplayProp: string;\n  @Input() required: boolean;\n  @Input() size: 'medium' | 'large' = 'medium';\n  @Input() validText: string;\n  @Input() value: unknown;\n\n  @Output() onSelectValueChange = new EventEmitter<unknown>();\n}\n```\n\n#### Directive\n\nMoving onto the directive, there are a few things to keep in mind.\n\n- The directive's `selector` is set to the web component's tag, not the wrapper's.\n- Implementing the [ControlValueAccessor](https://angular.io/api/forms/ControlValueAccessor) interface helps Angular understand when the form control has been updated or changed.\n  - When the value is set, `onChange()` notifies that the control has been updated.\n  - Calling `onTouched()` lets Angular know the component has been touched, which is needed for form validation.\n- The `get value()`, and `set value()` are used by Angular's form control.\n- Using the `@HostListener` decorator lets you listen to events from the web component, and execute appropriate logic.\n\nHere is what our directive looks like:\n\n```typescript\nimport { Directive, forwardRef, ElementRef, HostListener, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Directive({\n  selector: 'modus-select',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ModusSelectDirective),\n      multi: true,\n    },\n  ],\n})\nexport class ModusSelectDirective implements ControlValueAccessor, OnInit {\n  @Input() disabled: boolean;\n  @Input() errorText: string;\n  @Input() formControl: FormControl;\n  @Input() helperText: string;\n  @Input() label: string;\n  @Input() options: unknown[];\n  @Input() optionsDisplayProp: string;\n  @Input() required: boolean;\n  @Input() selectValue: unknown;\n  @Input() size: 'medium' | 'large';\n  @Input() validText: string;\n\n  @Output() valueChange = new EventEmitter<string>();\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  private _value: string;\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (value !== this._value) {\n      this._value = value;\n      this.onChange(this._value);\n      this.onTouched();\n      this.elementRef.nativeElement.value = value;\n    }\n  }\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit(): void {\n    const modusSelect = this.elementRef.nativeElement as HTMLModusSelectElement;\n    modusSelect.disabled = this.disabled;\n    modusSelect.errorText = this.errorText;\n    modusSelect.helperText = this.helperText;\n    modusSelect.label = this.label;\n    modusSelect.options = this.options;\n    modusSelect.optionsDisplayProp = this.optionsDisplayProp;\n    modusSelect.required = this.required;\n    modusSelect.size = this.size;\n    modusSelect.validText = this.validText;\n    modusSelect.value = this.selectValue;\n\n    if (!this.formControl) {\n      this.formControl = new FormControl(null);\n    }\n  }\n\n  @HostListener('valueChange', ['$event.detail'])\n  listenForValueChange(value: string): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  writeValue(value: string): void {\n    if (value) {\n      this.value = value;\n    }\n  }\n}\n```\n\nNow adding the Modus Select as a form control is as easy as:\n\n```html\n<select-component\n  [formControl]=\"$any(form).controls['select1']\"\n  [label]=\"'Select Form Demo'\"\n  [options]=\"options\"\n  [optionsDisplayProp]=\"'display'\">\n</select-component>\n```\n",
  "examples": {
    "modus-pagination-examples": {
      "modus-pagination-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusPaginationExamplesComponent } from './modus-pagination-examples.component';\n\ndescribe('ModusPaginationExamplesComponent', () => {\n  let component: ModusPaginationExamplesComponent;\n  let fixture: ComponentFixture<ModusPaginationExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusPaginationExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusPaginationExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-pagination-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-pagination-examples',\n  templateUrl: './modus-pagination-examples.component.html',\n})\nexport class ModusPaginationExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-pagination-examples.component.html": "\n<h3>Pagination</h3>\n<div class=\"flex-column\">\n  <modus-pagination\n  active-page=\"8\"\n  max-page=\"32\"\n  min-page=\"1\"\n  size=\"medium\"></modus-pagination>\n<modus-pagination\n  active-page=\"8\"\n  max-page=\"32\"\n  min-page=\"1\"\n  size=\"large\"></modus-pagination>\n<modus-pagination\n  active-page=\"8\"\n  max-page=\"32\"\n  min-page=\"1\"\n  size=\"small\"></modus-pagination>\n</div>\n"
    },
    "modus-progress-bar-examples": {
      "modus-progress-bar-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-progress-bar-examples',\n  templateUrl: './modus-progress-bar-examples.component.html',\n})\nexport class ModusProgressBarExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-progress-bar-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusProgressBarExamplesComponent } from './modus-progress-bar-examples.component';\n\ndescribe('ModusProgressBarExamplesComponent', () => {\n  let component: ModusProgressBarExamplesComponent;\n  let fixture: ComponentFixture<ModusProgressBarExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusProgressBarExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusProgressBarExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-progress-bar-examples.component.html": "<h3>Progress Bar</h3>\n<div class=\"flex-column\">\n  <modus-progress-bar\n  value=\"3\"\n  max-value=\"4\"\n  min-value=\"0\"\n  text=\"75%\"></modus-progress-bar>\n<modus-progress-bar\n  value=\"3\"\n  max-value=\"4\"\n  min-value=\"0\"\n  size=\"small\"></modus-progress-bar>\n<modus-progress-bar\n  value=\"3\"\n  max-value=\"4\"\n  min-value=\"0\"\n  size=\"compact\"></modus-progress-bar>\n</div>\n"
    },
    "modus-slider-examples": {
      "modus-slider-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusSliderExamplesComponent } from './modus-slider-examples.component';\n\ndescribe('ModusSliderExamplesComponent', () => {\n  let component: ModusSliderExamplesComponent;\n  let fixture: ComponentFixture<ModusSliderExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusSliderExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusSliderExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-slider-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-slider-examples',\n  template: `\n    <h3>Slider</h3>\n    <div style=\"display: flex; flex-direction:column; gap:20px; \">\n      <modus-slider label=\"Slider\"></modus-slider>\n      <modus-slider disabled label=\"Disabled slider\"></modus-slider>\n    </div>\n  `,\n})\nexport class ModusSliderExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-message-examples": {
      "modus-message-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusMessageExamplesComponent } from './modus-message-examples.component';\n\ndescribe('ModusMessageExamplesComponent', () => {\n  let component: ModusMessageExamplesComponent;\n  let fixture: ComponentFixture<ModusMessageExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusMessageExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusMessageExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-message-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-message-examples',\n  template: `\n    <h3>Messages</h3>\n    <div class=\"flex-column\">\n      <modus-message type=\"info\">Info message.</modus-message>\n      <modus-message type=\"question\">Question message?</modus-message>\n    </div>\n  `,\n})\nexport class ModusMessageExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-tooltip-examples": {
      "modus-tooltip-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusTooltipExamplesComponent } from './modus-tooltip-examples.component';\n\ndescribe('ModusTooltipExamplesComponent', () => {\n  let component: ModusTooltipExamplesComponent;\n  let fixture: ComponentFixture<ModusTooltipExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusTooltipExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusTooltipExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-tooltip-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-tooltip-examples',\n  template: `\n    <h3>Tooltip</h3>\n    <modus-tooltip text=\"Tooltip text...\" position=\"right\">\n      <modus-button>Button</modus-button>\n    </modus-tooltip>\n  `,\n})\nexport class ModusTooltipExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-list-examples": {
      "modus-list-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-list-examples',\n  template: `\n    <h3>List</h3>\n    <modus-list>\n      <modus-list-item size=\"condensed\">Condensed</modus-list-item>\n      <modus-list-item selected size=\"condensed\">Condensed & Selected</modus-list-item>\n      <modus-list-item>Default</modus-list-item>\n      <modus-list-item selected>Selected</modus-list-item>\n      <modus-list-item disabled>Disabled</modus-list-item>\n      <modus-list-item size=\"large\">Large</modus-list-item>\n      <modus-list-item selected size=\"large\">Large & Selected</modus-list-item>\n    </modus-list>\n  `,\n})\nexport class ModusListExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-list-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusListExamplesComponent } from './modus-list-examples.component';\n\ndescribe('ModusListExamplesComponent', () => {\n  let component: ModusListExamplesComponent;\n  let fixture: ComponentFixture<ModusListExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusListExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusListExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-dropdown-examples": {
      "modus-dropdown-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusDropdownExamplesComponent } from './modus-dropdown-examples.component';\n\ndescribe('ModusDropdownExamplesComponent', () => {\n  let component: ModusDropdownExamplesComponent;\n  let fixture: ComponentFixture<ModusDropdownExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusDropdownExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusDropdownExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-dropdown-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-dropdown-examples',\n  template: `\n    <h3>Dropdown</h3>\n    <modus-dropdown toggle-element-id=\"toggleElement\">\n      <modus-button id=\"toggleElement\" slot=\"dropdownToggle\">Dropdown</modus-button>\n      <modus-list slot=\"dropdownList\">\n        <modus-list-item size=\"condensed\">Item 1</modus-list-item>\n        <modus-list-item size=\"condensed\">Item 2</modus-list-item>\n        <modus-list-item size=\"condensed\">Item 3</modus-list-item>\n      </modus-list>\n    </modus-dropdown>\n  `,\n})\nexport class ModusDropdownExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-accordion-examples": {
      "modus-accordion-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusAccordionExamplesComponent } from './modus-accordion-examples.component';\n\ndescribe('ModusAccordionExamplesComponent', () => {\n  let component: ModusAccordionExamplesComponent;\n  let fixture: ComponentFixture<ModusAccordionExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusAccordionExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusAccordionExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-accordion-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-accordion-examples',\n  template: `\n    <h3>Accordions</h3>\n    <div class=\"flex-column\">\n      <modus-accordion>\n        <modus-accordion-item header-text=\"Item 1\">Content</modus-accordion-item>\n        <modus-accordion-item header-text=\"Item 2\">Content</modus-accordion-item>\n        <modus-accordion-item disabled header-text=\"Item 3\">Content</modus-accordion-item>\n      </modus-accordion>\n\n      <modus-accordion>\n        <modus-accordion-item header-text=\"Item 1\" size=\"condensed\">Content</modus-accordion-item>\n        <modus-accordion-item header-text=\"Item 2\" size=\"condensed\">Content</modus-accordion-item>\n        <modus-accordion-item disabled expanded header-text=\"Item 3\" size=\"condensed\">Content</modus-accordion-item>\n      </modus-accordion>\n    </div>\n  `,\n})\nexport class ModusAccordionExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-modal-examples": {
      "modus-modal-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusModalExamplesComponent } from './modus-modal-examples.component';\n\ndescribe('ModusModalExamplesComponent', () => {\n  let component: ModusModalExamplesComponent;\n  let fixture: ComponentFixture<ModusModalExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusModalExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusModalExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-modal-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-modal-examples',\n  template: `\n    <h3>Modal</h3>\n    <modus-button id=\"btn-modal\" color=\"primary\" (buttonClick)=\"handleButtonClick($event)\">Open modal</modus-button>\n    <modus-modal\n      header-text=\"Modal title\"\n      primary-button-text=\"Save changes\"\n      secondary-button-text=\"Sweet!\"\n      primary-button-aria-label=\"Save changes\"\n      secondary-button-aria-label=\"Sweet\"\n      [primaryButtonDisabled]=\"disableButton\">\n      <p>Woo-hoo, you're reading this text in a modal!</p>\n    </modus-modal>\n  `,\n})\nexport class ModusModalExamplesComponent implements OnInit {\n  disableButton = false;\n  openModal = false;\n  handleButtonClick = (e: any) => {\n    this.openModal = true;\n    this.disableButton = true;\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-side-navigation-examples": {
      "modus-side-navigation-examples.component.ts": "import { Component, OnInit } from '@angular/core';\nimport {\n  ModusSideNavigationItemInfo,\n  ModusNavbarLogoOptions,\n  ModusProfileMenuOptions,\n} from '@trimble-oss/modus-web-components';\n\nconst SideNavIcons = {\n  home: \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cstyle%3E .st1 %7B stroke: %23000; stroke-miterlimit: 10; %7D %3C/style%3E%3Cpath d='M30.707 15.293 26 10.586V5a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v1.586l-4.293-4.293a1 1 0 0 0-1.414 0l-13 13A1 1 0 0 0 4 17h3v12a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-7h6v7a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V17h3a1 1 0 0 0 .707-1.707z' /%3E%3C/svg%3E\",\n\n  usage:\n    \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cg%3E%3Cpath d='M30 23v6c0 .55-.45 1-1 1h-6c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1h2v-5h-8v5h2c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1h-6c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1h2v-5H7v5h2c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1h2v-6c0-.55.45-1 1-1h9v-5h-2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h6c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1h-2v5h9c.55 0 1 .45 1 1v6h2c.55 0 1 .45 1 1z' /%3E%3C/g%3E%3C/svg%3E\",\n\n  styles:\n    \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cpath d='M30 25h-1v-9a1 1 0 0 0-1-1h-5a1 1 0 0 0-1 1v9h-2V5a1 1 0 0 0-1-1h-5a1 1 0 0 0-1 1v20h-2V12a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v13H3a1 1 0 1 0 0 2h27a1 1 0 1 0 0-2zM6 25V13h3v12H6zm9 0V6h3v19h-3zm9 0v-8h3v8h-3z' /%3E%3C/svg%3E\",\n\n  accessibility:\n    \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' width='24' viewBox='0 0 32 32'%3E%3Cg%3E%3Cpath d='M29 4H3c-.55 0-1 .45-1 1v17c0 .55.45 1 1 1h12v3h-4c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1h-4v-3h12c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 17H4v-2h24v2z' /%3E%3C/g%3E%3C/svg%3E\",\n};\n\n@Component({\n  selector: 'modus-side-navigation-examples',\n  templateUrl: './modus-side-navigation-examples.component.html',\n  styleUrls: ['./modus-side-navigation-examples.component.scss'],\n})\nexport class ModusSideNavigationExamplesComponent {\n  handleSideNavItemClick = (e: any) => {\n    if (e.detail) {\n      const panel = document.querySelector('#panelcontent');\n      document.querySelector('#sidenav-content-title')?.remove();\n      const el = document.createElement('h3');\n      el.id = 'sidenav-content-title';\n      el.innerHTML = e.target?.label || 'Home page';\n      panel?.insertBefore(el, document.querySelector('#overview'));\n    }\n  };\n  handleSwitch = (e: any) => {\n    const sidenav = document.querySelector('modus-side-navigation');\n    if (sidenav) sidenav.mode = sidenav.mode === 'push' ? 'overlay' : 'push';\n  };\n  handleNavBarMainMenu = (e: any) => {\n    const panel = document.querySelector('modus-side-navigation');\n    if (panel) panel.expanded = !panel.expanded;\n  };\n  navbarOptions = {\n    apps: [\n      {\n        description: 'The One Trimble Design System',\n        logoUrl: 'https://modus.trimble.com/favicon.svg',\n        name: 'Trimble Modus',\n        url: 'https://modus.trimble.com/',\n        category: '',\n        showCategory: false,\n      },\n    ],\n    logoOptions: {\n      primary: {\n        url: 'https://modus-bootstrap.trimble.com/img/trimble-logo-rev.svg',\n        height: '24',\n      },\n      secondary: { url: 'https://modus.trimble.com/favicon.svg', height: '24' },\n    } as ModusNavbarLogoOptions,\n    profileMenuOptions: {\n      email: 'modus_user@trimble.com',\n      initials: 'MU',\n      username: 'Modus User',\n    } as ModusProfileMenuOptions,\n  };\n  sideNavData: ModusSideNavigationItemInfo[] = [\n    {\n      id: 'home-menu',\n      menuIcon: SideNavIcons.home,\n      label: 'Home page 1',\n      children: [\n        {\n          id: 'home-menu-2',\n          menuIcon: SideNavIcons.home,\n          label: 'Home page 2',\n          onSideNavItemClicked: this.handleSideNavItemClick,\n        },\n        {\n          id: 'usage-menu-2',\n          children: [\n            {\n              id: 'home-menu-3',\n              menuIcon: SideNavIcons.home,\n              label: 'Home page 3',\n              onSideNavItemClicked: this.handleSideNavItemClick,\n            },\n          ],\n          menuIcon: SideNavIcons.usage,\n          label: 'Usage page 2',\n        },\n      ],\n    },\n    {\n      id: 'usage-menu',\n      menuIcon: SideNavIcons.usage,\n      label: 'Usage page 1',\n      onSideNavItemClicked: this.handleSideNavItemClick,\n    },\n    {\n      id: 'styles-menu',\n      menuIcon: SideNavIcons.styles,\n      label: 'Styles page 1',\n      onSideNavItemClicked: this.handleSideNavItemClick,\n    },\n    {\n      id: 'accessibility-menu',\n      menuIcon: SideNavIcons.accessibility,\n      label: 'Accessibility page 1',\n      onSideNavItemClicked: this.handleSideNavItemClick,\n    },\n  ];\n}\n",
      "modus-side-navigation-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusSideNavigationExamplesComponent } from './modus-side-navigation-examples.component';\n\ndescribe('ModusSideNavigationExamplesComponent', () => {\n  let component: ModusSideNavigationExamplesComponent;\n  let fixture: ComponentFixture<ModusSideNavigationExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusSideNavigationExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusSideNavigationExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-side-navigation-examples.component.html": "\n<h3>Side navigation</h3>\n\n<div id=\"dataTemplate\">\n  <modus-switch id=\"switch-mode\" (switchClick)=\"handleSwitch($event)\" label=\"Enable Push Side Navigation\"></modus-switch>\n  <div style='width: 100%; align-items: center; height: 56px; box-shadow: 0 0 2px; margin-top: 10px'>\n    <modus-navbar\n      (mainMenuClick)=\"handleNavBarMainMenu($event)\"\n      id=\"navbar\"\n      show-apps-menu\n      show-help\n      show-main-menu\n      show-notifications\n      [apps]=\"navbarOptions.apps\"\n      [logoOptions]=\"navbarOptions.logoOptions\"\n      [profileMenuOptions]=\"navbarOptions.profileMenuOptions\"></modus-navbar>\n  </div>\n\n  <div\n    id=\"container\"\n    style=\"display:flex; min-height:500px; overflow-y: auto; position: relative;box-shadow: 0 0 2px;\">\n    <modus-side-navigation\n      max-width=\"300px\"\n      id=\"sideNav\"\n      target-content=\"#dataTemplate #panelcontent\"\n      mode=\"overlay\"\n      [data]=\"sideNavData\"></modus-side-navigation>\n\n    <div id=\"panelcontent\" style=\"padding:10px; transition: all 0.25s linear 0s;\">\n      <div id=\"overview\">\n        <p>\n          The side navigation of an application provides context through accessible menu options and positions a\n          consistent component to connect to various pages in the application.\n        </p>\n        <p>\n          The side navigation is a collapsible side content of the site\u2019s pages. It is located alongside the page\u2019s\n          primary content. The component is designed to add side content to a fullscreen application. It is activated\n          through the \u201chamburger\u201d menu in the Navbar.\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    "modus-tabs-examples": {
      "modus-tabs-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusTabsExamplesComponent } from './modus-tabs-examples.component';\n\ndescribe('ModusTabsExamplesComponent', () => {\n  let component: ModusTabsExamplesComponent;\n  let fixture: ComponentFixture<ModusTabsExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusTabsExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusTabsExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-tabs-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-tabs-examples',\n  template: ` <h3>Tabs</h3>\n    <div style=\"display: flex; flex-direction:column; \">\n      <modus-tabs [tabs]=\"tabs\"></modus-tabs>\n      <modus-tabs size=\"small\" [tabs]=\"tabs\"></modus-tabs>\n    </div>`,\n})\nexport class ModusTabsExamplesComponent implements OnInit {\n  tabs = [\n    {\n      id: 0,\n      label: 'Tab 1',\n    },\n    {\n      active: true,\n      id: 1,\n      label: 'Tab 2',\n    },\n  ];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-select-examples": {
      "modus-select-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusSelectExamplesComponent } from './modus-select-examples.component';\n\ndescribe('ModusSelectExamplesComponent', () => {\n  let component: ModusSelectExamplesComponent;\n  let fixture: ComponentFixture<ModusSelectExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusSelectExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusSelectExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-select-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-select-examples',\n  templateUrl: './modus-select-examples.component.html',\n})\nexport class ModusSelectExamplesComponent implements OnInit {\n  options = [{ display: 'Option 1' }, { display: 'Option 2' }, { display: 'Option 3' }];\n  handleChange = (event: any) => {\n    const selectedValue = event.detail;\n    event.target.value = selectedValue;\n  };\n\n  selectedValue = { display: 'Option 1' };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-select-examples.component.html": "<h3>Select Input</h3>\n<div class=\"flex-column\">\n  <!-- Without preset value -->\n<modus-select\nid=\"select-demo-1\"\nlabel=\"Select Demo 1\"\noptions-display-prop=\"display\" [options]=\"options\" (valueChange)=\"handleChange($event)\"  ></modus-select>\n\n<!-- Disabled with helper text and preset value -->\n<modus-select\ndisabled\nhelper-text=\"Helper demo\"\nid=\"select-demo-2\"\nlabel=\"Select Demo 2\"\noptions-display-prop=\"display\" [value]=\"selectedValue\" [options]=\"options\"></modus-select>\n\n<!-- Error -->\n<modus-select error-text=\"Error demo\"  [options]=\"options\" label=\"Select Demo 3\"></modus-select>\n\n<!-- Valid -->\n<modus-select label=\"Select Demo 4\"  [options]=\"options\" valid-text=\"Valid demo\"></modus-select>\n\n<!-- 'Large select -->\n<modus-select\nid=\"select-demo-5\"\nlabel=\"Select Demo 5\"\nsize=\"large\"\noptions-display-prop=\"display\"  [options]=\"options\"></modus-select>\n</div>\n"
    },
    "modus-checkbox-examples": {
      "modus-checkbox-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusCheckboxExamplesComponent } from './modus-checkbox-examples.component';\n\ndescribe('ModusCheckboxExamplesComponent', () => {\n  let component: ModusCheckboxExamplesComponent;\n  let fixture: ComponentFixture<ModusCheckboxExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusCheckboxExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusCheckboxExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-checkbox-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-checkbox-examples',\n  template: `\n    <h3>Checkbox</h3>\n    <modus-checkbox></modus-checkbox>\n    <modus-checkbox disabled></modus-checkbox>\n    <modus-checkbox label=\"Checkbox\"></modus-checkbox>\n    <modus-checkbox disabled label=\"Checkbox\"></modus-checkbox>\n    <modus-checkbox checked disabled label=\"Checkbox\"></modus-checkbox>\n    <modus-checkbox indeterminate></modus-checkbox>\n  `,\n})\nexport class ModusCheckboxExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-autocomplete-examples": {
      "modus-autocomplete-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusAutocompleteExamplesComponent } from './modus-autocomplete-examples.component';\n\ndescribe('ModusAutocompleteExamplesComponent', () => {\n  let component: ModusAutocompleteExamplesComponent;\n  let fixture: ComponentFixture<ModusAutocompleteExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusAutocompleteExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusAutocompleteExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-autocomplete-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-autocomplete-examples',\n  template: `\n    <h3>Autocomplete</h3>\n    <div style=\"width: 500px\">\n      <modus-autocomplete\n        id=\"default\"\n        label=\"Default Autocomplete\"\n        placeholder=\"Search...\"\n        [options]=\"basicOptions\"></modus-autocomplete>\n\n      <modus-autocomplete\n        id=\"with-option\"\n        label=\"Autocomplete using option model\"\n        placeholder=\"Search...\"\n        [options]=\"complexOptions\"></modus-autocomplete>\n\n      <modus-autocomplete label=\"Employee Search\" clearable placeholder=\"Search...\">\n        <li data-search-value=\"The Git Guru\" data-id=\"1\" style=\"padding: 8px\">\n          <div style=\"font-weight: bold\">The Git Guru</div>\n          <div style=\"font-size: 12px\">Lead DevOps Engineer</div>\n        </li>\n        <li data-search-value=\"Bob the Builder\" data-id=\"2\" style=\"padding: 8px\">\n          <div style=\"font-weight: bold\">Bob the Builder</div>\n          <div style=\"font-size: 12px\">Senior Construction Engineer</div>\n        </li>\n      </modus-autocomplete>\n    </div>\n  `,\n})\nexport class ModusAutocompleteExamplesComponent implements OnInit {\n  basicOptions = ['Apple', 'Banana', 'Orange'];\n  complexOptions = [\n    { id: '0', value: 'Apple' },\n    { id: '1', value: 'Banana' },\n    { id: '2', value: 'Orange' },\n  ];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-time-picker-examples": {
      "modus-time-picker-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-time-picker-examples',\n  templateUrl: './modus-time-picker-examples.component.html',\n})\nexport class ModusTimePickerExamplesComponent implements OnInit {\n  options = [\n    { display: 'Alpha Time Zone' },\n    { display: 'Australian Central Daylight Time' },\n    { display: 'Atlantic Daylight Time' },\n  ];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-time-picker-examples.component.html": "<h3>Time Picker</h3>\n<modus-time-picker\n  label=\"Time (Default)\"\n  placeholder=\"23:39\"\n  helper-text=\"hh:mm\"></modus-time-picker>\n  <modus-time-picker\n  label=\"Time (12 Hour Format)\"\n  ampm=\"true\"\n  value=\"23:39\"\n  placeholder=\"12:00 AM\"\n  helper-text=\"hh:mm AM/PM\"></modus-time-picker>\n  <modus-time-picker\n  ampm=\"true\"\n  auto-format=\"true\"\n  helper-text=\"hh:mm AM/PM\"\n  label=\"Time (Auto Format)\"\n  max-length=\"10\"\n  placeholder=\"12:00 AM\"></modus-time-picker>\n  <modus-time-picker\n  helper-text=\"hh:mm\"\n  label=\"Time (Time Picker with Time Zone)\"\n  max-length=\"10\"\n  auto-format=\"true\"\n  value=\"23:39\">\n  <div style=\"width: 300px;padding-left: 0.5rem;\" slot=\"timeZone\">\n    <modus-select\n      id=\"timezone\"\n      label=\"Time Zone\"\n      aria-label=\"Time Zone\"\n      options-display-prop=\"display\" [options]=\"options\"></modus-select>\n  </div>\n</modus-time-picker>\n",
      "modus-time-picker-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusTimePickerExamplesComponent } from './modus-time-picker-examples.component';\n\ndescribe('ModusTimePickerExamplesComponent', () => {\n  let component: ModusTimePickerExamplesComponent;\n  let fixture: ComponentFixture<ModusTimePickerExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusTimePickerExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusTimePickerExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-content-tree-examples": {
      "modus-content-tree-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-content-tree-examples',\n  template: `\n    <h3>Content Tree</h3>\n    <modus-tree-view\n      style=\"width:400px;\"\n      checkbox-selection=\"false\"\n      checked-items=\"false\"\n      expanded-items=\"false\"\n      multi-checkbox-selection=\"false\"\n      multi-selection=\"false\"\n      selected-items=\"false\"\n      size=\"\"\n      class=\"hydrated\">\n      <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"2\" label=\"Personal\" class=\"hydrated\"></modus-tree-view-item>\n        <modus-tree-view-item node-id=\"3\" label=\"Work\" class=\"hydrated\"></modus-tree-view-item>\n        <modus-tree-view-item node-id=\"4\" label=\"Social\" class=\"hydrated\"></modus-tree-view-item>\n        <modus-tree-view-item node-id=\"5\" label=\"More ...\" class=\"hydrated\"></modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"6\" label=\"Archived\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"7\" label=\"Folder1\" class=\"hydrated\">\n          <modus-tree-view-item node-id=\"8\" label=\"File1\" class=\"hydrated\"></modus-tree-view-item>\n          <modus-tree-view-item node-id=\"9\" label=\"Folder2\" class=\"hydrated\">\n            <modus-tree-view-item node-id=\"10\" label=\"File2\" class=\"hydrated\"></modus-tree-view-item>\n          </modus-tree-view-item>\n          <modus-tree-view-item node-id=\"11\" label=\"File3\" class=\"hydrated\"></modus-tree-view-item>\n        </modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"12\" label=\"Spam\" class=\"hydrated\"></modus-tree-view-item>\n    </modus-tree-view>\n\n    <modus-tree-view\n      style=\"width:400px;\"\n      checkbox-selection=\"true\"\n      checked-items=\"false\"\n      expanded-items=\"false\"\n      multi-checkbox-selection=\"true\"\n      multi-selection=\"true\"\n      selected-items=\"false\"\n      size=\"\"\n      class=\"hydrated\">\n      <modus-tree-view-item node-id=\"1\" label=\"Inbox\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"2\" label=\"Personal\" class=\"hydrated\"></modus-tree-view-item>\n        <modus-tree-view-item node-id=\"3\" label=\"Work\" class=\"hydrated\"></modus-tree-view-item>\n        <modus-tree-view-item node-id=\"4\" label=\"Social\" class=\"hydrated\"></modus-tree-view-item>\n        <modus-tree-view-item node-id=\"5\" label=\"More ...\" class=\"hydrated\"></modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"6\" label=\"Archived\" class=\"hydrated\">\n        <modus-tree-view-item node-id=\"7\" label=\"Folder1\" class=\"hydrated\">\n          <modus-tree-view-item node-id=\"8\" label=\"File1\" class=\"hydrated\"></modus-tree-view-item>\n          <modus-tree-view-item node-id=\"9\" label=\"Folder2\" class=\"hydrated\">\n            <modus-tree-view-item node-id=\"10\" label=\"File2\" class=\"hydrated\"></modus-tree-view-item>\n          </modus-tree-view-item>\n          <modus-tree-view-item node-id=\"11\" label=\"File3\" class=\"hydrated\"></modus-tree-view-item>\n        </modus-tree-view-item>\n      </modus-tree-view-item>\n      <modus-tree-view-item node-id=\"12\" label=\"Spam\" class=\"hydrated\"></modus-tree-view-item>\n    </modus-tree-view>\n  `,\n})\nexport class ModusContentTreeExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-content-tree-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusContentTreeExamplesComponent } from './modus-content-tree-examples.component';\n\ndescribe('ModusContentTreeExamplesComponent', () => {\n  let component: ModusContentTreeExamplesComponent;\n  let fixture: ComponentFixture<ModusContentTreeExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusContentTreeExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusContentTreeExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-toast-examples": {
      "modus-toast-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusToastExamplesComponent } from './modus-toast-examples.component';\n\ndescribe('ModusToastExamplesComponent', () => {\n  let component: ModusToastExamplesComponent;\n  let fixture: ComponentFixture<ModusToastExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusToastExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusToastExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-toast-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-toast-examples',\n  template: ` <h3>Toasts</h3>\n    <div style=\"display: flex; flex-direction:column; gap:20px;\">\n      <modus-toast type=\"default\">Default</modus-toast>\n      <modus-toast type=\"danger\">Danger</modus-toast>\n      <modus-toast type=\"dark\">Dark</modus-toast>\n      <modus-toast type=\"primary\">Primary</modus-toast>\n      <modus-toast type=\"secondary\">Secondary</modus-toast>\n      <modus-toast type=\"success\">Success</modus-toast>\n      <modus-toast type=\"warning\">Warning</modus-toast>\n    </div>`,\n})\nexport class ModusToastExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-card-examples": {
      "modus-card-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-card-examples',\n  template: `\n    <h3>Cards</h3>\n    <modus-card>\n      <div style=\"padding:10px\">\n        <h4 id=\"card-title\">Card title</h4>\n        <h5>Card subtitle</h5>\n        <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n        <modus-button color=\"primary\">Go somewhere</modus-button>\n      </div>\n    </modus-card>\n  `,\n})\nexport class ModusCardExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-card-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusCardExamplesComponent } from './modus-card-examples.component';\n\ndescribe('ModusCardExamplesComponent', () => {\n  let component: ModusCardExamplesComponent;\n  let fixture: ComponentFixture<ModusCardExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusCardExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusCardExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-navbar-examples": {
      "modus-navbar-examples.component.html": "<h3>Navbar</h3>\n<div class=\"flex-column\">\n<modus-navbar\n  id=\"working\"\n  show-apps-menu\n  show-help\n  show-main-menu [apps]=\"apps\" [buttons]=\"buttons\" [logoOptions]=\"logoOptions\" [profileMenuOptions] = \"profileMenuOptions\" >\n  <div slot=\"main\" style=\"height:300px;\">Render your own main menu.</div>\n  <div slot=\"addMenu\">Render your own add menu.</div>\n  <div slot=\"notificationMenu\">Render your own notification menu.</div>\n</modus-navbar>\n\n<modus-navbar\n  id=\"broken\"\n  show-apps-menu\n  show-help\n  show-main-menu\n  show-notifications>\n  <div slot=\"main\" style=\"height:300px;\">Render your own main menu.</div>\n  <div slot=\"notifications\">Render your own notifications.</div>\n</modus-navbar>\n\n\n<modus-navbar\n  id=\"blue-theme\"\n  show-apps-menu\n  show-help\n  show-main-menu\n  show-notifications\n  variant=\"blue\">\n  <div slot=\"main\" style=\"height:300px;\">Render your own main menu.</div>\n  <div slot=\"notifications\">Render your own notifications.</div>\n</modus-navbar>\n</div>\n",
      "modus-navbar-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-navbar-examples',\n  templateUrl: './modus-navbar-examples.component.html',\n  styleUrls: ['./modus-navbar-examples.component.scss'],\n})\nexport class ModusNavbarExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  avatarUrl = `https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/0e738c17-7f3c-422e-8225-f8c782b08626/d9pordj-43d4aa59-54b0-46a1-a568-e36dd691cf27.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzBlNzM4YzE3LTdmM2MtNDIyZS04MjI1LWY4Yzc4MmIwODYyNlwvZDlwb3Jkai00M2Q0YWE1OS01NGIwLTQ2YTEtYTU2OC1lMzZkZDY5MWNmMjcucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.xvDk9KFIUAx0yAG3BPamDfRqmWUX6zwR4WVW40GjsoY`;\n\n  apps = [\n    {\n      description: 'The One Trimble Design System',\n      logoUrl: 'https://modus.trimble.com/favicon.svg',\n      name: 'Trimble Modus',\n      url: 'https://modus.trimble.com/',\n    },\n  ];\n\n  logoOptions = {\n    primary: {\n      url: 'https://modus-bootstrap.trimble.com/img/trimble-logo-rev.svg',\n      height: 24,\n    },\n    secondary: { url: 'https://modus.trimble.com/favicon.svg', height: 24 },\n  };\n\n  profileMenuOptions = {\n    avatarUrl: 'https://avatar.example.com/broken-image-link.png',\n    email: 'modus_user@trimble.com',\n    initials: 'MU',\n    username: 'Modus User',\n  };\n\n  buttons = [\n    { id: 'addMenu', icon: 'add' },\n    { id: 'notificationMenu', icon: 'notifications' },\n  ];\n}\n",
      "modus-navbar-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusNavbarExamplesComponent } from './modus-navbar-examples.component';\n\ndescribe('ModusNavbarExamplesComponent', () => {\n  let component: ModusNavbarExamplesComponent;\n  let fixture: ComponentFixture<ModusNavbarExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusNavbarExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusNavbarExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-date-picker-examples": {
      "modus-date-picker-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-date-picker-examples',\n  template: `\n    <h3>Date Picker</h3>\n    <modus-date-input\n      helperText=\"mmm dd, yyyy\"\n      label=\"Single date\"\n      [allowedCharsRegex]=\"regex\"\n      format=\"mmm dd, yyyy\"\n      value=\"2022-12-22\"></modus-date-input>\n    <modus-date-picker label=\"Select date range\">\n      <modus-date-input\n        type=\"start\"\n        label=\"Start\"\n        format=\"dd-mm-yyyy\"\n        helper-text=\"dd-mm-yyyy\"\n        [allowedCharsRegex]=\"regex\"\n        show-calendar-icon=\"true\"\n        value=\"2022-12-22\"></modus-date-input>\n\n      <modus-date-input\n        type=\"end\"\n        label=\"End\"\n        format=\"dd-mm-yyyy\"\n        helper-text=\"dd-mm-yyyy\"\n        [allowedCharsRegex]=\"regex\"\n        show-calendar-icon=\"true\"\n        value=\"2022-12-22\"></modus-date-input>\n    </modus-date-picker>\n  `,\n})\nexport class ModusDatePickerExamplesComponent implements OnInit {\n  regex = `[\\\\d,- ]`;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-date-picker-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusDatePickerExamplesComponent } from './modus-date-picker-examples.component';\n\ndescribe('ModusDatePickerExamplesComponent', () => {\n  let component: ModusDatePickerExamplesComponent;\n  let fixture: ComponentFixture<ModusDatePickerExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusDatePickerExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusDatePickerExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-breadcrumb-examples": {
      "modus-breadcrumb-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusBreadcrumbExamplesComponent } from './modus-breadcrumb-examples.component';\n\ndescribe('ModusBreadcrumbExamplesComponent', () => {\n  let component: ModusBreadcrumbExamplesComponent;\n  let fixture: ComponentFixture<ModusBreadcrumbExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusBreadcrumbExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusBreadcrumbExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-breadcrumb-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-breadcrumb-examples',\n  template: `\n    <h3>Breadcrumbs</h3>\n    <modus-breadcrumb [crumbs]=\"crumbs\"></modus-breadcrumb>\n  `,\n})\nexport class ModusBreadcrumbExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  crumbs = [\n    { id: '1', display: 'Crumb 1' },\n    { id: '2', display: 'Crumb 2' },\n    { id: '3', display: 'Crumb 3' },\n    { id: '4', display: 'Crumb 4' },\n  ];\n}\n"
    },
    "modus-data-table-examples": {
      "modus-data-table-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-data-table-examples',\n  template: `\n    <h3>Data Table</h3>\n    <div style=\"width: 500px\">\n      <modus-data-table [columns]=\"columns\" [data]=\"data\"></modus-data-table>\n    </div>\n  `,\n})\nexport class ModusDataTableExamplesComponent implements OnInit {\n  columns = ['Name', 'Age', 'Contacted'];\n  data = [\n    ['John', 25, false],\n    ['Jane', 26, false],\n    ['Joe', 27, true],\n  ];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-data-table-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusDataTableExamplesComponent } from './modus-data-table-examples.component';\n\ndescribe('ModusDataTableExamplesComponent', () => {\n  let component: ModusDataTableExamplesComponent;\n  let fixture: ComponentFixture<ModusDataTableExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusDataTableExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusDataTableExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-alert-examples": {
      "modus-alert-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-alert-examples',\n  template: `\n    <h3>Alerts</h3>\n    <div class=\"flex-column\">\n      <modus-alert message=\"Info alert (default)\"></modus-alert>\n      <modus-alert dismissible message=\"Dismissible alert\"></modus-alert>\n      <modus-alert message=\"Error alert\" type=\"error\"></modus-alert>\n      <modus-alert message=\"Info gray alert\" type=\"info-gray\"></modus-alert>\n      <modus-alert message=\"Info gray dark alert\" type=\"info-gray-dark\"></modus-alert>\n      <modus-alert message=\"Success alert\" type=\"success\"></modus-alert>\n      <modus-alert message=\"Warning alert\" type=\"warning\"></modus-alert>\n    </div>\n  `,\n})\nexport class ModusAlertExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-alert-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusAlertExamplesComponent } from './modus-alert-examples.component';\n\ndescribe('ModusAlertExamplesComponent', () => {\n  let component: ModusAlertExamplesComponent;\n  let fixture: ComponentFixture<ModusAlertExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusAlertExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusAlertExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-badge-examples": {
      "modus-badge-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-badge-examples',\n  template: `\n    <h3>Badges</h3>\n    <div class=\"flex-column\">\n      <div class=\"flex-row\">\n        <modus-badge>Default</modus-badge>\n        <modus-badge color=\"secondary\">Secondary</modus-badge>\n        <modus-badge color=\"tertiary\">Tertiary</modus-badge>\n        <modus-badge color=\"dark\">Dark</modus-badge>\n        <modus-badge color=\"warning\">Warning</modus-badge>\n        <modus-badge color=\"danger\">Danger</modus-badge>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-badge size=\"small\">Small</modus-badge>\n        <modus-badge size=\"medium\">Medium</modus-badge>\n        <modus-badge size=\"large\">Large</modus-badge>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-badge type=\"counter\">Counter</modus-badge>\n        <modus-badge color=\"secondary\" type=\"counter\">Counter</modus-badge>\n        <modus-badge color=\"tertiary\" type=\"counter\">Counter</modus-badge>\n        <modus-badge color=\"dark\" type=\"counter\">Counter</modus-badge>\n        <modus-badge color=\"warning\" type=\"counter\">Counter</modus-badge>\n        <modus-badge color=\"danger\" type=\"counter\">Counter</modus-badge>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-badge size=\"small\" type=\"counter\">Small</modus-badge>\n        <modus-badge size=\"medium\" type=\"counter\">Medium</modus-badge>\n        <modus-badge size=\"large\" type=\"counter\">Large</modus-badge>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-badge type=\"text\">Primary</modus-badge>\n        <modus-badge color=\"secondary\" type=\"text\">Secondary</modus-badge>\n        <modus-badge color=\"dark\" type=\"text\">High Contrast</modus-badge>\n        <modus-badge color=\"success\" type=\"text\">Success</modus-badge>\n        <modus-badge color=\"danger\" type=\"text\">Danger</modus-badge>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-badge size=\"small\" type=\"text\">Small</modus-badge>\n        <modus-badge size=\"medium\" type=\"text\">Medium</modus-badge>\n        <modus-badge size=\"large\" type=\"text\">Large</modus-badge>\n      </div>\n    </div>\n  `,\n})\nexport class ModusBadgeExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-badge-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusBadgeExamplesComponent } from './modus-badge-examples.component';\n\ndescribe('ModusBadgeExamplesComponent', () => {\n  let component: ModusBadgeExamplesComponent;\n  let fixture: ComponentFixture<ModusBadgeExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusBadgeExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusBadgeExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-button-examples": {
      "modus-button-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-button-examples',\n  template: `\n    <h3>Buttons</h3>\n    <div class=\"flex-column\">\n      <div class=\"flex-row\">\n        <modus-button color=\"primary\">Primary</modus-button>\n        <modus-button color=\"secondary\">Secondary</modus-button>\n        <modus-button color=\"tertiary\">Tertiary</modus-button>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-button color=\"danger\">Danger</modus-button>\n        <modus-button disabled color=\"danger\">Disabled</modus-button>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-button size=\"small\" color=\"primary\">Small</modus-button>\n        <modus-button size=\"large\" color=\"primary\">Large</modus-button>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-button button-style=\"borderless\">Borderless</modus-button>\n      </div>\n\n      <div class=\"flex-row\">\n        <modus-button button-style=\"outline\" color=\"primary\">Outline</modus-button>\n        <modus-button button-style=\"outline\" color=\"secondary\">Outline</modus-button>\n      </div>\n    </div>\n  `,\n})\nexport class ModusButtonExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-button-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusButtonExamplesComponent } from './modus-button-examples.component';\n\ndescribe('ModusButtonExamplesComponent', () => {\n  let component: ModusButtonExamplesComponent;\n  let fixture: ComponentFixture<ModusButtonExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusButtonExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusButtonExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-spinner-examples": {
      "modus-spinner-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-spinner-examples',\n  template: `\n    <h3>Spinner</h3>\n    <div style=\"display: flex; flex-direction:column; gap:20px;\">\n      <!-- Spinner -->\n      <modus-spinner></modus-spinner>\n\n      <modus-spinner color=\"secondary\"></modus-spinner>\n\n      <modus-spinner color=\"tertiary\"></modus-spinner>\n\n      <!-- Render in another element with different color and size -->\n      <modus-button color=\"primary\" disabled>\n        <modus-spinner color=\"white\" size=\".5rem\"></modus-spinner>\n        &nbsp;Loading...\n      </modus-button>\n    </div>\n  `,\n})\nexport class ModusSpinnerExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-spinner-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusSpinnerExamplesComponent } from './modus-spinner-examples.component';\n\ndescribe('ModusSpinnerExamplesComponent', () => {\n  let component: ModusSpinnerExamplesComponent;\n  let fixture: ComponentFixture<ModusSpinnerExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusSpinnerExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusSpinnerExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-switch-examples": {
      "modus-switch-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusSwitchExamplesComponent } from './modus-switch-examples.component';\n\ndescribe('ModusSwitchExamplesComponent', () => {\n  let component: ModusSwitchExamplesComponent;\n  let fixture: ComponentFixture<ModusSwitchExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusSwitchExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusSwitchExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-switch-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-switch-examples',\n  template: `\n    <h3>Switch</h3>\n    <div style=\"display: flex; flex-direction:row; gap:5px;\">\n      <modus-switch label=\"Default\"></modus-switch>\n      <modus-switch checked label=\"Checked\"></modus-switch>\n      <modus-switch disabled label=\"Disabled\"></modus-switch>\n    </div>\n  `,\n})\nexport class ModusSwitchExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-radio-group-examples": {
      "modus-radio-group-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-radio-group-examples',\n  template: `\n    <h3>Radio group</h3>\n    <modus-radio-group checked-id=\"1\" name=\"my-group\" [radioButtons]=\"radioButtons\"></modus-radio-group>\n  `,\n})\nexport class ModusRadioGroupExamplesComponent implements OnInit {\n  radioButtons = [\n    {\n      id: '0',\n      label: 'Radio 1',\n    },\n    {\n      id: '1',\n      checked: true,\n      label: 'Radio 2',\n    },\n    {\n      id: '2',\n      label: 'Radio 3',\n    },\n  ];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-radio-group-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusRadioGroupExamplesComponent } from './modus-radio-group-examples.component';\n\ndescribe('ModusRadioGroupExamplesComponent', () => {\n  let component: ModusRadioGroupExamplesComponent;\n  let fixture: ComponentFixture<ModusRadioGroupExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusRadioGroupExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusRadioGroupExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"
    },
    "modus-number-examples": {
      "modus-number-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusNumberExamplesComponent } from './modus-number-examples.component';\n\ndescribe('ModusNumberExamplesComponent', () => {\n  let component: ModusNumberExamplesComponent;\n  let fixture: ComponentFixture<ModusNumberExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusNumberExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusNumberExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-number-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-number-examples',\n  templateUrl: './modus-number-examples.component.html',\n})\nexport class ModusNumberExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-number-examples.component.html": "<h3>Number Inputs</h3>\n<div class=\"flex-column\">\n  <modus-number-input\n  label=\"Number Input Demo 1\"\n  placeholder=\"Placeholder\"\n  required=\"true\"></modus-number-input>\n<modus-number-input\n  disabled=\"true\"\n  label=\"Number Input Demo 2\"\n  placeholder=\"Placeholder\"\n  required=\"true\"></modus-number-input>\n<modus-number-input\n  helper-text=\"Helper demo\"\n  label=\"Number Input Demo 3\"\n  placeholder=\"Placeholder\"></modus-number-input>\n<modus-number-input\n  error-text=\"Error demo\"\n  label=\"Number Input Demo 4\"\n  placeholder=\"Placeholder\"></modus-number-input>\n<modus-number-input\n  valid-text=\"Valid demo\"\n  label=\"Number Input Demo 5\"\n  placeholder=\"Placeholder\"></modus-number-input>\n<modus-number-input\n  label=\"Text Input Demo 6\"\n  placeholder=\"Placeholder\"\n  size=\"large\"\n  value=\"100\"></modus-number-input>\n</div>\n"
    },
    "modus-file-dropzone-examples": {
      "modus-file-dropzone-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusFileDropzoneExamplesComponent } from './modus-file-dropzone-examples.component';\n\ndescribe('ModusFileDropzoneExamplesComponent', () => {\n  let component: ModusFileDropzoneExamplesComponent;\n  let fixture: ComponentFixture<ModusFileDropzoneExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusFileDropzoneExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusFileDropzoneExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-file-dropzone-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-file-dropzone-examples',\n  template: `\n    <h3>File Upload Dropzone</h3>\n    <modus-file-dropzone\n      aria-Label=\"dropzone\"\n      description=\"File dropzone description\"\n      dropzone-Height=\"175px\"\n      dropzone-Width=\"400px\"\n      label=\"Dropzone Label\"\n      multiple=\"false\"\n      (files)=\"handleFiles($event)\">\n    </modus-file-dropzone>\n  `,\n})\nexport class ModusFileDropzoneExamplesComponent implements OnInit {\n  handleFiles = (event: any) => {\n    const [files, error] = event.detail;\n    console.log(files);\n    console.log(error);\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    },
    "modus-text-input-examples": {
      "modus-text-input-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-text-input-examples',\n  templateUrl: './modus-text-input-examples.component.html',\n})\nexport class ModusTextInputExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "modus-text-input-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusTextInputExamplesComponent } from './modus-text-input-examples.component';\n\ndescribe('ModusTextInputExamplesComponent', () => {\n  let component: ModusTextInputExamplesComponent;\n  let fixture: ComponentFixture<ModusTextInputExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusTextInputExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusTextInputExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-text-input-examples.component.html": "<h3>Text Inputs</h3>\n<modus-text-input\n  label=\"Text Input (Search Icon)\"\n  placeholder=\"Placeholder\"\n  include-search-icon\n  required></modus-text-input>\n<modus-text-input\n  label=\"Text Input (Search Icon & Disabled)\"\n  include-search-icon\n  disabled></modus-text-input>\n<modus-text-input\n  label=\"Text Input (Search Icon & Helper Text)\"\n  placeholder=\"Placeholder\"\n  value=\"Value\"\n  helper-text=\"Helper Demo\"\n  include-search-icon\n  required></modus-text-input>\n<modus-text-input\n  label=\"Text Input (Error)\"\n  placeholder=\"Placeholder\"\n  value=\"Value\"\n  error-text=\"Error Demo\"></modus-text-input>\n<modus-text-input\n  label=\"Text Input (Valid)\"\n  placeholder=\"Placeholder\"\n  value=\"Value\"\n  valid-text=\"Valid Demo\"></modus-text-input>\n<modus-text-input\n  label=\"Text Input (Large & Helper Text)\"\n  placeholder=\"Placeholder\"\n  value=\"Value\"\n  size=\"large\"\n  helper-text=\"Your username must be 8-20 characters long, contain letters and numbers, and must not contain spaces\"></modus-text-input>\n<modus-text-input\n  label=\"Text Input (Clearable)\"\n  placeholder=\"Placeholder\"\n  value=\"Value\"\n  clearable=\"true\"></modus-text-input>\n<modus-text-input\n  label=\"Text Input (Password)\"\n  placeholder=\"Password\"\n  type=\"password\"></modus-text-input>\n"
    },
    "modus-table-examples": {
      "modus-table-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusTooltipExamplesComponent } from './modus-table-examples.component';\n\ndescribe('ModusTooltipExamplesComponent', () => {\n  let component: ModusTooltipExamplesComponent;\n  let fixture: ComponentFixture<ModusTooltipExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ModusTooltipExamplesComponent],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(ModusTooltipExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-table-examples.component.ts": "import { Component, OnInit } from '@angular/core';\nimport {\n  ModusTableColumn,\n  ModusTableColumnDataType,\n  ModusTableColumnsVisibilityOptions,\n  ModusTableDisplayOptions,\n  ModusTableRowSelectionOptions,\n  ModusTableToolbarOptions,\n} from '@trimble-oss/modus-web-components';\n\nfunction range(len: number) {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\n\nfunction randomNumber(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction newPerson() {\n  const namesIndex = randomNumber(0, 17);\n  const firstName = Names[namesIndex].split(' ')[0];\n  const lastName = Names[namesIndex].split(' ')[1];\n  const email: string = `${firstName}${lastName}@example.com`.toLowerCase();\n  return {\n    firstName,\n    lastName,\n    age: randomNumber(20, 80) * 30,\n    visits: randomNumber(1, 100) * 100,\n    email: { display: email, url: email },\n    progress: randomNumber(1, 100) * 100,\n    status: randomNumber(1, 100) > 66 ? 'Verified' : randomNumber(0, 100) > 33 ? 'Pending' : 'Rejected',\n    createdAt: new Date(randomNumber(1990, 2020), randomNumber(0, 11), randomNumber(1, 30)).toDateString(),\n  };\n}\n\nfunction makeData(...lens: number[]): object[] {\n  const makeDataLevel: any = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map(() => {\n      return {\n        ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n\nconst Names = [\n  'Mickey Mouse',\n  'Bugs Bunny',\n  'Homer Simpson',\n  'Fred Flintstone',\n  'Sponge Bob',\n  'Daffy Duck',\n  'Charlie Brown',\n  'Scooby Doo',\n  'Tom Cat',\n  'Jerry Mouse',\n  'Mighty Mouse',\n  'Wile E Coyote',\n  'Tweety Bird',\n  'Pink Panther',\n  'Road Runner',\n  'Patrick Star',\n  'Roger Rabbit',\n  'Papa Smurf',\n  'Buzz Lightyear',\n];\n\n@Component({\n  selector: 'modus-table-examples',\n  template: ` <modus-table\n    pagination\n    sort\n    hover\n    rows-expandable\n    summary-row\n    column-resize\n    column-reorder\n    toolbar\n    row-selection\n    show-sort-icon-on-hover\n    full-width=\"false\"\n    [pageSizeList]=\"pageSizes\"\n    [displayOptions]=\"displayOptions\"\n    max-height=\"500px\"\n    max-width=\"800px\"\n    [columns]=\"defaultColumns\"\n    [data]=\"data\"\n    [toolbarOptions]=\"toolbarOptions\"\n    [rowSelectionOptions]=\"rowSelectionOptions\"></modus-table>`,\n})\nexport class ModusTableExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  rowSelectionOptions = {\n    multiple: true,\n    subRowSelection: true,\n  } as ModusTableRowSelectionOptions;\n  toolbarOptions = {\n    columnsVisibility: {\n      title: '',\n      requiredColumns: ['age', 'visits'],\n    } as ModusTableColumnsVisibilityOptions,\n  } as ModusTableToolbarOptions;\n  data = makeData(10000, 1, 1);\n  displayOptions = {\n    borderless: true,\n    cellBorderless: false,\n  } as ModusTableDisplayOptions;\n  pageSizes = [7, 10, 20];\n  defaultColumns: ModusTableColumn<unknown>[] = [\n    {\n      header: 'First Name',\n      accessorKey: 'firstName',\n      id: 'first-name',\n      dataType: 'text',\n      size: 150,\n      minSize: 80,\n      footer: 'Total',\n    },\n    {\n      header: 'Last Name',\n      accessorKey: 'lastName',\n      id: 'last-name',\n      dataType: 'text',\n      size: 150,\n      minSize: 80,\n    },\n    {\n      header: 'Age',\n      accessorKey: 'age',\n      id: 'age',\n      dataType: 'integer',\n      size: 80,\n      minSize: 60,\n    },\n    {\n      header: 'Visits',\n      accessorKey: 'visits',\n      id: 'visits',\n      dataType: 'integer',\n      showTotal: true,\n      minSize: 80,\n      cell: function formatNumber({ cell }: any) {\n        return `$${Number(cell.getValue())\n          .toFixed(2)\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}`;\n      },\n    },\n    {\n      header: 'Email',\n      accessorKey: 'email',\n      id: 'email',\n      dataType: 'link',\n      size: 230,\n      minSize: 80,\n      sortingFn: 'sortForHyperlink',\n    },\n    {\n      header: 'Status',\n      accessorKey: 'status',\n      id: 'status',\n      dataType: 'text',\n      minSize: 80,\n    },\n    {\n      header: 'Profile Progress',\n      accessorKey: 'progress',\n      id: 'progress',\n      dataType: 'integer',\n      minSize: 100,\n    },\n    {\n      header: 'Created At',\n      accessorKey: 'createdAt',\n      id: 'createdAt',\n      dataType: 'text',\n      size: 150,\n      minSize: 150,\n    },\n  ];\n}\n"
    },
    "modus-chip-examples": {
      "modus-chip-examples.component.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { ModusChipExamplesComponent } from './modus-chip-examples.component';\n\ndescribe('ModusChipExamplesComponent', () => {\n  let component: ModusChipExamplesComponent;\n  let fixture: ComponentFixture<ModusChipExamplesComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ ModusChipExamplesComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(ModusChipExamplesComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
      "modus-chip-examples.component.ts": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modus-chip-examples',\n  template: `\n    <h3>Chips</h3>\n    <modus-chip image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></modus-chip>\n    <modus-chip has-error image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></modus-chip>\n    <modus-chip disabled image-url=\"https://example.com/image.jpg\" show-close value=\"Bryan\"></modus-chip>\n\n    <modus-chip image-url=\"https://example.com/image.jpg\" show-close chip-style=\"outline\" value=\"Bryan\"></modus-chip>\n    <modus-chip\n      has-error\n      image-url=\"https://example.com/image.jpg\"\n      show-close\n      chip-style=\"outline\"\n      value=\"Bryan\"></modus-chip>\n    <modus-chip\n      disabled\n      image-url=\"https://example.com/image.jpg\"\n      show-close\n      chip-style=\"outline\"\n      value=\"Bryan\"></modus-chip>\n\n    <modus-chip show-checkmark size=\"small\" value=\"Pets OK\"></modus-chip>\n  `,\n})\nexport class ModusChipExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"
    }
  }
}