{
  "documentation": "import { Meta } from '@storybook/blocks';\n\n<Meta title=\"Documentation/Frameworks/React\" />\n\n# React Framework Integration\n\nThis guide will help you get started with consuming the Modus React Web Component library in your React project.\n\nWe highly recommend using the Modus React Components library for React based projects.\nThese components are automatically generated using the Stencil React Framework Integration.\n\nFollow the steps outlined below to integrate and use Modus React Web Components effectively.\n\nPlease refer to the [official stencil documentation](https://stenciljs.com/docs/react#consumer-usage) for more information on how to integrate with your React project.\n\n## Usage\n\nModus React Components have a peer dependency with Modus Web Components and require the\ninstallation of both packages.\n\n### 1. Install `modus-wc-react`:\n\nEnsure that you specify the target version of React for the `modus-wc-react` package (e.g., `react18` for React 18).\n\n<b>\n  Lock the installed package versions to avoid unintended breakages on future\n  npm installs.\n</b>\n\n```bash\nnpm install @trimble-oss/moduswebcomponents-react@<latest-version>-react<target-version>\n# e.g.,\nnpm install @trimble-oss/moduswebcomponents-react@1.0.0-react18\n```\n\n### 2. Set up the styling:\n\nYou will need to import our styling in your main JavaScript or CSS file:\n\n```js\nimport '@trimble-oss/moduswebcomponents/modus-wc-styles.css';\n```\n\n### 3. Use the component library as normal.\n\n```tsx\nimport { ModusWcBadge } from '@trimble-oss/moduswebcomponents-react';\n\n<ModusWcBadge aria-label=\"Badge\" content=\"Words\" />;\n```\n\n### Using the Controlled Input Pattern\n\nThe controlled input pattern involves maintaining the state of the input's value within the React application or\ncomponent. The [React Docs](https://react.dev/reference/react-dom/components/input#controlling-an-input-with-a-state-variable)\ndescribe this in more detail.\n\n```tsx\nimport React, { useState } from 'react';\nimport { ModusWcTextInput } from '@trimble-oss/moduswebcomponents-react';\n\ninterface Props extends React.ComponentProps<typeof ModusWcTextInput> {}\n\nconst MyComponent: React.FC<Props> = (props) => {\n  const [value, setValue] = useState('');\n\n  const handleInputChange = (\n    e: CustomEvent<HTMLModusWcTextInputElementEventMap['inputChange']>\n  ) => {\n    const value = e.detail.target.value;\n    setValue(value);\n  };\n\n  return (\n    <ModusWcTextInput\n      {...props}\n      onInputChange={handleInputChange}\n      value={value}\n    />\n  );\n};\n\nexport default MyComponent;\n```\n\n### Wrapping Components\n\nWhen using Modus React Components directly, it is recommended to wrap it in corresponding React components within your application.\nThis will abstract away from the library dependency, allowing more flexibility for you and your application in the future.\n\nWrapped Modus component example:\n\n```tsx\nimport React from 'react';\nimport { ModusWcAvatar } from '@trimble-oss/moduswebcomponents-react';\n\ninterface Props extends React.ComponentProps<typeof ModusWcAvatar> {}\n\nconst Avatar: React.FC<Props> = (props) => {\n  return <ModusWcAvatar {...props} />;\n};\n\nexport default Avatar;\n```\n\nor, a more complex wrapper:\n\n```tsx\nimport React from 'react';\nimport { ModusWcTextInput } from '@trimble-oss/moduswebcomponents-react';\n\ninterface Props\n  extends Omit<React.ComponentProps<typeof ModusWcTextInput>, 'inputChange'> {\n  onValueChange: (value: string) => void;\n}\n\nconst TextInput: React.FC<Props> = (props) => {\n  const handleInputChange = (\n    e: CustomEvent<HTMLModusWcTextInputElementEventMap['inputChange']>\n  ) => {\n    const value = e.detail.target.value;\n    props.onValueChange(value);\n  };\n\n  return <ModusWcTextInput {...props} onInputChange={handleInputChange} />;\n};\n\nexport default TextInput;\n```\n",
  "examples": {
    "index.tsx": "export { default as Badge } from \"./ModusBadgeExamples\";\nexport { default as Icon } from \"./ModusIconExamples\";\n",
    "ModusBadgeExamples.tsx": "import { ModusWcBadge as ModusBadge } from \"@trimble-oss/moduswebcomponents-react\";\n\nexport default function ModusBadgeExamples() {\n\treturn (\n\t\t<>\n\t\t\t<h3>Badge</h3>\n\t\t\t<div className=\"grid\">\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\tFilled\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\">Default</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"secondary\">Secondary</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"tertiary\">Tertiary</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"high-contrast\">High Contrast</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"success\">Success</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"warning\">Warning</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"danger\">Danger</ModusBadge>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\tFilled Sizes\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"sm\">Small</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"md\">Medium</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"lg\">Large</ModusBadge>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\tCounter\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" variant=\"counter\">1</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"secondary\" variant=\"counter\">2</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"tertiary\" variant=\"counter\">3</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"high-contrast\" variant=\"counter\">4</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"success\" variant=\"counter\">5</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"warning\" variant=\"counter\">6</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"danger\" variant=\"counter\">7</ModusBadge>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\tCounter Sizes\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"sm\" variant=\"counter\">\n\t\t\t\t\t\tSmall&nbsp;\n\t\t\t\t\t</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"md\" variant=\"counter\">\n\t\t\t\t\t\tMedium&nbsp;\n\t\t\t\t\t</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"lg\" variant=\"counter\">\n\t\t\t\t\t\tLarge&nbsp;\n\t\t\t\t\t</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"lg\" variant=\"counter\">22</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"lg\" variant=\"counter\">333</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"lg\" variant=\"counter\">4444</ModusBadge>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\tText\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" variant=\"text\">Primary</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"secondary\" variant=\"text\">Secondary</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"tertiary\" variant=\"text\">Tertiary</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"high-contrast\" variant=\"text\">High Contrast</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"success\" variant=\"text\">Success</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"warning\" variant=\"text\">Warning</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" color=\"danger\" variant=\"text\">Danger</ModusBadge>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\tText Sizes\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"sm\" variant=\"text\">Small</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"md\" variant=\"text\">Medium</ModusBadge>\n\t\t\t\t\t<ModusBadge aria-label=\"Badge\" size=\"lg\" variant=\"text\">Large</ModusBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n",
    "ModusIconExamples.tsx": "import { ModusWcIcon as ModusIcon } from \"@trimble-oss/moduswebcomponents-react\";\n\nexport default function ModusBadgeExamples() {\n\treturn (\n\t\t<>\n\t\t\t<h3>Icon</h3>\n\t\t\t<div className=\"grid\">\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\t<ModusIcon aria-label=\"Alert icon\" name=\"alert\" />\n\t\t\t\t\t<ModusIcon aria-label=\"Accessible\" name=\"accessibility_circle\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\tSmall <ModusIcon aria-label=\"Alert icon\" name=\"alert\" size=\"sm\" />\n\t\t\t\t\tMedium <ModusIcon aria-label=\"Alert icon\" name=\"alert\" size=\"md\" />\n\t\t\t\t\tLarge <ModusIcon aria-label=\"Alert icon\" name=\"alert\" size=\"lg\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\t<ModusIcon name=\"file_new\" decorative />\n\t\t\t\t\t<ModusIcon name=\"file_type_pdf\" decorative />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"grid-row\">\n\t\t\t\t\t<ModusIcon\n\t\t\t\t\t\tname=\"add_bold\"\n\t\t\t\t\t\tdecorative\n\t\t\t\t\t\tstyle={{ color: \"var(--modus-wc-color-trimble-blue)\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<ModusIcon\n\t\t\t\t\t\tname=\"add_bold\"\n\t\t\t\t\t\tdecorative\n\t\t\t\t\t\tstyle={{ color: \"var(--modus-wc-color-red)\" }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"
  }
}